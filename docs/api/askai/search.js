window.pdocSearch = (function(){
/** elasticlunr - http://weixsong.github.io * Copyright (C) 2017 Oliver Nightingale * Copyright (C) 2017 Wei Song * MIT Licensed */!function(){function e(e){if(null===e||"object"!=typeof e)return e;var t=e.constructor();for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t}var t=function(e){var n=new t.Index;return n.pipeline.add(t.trimmer,t.stopWordFilter,t.stemmer),e&&e.call(n,n),n};t.version="0.9.5",lunr=t,t.utils={},t.utils.warn=function(e){return function(t){e.console&&console.warn&&console.warn(t)}}(this),t.utils.toString=function(e){return void 0===e||null===e?"":e.toString()},t.EventEmitter=function(){this.events={}},t.EventEmitter.prototype.addListener=function(){var e=Array.prototype.slice.call(arguments),t=e.pop(),n=e;if("function"!=typeof t)throw new TypeError("last argument must be a function");n.forEach(function(e){this.hasHandler(e)||(this.events[e]=[]),this.events[e].push(t)},this)},t.EventEmitter.prototype.removeListener=function(e,t){if(this.hasHandler(e)){var n=this.events[e].indexOf(t);-1!==n&&(this.events[e].splice(n,1),0==this.events[e].length&&delete this.events[e])}},t.EventEmitter.prototype.emit=function(e){if(this.hasHandler(e)){var t=Array.prototype.slice.call(arguments,1);this.events[e].forEach(function(e){e.apply(void 0,t)},this)}},t.EventEmitter.prototype.hasHandler=function(e){return e in this.events},t.tokenizer=function(e){if(!arguments.length||null===e||void 0===e)return[];if(Array.isArray(e)){var n=e.filter(function(e){return null===e||void 0===e?!1:!0});n=n.map(function(e){return t.utils.toString(e).toLowerCase()});var i=[];return n.forEach(function(e){var n=e.split(t.tokenizer.seperator);i=i.concat(n)},this),i}return e.toString().trim().toLowerCase().split(t.tokenizer.seperator)},t.tokenizer.defaultSeperator=/[\s\-]+/,t.tokenizer.seperator=t.tokenizer.defaultSeperator,t.tokenizer.setSeperator=function(e){null!==e&&void 0!==e&&"object"==typeof e&&(t.tokenizer.seperator=e)},t.tokenizer.resetSeperator=function(){t.tokenizer.seperator=t.tokenizer.defaultSeperator},t.tokenizer.getSeperator=function(){return t.tokenizer.seperator},t.Pipeline=function(){this._queue=[]},t.Pipeline.registeredFunctions={},t.Pipeline.registerFunction=function(e,n){n in t.Pipeline.registeredFunctions&&t.utils.warn("Overwriting existing registered function: "+n),e.label=n,t.Pipeline.registeredFunctions[n]=e},t.Pipeline.getRegisteredFunction=function(e){return e in t.Pipeline.registeredFunctions!=!0?null:t.Pipeline.registeredFunctions[e]},t.Pipeline.warnIfFunctionNotRegistered=function(e){var n=e.label&&e.label in this.registeredFunctions;n||t.utils.warn("Function is not registered with pipeline. This may cause problems when serialising the index.\n",e)},t.Pipeline.load=function(e){var n=new t.Pipeline;return e.forEach(function(e){var i=t.Pipeline.getRegisteredFunction(e);if(!i)throw new Error("Cannot load un-registered function: "+e);n.add(i)}),n},t.Pipeline.prototype.add=function(){var e=Array.prototype.slice.call(arguments);e.forEach(function(e){t.Pipeline.warnIfFunctionNotRegistered(e),this._queue.push(e)},this)},t.Pipeline.prototype.after=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i+1,0,n)},t.Pipeline.prototype.before=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i,0,n)},t.Pipeline.prototype.remove=function(e){var t=this._queue.indexOf(e);-1!==t&&this._queue.splice(t,1)},t.Pipeline.prototype.run=function(e){for(var t=[],n=e.length,i=this._queue.length,o=0;n>o;o++){for(var r=e[o],s=0;i>s&&(r=this._queue[s](r,o,e),void 0!==r&&null!==r);s++);void 0!==r&&null!==r&&t.push(r)}return t},t.Pipeline.prototype.reset=function(){this._queue=[]},t.Pipeline.prototype.get=function(){return this._queue},t.Pipeline.prototype.toJSON=function(){return this._queue.map(function(e){return t.Pipeline.warnIfFunctionNotRegistered(e),e.label})},t.Index=function(){this._fields=[],this._ref="id",this.pipeline=new t.Pipeline,this.documentStore=new t.DocumentStore,this.index={},this.eventEmitter=new t.EventEmitter,this._idfCache={},this.on("add","remove","update",function(){this._idfCache={}}.bind(this))},t.Index.prototype.on=function(){var e=Array.prototype.slice.call(arguments);return this.eventEmitter.addListener.apply(this.eventEmitter,e)},t.Index.prototype.off=function(e,t){return this.eventEmitter.removeListener(e,t)},t.Index.load=function(e){e.version!==t.version&&t.utils.warn("version mismatch: current "+t.version+" importing "+e.version);var n=new this;n._fields=e.fields,n._ref=e.ref,n.documentStore=t.DocumentStore.load(e.documentStore),n.pipeline=t.Pipeline.load(e.pipeline),n.index={};for(var i in e.index)n.index[i]=t.InvertedIndex.load(e.index[i]);return n},t.Index.prototype.addField=function(e){return this._fields.push(e),this.index[e]=new t.InvertedIndex,this},t.Index.prototype.setRef=function(e){return this._ref=e,this},t.Index.prototype.saveDocument=function(e){return this.documentStore=new t.DocumentStore(e),this},t.Index.prototype.addDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.addDoc(i,e),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));this.documentStore.addFieldLength(i,n,o.length);var r={};o.forEach(function(e){e in r?r[e]+=1:r[e]=1},this);for(var s in r){var u=r[s];u=Math.sqrt(u),this.index[n].addToken(s,{ref:i,tf:u})}},this),n&&this.eventEmitter.emit("add",e,this)}},t.Index.prototype.removeDocByRef=function(e){if(e&&this.documentStore.isDocStored()!==!1&&this.documentStore.hasDoc(e)){var t=this.documentStore.getDoc(e);this.removeDoc(t,!1)}},t.Index.prototype.removeDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.hasDoc(i)&&(this.documentStore.removeDoc(i),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));o.forEach(function(e){this.index[n].removeToken(e,i)},this)},this),n&&this.eventEmitter.emit("remove",e,this))}},t.Index.prototype.updateDoc=function(e,t){var t=void 0===t?!0:t;this.removeDocByRef(e[this._ref],!1),this.addDoc(e,!1),t&&this.eventEmitter.emit("update",e,this)},t.Index.prototype.idf=function(e,t){var n="@"+t+"/"+e;if(Object.prototype.hasOwnProperty.call(this._idfCache,n))return this._idfCache[n];var i=this.index[t].getDocFreq(e),o=1+Math.log(this.documentStore.length/(i+1));return this._idfCache[n]=o,o},t.Index.prototype.getFields=function(){return this._fields.slice()},t.Index.prototype.search=function(e,n){if(!e)return[];e="string"==typeof e?{any:e}:JSON.parse(JSON.stringify(e));var i=null;null!=n&&(i=JSON.stringify(n));for(var o=new t.Configuration(i,this.getFields()).get(),r={},s=Object.keys(e),u=0;u<s.length;u++){var a=s[u];r[a]=this.pipeline.run(t.tokenizer(e[a]))}var l={};for(var c in o){var d=r[c]||r.any;if(d){var f=this.fieldSearch(d,c,o),h=o[c].boost;for(var p in f)f[p]=f[p]*h;for(var p in f)p in l?l[p]+=f[p]:l[p]=f[p]}}var v,g=[];for(var p in l)v={ref:p,score:l[p]},this.documentStore.hasDoc(p)&&(v.doc=this.documentStore.getDoc(p)),g.push(v);return g.sort(function(e,t){return t.score-e.score}),g},t.Index.prototype.fieldSearch=function(e,t,n){var i=n[t].bool,o=n[t].expand,r=n[t].boost,s=null,u={};return 0!==r?(e.forEach(function(e){var n=[e];1==o&&(n=this.index[t].expandToken(e));var r={};n.forEach(function(n){var o=this.index[t].getDocs(n),a=this.idf(n,t);if(s&&"AND"==i){var l={};for(var c in s)c in o&&(l[c]=o[c]);o=l}n==e&&this.fieldSearchStats(u,n,o);for(var c in o){var d=this.index[t].getTermFrequency(n,c),f=this.documentStore.getFieldLength(c,t),h=1;0!=f&&(h=1/Math.sqrt(f));var p=1;n!=e&&(p=.15*(1-(n.length-e.length)/n.length));var v=d*a*h*p;c in r?r[c]+=v:r[c]=v}},this),s=this.mergeScores(s,r,i)},this),s=this.coordNorm(s,u,e.length)):void 0},t.Index.prototype.mergeScores=function(e,t,n){if(!e)return t;if("AND"==n){var i={};for(var o in t)o in e&&(i[o]=e[o]+t[o]);return i}for(var o in t)o in e?e[o]+=t[o]:e[o]=t[o];return e},t.Index.prototype.fieldSearchStats=function(e,t,n){for(var i in n)i in e?e[i].push(t):e[i]=[t]},t.Index.prototype.coordNorm=function(e,t,n){for(var i in e)if(i in t){var o=t[i].length;e[i]=e[i]*o/n}return e},t.Index.prototype.toJSON=function(){var e={};return this._fields.forEach(function(t){e[t]=this.index[t].toJSON()},this),{version:t.version,fields:this._fields,ref:this._ref,documentStore:this.documentStore.toJSON(),index:e,pipeline:this.pipeline.toJSON()}},t.Index.prototype.use=function(e){var t=Array.prototype.slice.call(arguments,1);t.unshift(this),e.apply(this,t)},t.DocumentStore=function(e){this._save=null===e||void 0===e?!0:e,this.docs={},this.docInfo={},this.length=0},t.DocumentStore.load=function(e){var t=new this;return t.length=e.length,t.docs=e.docs,t.docInfo=e.docInfo,t._save=e.save,t},t.DocumentStore.prototype.isDocStored=function(){return this._save},t.DocumentStore.prototype.addDoc=function(t,n){this.hasDoc(t)||this.length++,this.docs[t]=this._save===!0?e(n):null},t.DocumentStore.prototype.getDoc=function(e){return this.hasDoc(e)===!1?null:this.docs[e]},t.DocumentStore.prototype.hasDoc=function(e){return e in this.docs},t.DocumentStore.prototype.removeDoc=function(e){this.hasDoc(e)&&(delete this.docs[e],delete this.docInfo[e],this.length--)},t.DocumentStore.prototype.addFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&(this.docInfo[e]||(this.docInfo[e]={}),this.docInfo[e][t]=n)},t.DocumentStore.prototype.updateFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&this.addFieldLength(e,t,n)},t.DocumentStore.prototype.getFieldLength=function(e,t){return null===e||void 0===e?0:e in this.docs&&t in this.docInfo[e]?this.docInfo[e][t]:0},t.DocumentStore.prototype.toJSON=function(){return{docs:this.docs,docInfo:this.docInfo,length:this.length,save:this._save}},t.stemmer=function(){var e={ational:"ate",tional:"tion",enci:"ence",anci:"ance",izer:"ize",bli:"ble",alli:"al",entli:"ent",eli:"e",ousli:"ous",ization:"ize",ation:"ate",ator:"ate",alism:"al",iveness:"ive",fulness:"ful",ousness:"ous",aliti:"al",iviti:"ive",biliti:"ble",logi:"log"},t={icate:"ic",ative:"",alize:"al",iciti:"ic",ical:"ic",ful:"",ness:""},n="[^aeiou]",i="[aeiouy]",o=n+"[^aeiouy]*",r=i+"[aeiou]*",s="^("+o+")?"+r+o,u="^("+o+")?"+r+o+"("+r+")?$",a="^("+o+")?"+r+o+r+o,l="^("+o+")?"+i,c=new RegExp(s),d=new RegExp(a),f=new RegExp(u),h=new RegExp(l),p=/^(.+?)(ss|i)es$/,v=/^(.+?)([^s])s$/,g=/^(.+?)eed$/,m=/^(.+?)(ed|ing)$/,y=/.$/,S=/(at|bl|iz)$/,x=new RegExp("([^aeiouylsz])\\1$"),w=new RegExp("^"+o+i+"[^aeiouwxy]$"),I=/^(.+?[^aeiou])y$/,b=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,E=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,D=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,F=/^(.+?)(s|t)(ion)$/,_=/^(.+?)e$/,P=/ll$/,k=new RegExp("^"+o+i+"[^aeiouwxy]$"),z=function(n){var i,o,r,s,u,a,l;if(n.length<3)return n;if(r=n.substr(0,1),"y"==r&&(n=r.toUpperCase()+n.substr(1)),s=p,u=v,s.test(n)?n=n.replace(s,"$1$2"):u.test(n)&&(n=n.replace(u,"$1$2")),s=g,u=m,s.test(n)){var z=s.exec(n);s=c,s.test(z[1])&&(s=y,n=n.replace(s,""))}else if(u.test(n)){var z=u.exec(n);i=z[1],u=h,u.test(i)&&(n=i,u=S,a=x,l=w,u.test(n)?n+="e":a.test(n)?(s=y,n=n.replace(s,"")):l.test(n)&&(n+="e"))}if(s=I,s.test(n)){var z=s.exec(n);i=z[1],n=i+"i"}if(s=b,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+e[o])}if(s=E,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+t[o])}if(s=D,u=F,s.test(n)){var z=s.exec(n);i=z[1],s=d,s.test(i)&&(n=i)}else if(u.test(n)){var z=u.exec(n);i=z[1]+z[2],u=d,u.test(i)&&(n=i)}if(s=_,s.test(n)){var z=s.exec(n);i=z[1],s=d,u=f,a=k,(s.test(i)||u.test(i)&&!a.test(i))&&(n=i)}return s=P,u=d,s.test(n)&&u.test(n)&&(s=y,n=n.replace(s,"")),"y"==r&&(n=r.toLowerCase()+n.substr(1)),n};return z}(),t.Pipeline.registerFunction(t.stemmer,"stemmer"),t.stopWordFilter=function(e){return e&&t.stopWordFilter.stopWords[e]!==!0?e:void 0},t.clearStopWords=function(){t.stopWordFilter.stopWords={}},t.addStopWords=function(e){null!=e&&Array.isArray(e)!==!1&&e.forEach(function(e){t.stopWordFilter.stopWords[e]=!0},this)},t.resetStopWords=function(){t.stopWordFilter.stopWords=t.defaultStopWords},t.defaultStopWords={"":!0,a:!0,able:!0,about:!0,across:!0,after:!0,all:!0,almost:!0,also:!0,am:!0,among:!0,an:!0,and:!0,any:!0,are:!0,as:!0,at:!0,be:!0,because:!0,been:!0,but:!0,by:!0,can:!0,cannot:!0,could:!0,dear:!0,did:!0,"do":!0,does:!0,either:!0,"else":!0,ever:!0,every:!0,"for":!0,from:!0,get:!0,got:!0,had:!0,has:!0,have:!0,he:!0,her:!0,hers:!0,him:!0,his:!0,how:!0,however:!0,i:!0,"if":!0,"in":!0,into:!0,is:!0,it:!0,its:!0,just:!0,least:!0,let:!0,like:!0,likely:!0,may:!0,me:!0,might:!0,most:!0,must:!0,my:!0,neither:!0,no:!0,nor:!0,not:!0,of:!0,off:!0,often:!0,on:!0,only:!0,or:!0,other:!0,our:!0,own:!0,rather:!0,said:!0,say:!0,says:!0,she:!0,should:!0,since:!0,so:!0,some:!0,than:!0,that:!0,the:!0,their:!0,them:!0,then:!0,there:!0,these:!0,they:!0,"this":!0,tis:!0,to:!0,too:!0,twas:!0,us:!0,wants:!0,was:!0,we:!0,were:!0,what:!0,when:!0,where:!0,which:!0,"while":!0,who:!0,whom:!0,why:!0,will:!0,"with":!0,would:!0,yet:!0,you:!0,your:!0},t.stopWordFilter.stopWords=t.defaultStopWords,t.Pipeline.registerFunction(t.stopWordFilter,"stopWordFilter"),t.trimmer=function(e){if(null===e||void 0===e)throw new Error("token should not be undefined");return e.replace(/^\W+/,"").replace(/\W+$/,"")},t.Pipeline.registerFunction(t.trimmer,"trimmer"),t.InvertedIndex=function(){this.root={docs:{},df:0}},t.InvertedIndex.load=function(e){var t=new this;return t.root=e.root,t},t.InvertedIndex.prototype.addToken=function(e,t,n){for(var n=n||this.root,i=0;i<=e.length-1;){var o=e[i];o in n||(n[o]={docs:{},df:0}),i+=1,n=n[o]}var r=t.ref;n.docs[r]?n.docs[r]={tf:t.tf}:(n.docs[r]={tf:t.tf},n.df+=1)},t.InvertedIndex.prototype.hasToken=function(e){if(!e)return!1;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return!1;t=t[e[n]]}return!0},t.InvertedIndex.prototype.getNode=function(e){if(!e)return null;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return null;t=t[e[n]]}return t},t.InvertedIndex.prototype.getDocs=function(e){var t=this.getNode(e);return null==t?{}:t.docs},t.InvertedIndex.prototype.getTermFrequency=function(e,t){var n=this.getNode(e);return null==n?0:t in n.docs?n.docs[t].tf:0},t.InvertedIndex.prototype.getDocFreq=function(e){var t=this.getNode(e);return null==t?0:t.df},t.InvertedIndex.prototype.removeToken=function(e,t){if(e){var n=this.getNode(e);null!=n&&t in n.docs&&(delete n.docs[t],n.df-=1)}},t.InvertedIndex.prototype.expandToken=function(e,t,n){if(null==e||""==e)return[];var t=t||[];if(void 0==n&&(n=this.getNode(e),null==n))return t;n.df>0&&t.push(e);for(var i in n)"docs"!==i&&"df"!==i&&this.expandToken(e+i,t,n[i]);return t},t.InvertedIndex.prototype.toJSON=function(){return{root:this.root}},t.Configuration=function(e,n){var e=e||"";if(void 0==n||null==n)throw new Error("fields should not be null");this.config={};var i;try{i=JSON.parse(e),this.buildUserConfig(i,n)}catch(o){t.utils.warn("user configuration parse failed, will use default configuration"),this.buildDefaultConfig(n)}},t.Configuration.prototype.buildDefaultConfig=function(e){this.reset(),e.forEach(function(e){this.config[e]={boost:1,bool:"OR",expand:!1}},this)},t.Configuration.prototype.buildUserConfig=function(e,n){var i="OR",o=!1;if(this.reset(),"bool"in e&&(i=e.bool||i),"expand"in e&&(o=e.expand||o),"fields"in e)for(var r in e.fields)if(n.indexOf(r)>-1){var s=e.fields[r],u=o;void 0!=s.expand&&(u=s.expand),this.config[r]={boost:s.boost||0===s.boost?s.boost:1,bool:s.bool||i,expand:u}}else t.utils.warn("field name in user configuration not found in index instance fields");else this.addAllFields2UserConfig(i,o,n)},t.Configuration.prototype.addAllFields2UserConfig=function(e,t,n){n.forEach(function(n){this.config[n]={boost:1,bool:e,expand:t}},this)},t.Configuration.prototype.get=function(){return this.config},t.Configuration.prototype.reset=function(){this.config={}},lunr.SortedSet=function(){this.length=0,this.elements=[]},lunr.SortedSet.load=function(e){var t=new this;return t.elements=e,t.length=e.length,t},lunr.SortedSet.prototype.add=function(){var e,t;for(e=0;e<arguments.length;e++)t=arguments[e],~this.indexOf(t)||this.elements.splice(this.locationFor(t),0,t);this.length=this.elements.length},lunr.SortedSet.prototype.toArray=function(){return this.elements.slice()},lunr.SortedSet.prototype.map=function(e,t){return this.elements.map(e,t)},lunr.SortedSet.prototype.forEach=function(e,t){return this.elements.forEach(e,t)},lunr.SortedSet.prototype.indexOf=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;){if(r===e)return o;e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o]}return r===e?o:-1},lunr.SortedSet.prototype.locationFor=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;)e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o];return r>e?o:e>r?o+1:void 0},lunr.SortedSet.prototype.intersect=function(e){for(var t=new lunr.SortedSet,n=0,i=0,o=this.length,r=e.length,s=this.elements,u=e.elements;;){if(n>o-1||i>r-1)break;s[n]!==u[i]?s[n]<u[i]?n++:s[n]>u[i]&&i++:(t.add(s[n]),n++,i++)}return t},lunr.SortedSet.prototype.clone=function(){var e=new lunr.SortedSet;return e.elements=this.toArray(),e.length=e.elements.length,e},lunr.SortedSet.prototype.union=function(e){var t,n,i;this.length>=e.length?(t=this,n=e):(t=e,n=this),i=t.clone();for(var o=0,r=n.toArray();o<r.length;o++)i.add(r[o]);return i},lunr.SortedSet.prototype.toJSON=function(){return this.toArray()},function(e,t){"function"==typeof define&&define.amd?define(t):"object"==typeof exports?module.exports=t():e.elasticlunr=t()}(this,function(){return t})}();
    /** pdoc search index */const docs = [{"fullname": "main.askai", "modulename": "main.askai", "kind": "module", "doc": "<p>Package initialization.</p>\n"}, {"fullname": "main.askai.core", "modulename": "main.askai.core", "kind": "module", "doc": "<p>Package initialization.</p>\n"}, {"fullname": "main.askai.core.askai", "modulename": "main.askai.core.askai", "kind": "module", "doc": "<p>@project: HsPyLib-AskAI\n@package: askai.core\n   @file: askai.py\n@created: Fri, 5 Jan 2024\n @author: <B>H</B>ugo <B>S</B>aporetti <B>J</B>unior\n   @site: <a href=\"https://github.com/yorevs/askai\">https://github.com/yorevs/askai</a>\n@license: MIT - Please refer to <a href=\"https://opensource.org/licenses/MIT\">https://opensource.org/licenses/MIT</a></p>\n\n<p>Copyright (c) 2024, AskAI</p>\n"}, {"fullname": "main.askai.core.askai.QueryString", "modulename": "main.askai.core.askai", "qualname": "QueryString", "kind": "variable", "doc": "<p></p>\n", "annotation": ": TypeAlias", "default_value": "Union[str, List[str], NoneType]"}, {"fullname": "main.askai.core.askai.AskAi", "modulename": "main.askai.core.askai", "qualname": "AskAi", "kind": "class", "doc": "<p>The AskAI core functionalities.</p>\n"}, {"fullname": "main.askai.core.askai.AskAi.__init__", "modulename": "main.askai.core.askai", "qualname": "AskAi.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">speak</span><span class=\"p\">:</span> <span class=\"nb\">bool</span>,</span><span class=\"param\">\t<span class=\"n\">debug</span><span class=\"p\">:</span> <span class=\"nb\">bool</span>,</span><span class=\"param\">\t<span class=\"n\">cacheable</span><span class=\"p\">:</span> <span class=\"nb\">bool</span>,</span><span class=\"param\">\t<span class=\"n\">tempo</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">engine_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">model_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">mode</span><span class=\"p\">:</span> <span class=\"n\">askai</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">enums</span><span class=\"o\">.</span><span class=\"n\">router_mode</span><span class=\"o\">.</span><span class=\"n\">RouterMode</span></span>)</span>"}, {"fullname": "main.askai.core.askai.AskAi.SOURCE_DIR", "modulename": "main.askai.core.askai", "qualname": "AskAi.SOURCE_DIR", "kind": "variable", "doc": "<p></p>\n", "annotation": ": pathlib.Path", "default_value": "PosixPath(&#x27;/Users/hjunior/GIT-Repository/GitHub/askai/src/main/askai&#x27;)"}, {"fullname": "main.askai.core.askai.AskAi.RESOURCE_DIR", "modulename": "main.askai.core.askai", "qualname": "AskAi.RESOURCE_DIR", "kind": "variable", "doc": "<p></p>\n", "annotation": ": pathlib.Path", "default_value": "PosixPath(&#x27;/Users/hjunior/GIT-Repository/GitHub/askai/src/main/askai/resources&#x27;)"}, {"fullname": "main.askai.core.askai.AskAi.SPLASH", "modulename": "main.askai.core.askai", "qualname": "AskAi.SPLASH", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&quot;          ################\\n     ###                   ###\\n   ##       #####   ###      ##\\n   #  #######  #   ########   ###\\n  ### #  ####  #   ######    ##  #\\n  ### # ##    ( )   ####    ## ### #\\n ##  ( ) # ##     ##########  #      #\\n  _                    _ _\\n | |    ___   __ _  __| (_)_ __   __ _\\n | |   / _ \\\\ / _` |/ _` | | &#x27;_ \\\\ / _` |\\n | |__| (_) | (_| | (_| | | | | | (_| |_ _ _\\n |_____\\\\___/ \\\\__,_|\\\\__,_|_|_| |_|\\\\__, (_|_|_)\\n                                   |___/\\n\\n #   #  ##  ## ### ################ ####\\n( ) ( )  ###  ###  ##############   #\\n         ###  #  ###  ############  #\\n         #          ###  ######## #\\n         #               ####     #\\n        ( )                  #####\\n\\n&quot;"}, {"fullname": "main.askai.core.askai.AskAi.engine", "modulename": "main.askai.core.askai", "qualname": "AskAi.engine", "kind": "variable", "doc": "<p></p>\n", "annotation": ": askai.core.engine.ai_engine.AIEngine"}, {"fullname": "main.askai.core.askai.AskAi.context", "modulename": "main.askai.core.askai", "qualname": "AskAi.context", "kind": "variable", "doc": "<p></p>\n", "annotation": ": askai.core.support.chat_context.ChatContext"}, {"fullname": "main.askai.core.askai.AskAi.mode", "modulename": "main.askai.core.askai", "qualname": "AskAi.mode", "kind": "variable", "doc": "<p></p>\n", "annotation": ": askai.core.enums.router_mode.RouterMode"}, {"fullname": "main.askai.core.askai.AskAi.query_prompt", "modulename": "main.askai.core.askai", "qualname": "AskAi.query_prompt", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "main.askai.core.askai.AskAi.console_path", "modulename": "main.askai.core.askai", "qualname": "AskAi.console_path", "kind": "variable", "doc": "<p></p>\n", "annotation": ": pathlib.Path"}, {"fullname": "main.askai.core.askai.AskAi.session_id", "modulename": "main.askai.core.askai", "qualname": "AskAi.session_id", "kind": "variable", "doc": "<p>Get the Session id.</p>\n", "annotation": ": str"}, {"fullname": "main.askai.core.askai.AskAi.app_settings", "modulename": "main.askai.core.askai", "qualname": "AskAi.app_settings", "kind": "variable", "doc": "<p></p>\n", "annotation": ": list[tuple[str, ...]]"}, {"fullname": "main.askai.core.askai.AskAi.run", "modulename": "main.askai.core.askai", "qualname": "AskAi.run", "kind": "function", "doc": "<p>Run the application.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.askai.AskAi.ask_and_reply", "modulename": "main.askai.core.askai", "qualname": "AskAi.ask_and_reply", "kind": "function", "doc": "<p>Ask the specified question to the AI and provide the reply.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>question</strong>:  The question to ask the AI engine.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A tuple containing a boolean indicating success or failure, and the AI's reply as an optional string.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">question</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.askai_cli", "modulename": "main.askai.core.askai_cli", "kind": "module", "doc": "<p>@project: HsPyLib-AskAI\n@package: askai.core\n   @file: askai_cli.py\n@created: Fri, 9 Aug 2024\n @author: <B>H</B>ugo <B>S</B>aporetti <B>J</B>unior\n   @site: <a href=\"https://github.com/yorevs/askai\">https://github.com/yorevs/askai</a>\n@license: MIT - Please refer to <a href=\"https://opensource.org/licenses/MIT\">https://opensource.org/licenses/MIT</a></p>\n\n<p>Copyright (c) 2024, AskAI</p>\n"}, {"fullname": "main.askai.core.askai_cli.QueryString", "modulename": "main.askai.core.askai_cli", "qualname": "QueryString", "kind": "variable", "doc": "<p></p>\n", "annotation": ": TypeAlias", "default_value": "Union[str, List[str], NoneType]"}, {"fullname": "main.askai.core.askai_cli.AskAiCli", "modulename": "main.askai.core.askai_cli", "qualname": "AskAiCli", "kind": "class", "doc": "<p>The AskAI CLI application.</p>\n", "bases": "askai.core.askai.AskAi"}, {"fullname": "main.askai.core.askai_cli.AskAiCli.__init__", "modulename": "main.askai.core.askai_cli", "qualname": "AskAiCli.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">speak</span><span class=\"p\">:</span> <span class=\"nb\">bool</span>,</span><span class=\"param\">\t<span class=\"n\">debug</span><span class=\"p\">:</span> <span class=\"nb\">bool</span>,</span><span class=\"param\">\t<span class=\"n\">cacheable</span><span class=\"p\">:</span> <span class=\"nb\">bool</span>,</span><span class=\"param\">\t<span class=\"n\">tempo</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">query_prompt</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">engine_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">model_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">query_string</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">mode</span><span class=\"p\">:</span> <span class=\"n\">askai</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">enums</span><span class=\"o\">.</span><span class=\"n\">router_mode</span><span class=\"o\">.</span><span class=\"n\">RouterMode</span></span>)</span>"}, {"fullname": "main.askai.core.askai_cli.AskAiCli.run", "modulename": "main.askai.core.askai_cli", "qualname": "AskAiCli.run", "kind": "function", "doc": "<p>Run the application.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.askai_configs", "modulename": "main.askai.core.askai_configs", "kind": "module", "doc": "<p>@project: HsPyLib-AskAI\n@package: askai.core.askai_configs\n   @file: askai_configs.py\n@created: Fri, 5 Jan 2024\n @author: <B>H</B>ugo <B>S</B>aporetti <B>J</B>unior\n   @site: <a href=\"https://github.com/yorevs/askai\">https://github.com/yorevs/askai</a>\n@license: MIT - Please refer to <a href=\"https://opensource.org/licenses/MIT\">https://opensource.org/licenses/MIT</a></p>\n\n<p>Copyright (c) 2024, AskAI</p>\n"}, {"fullname": "main.askai.core.askai_configs.AskAiConfigs", "modulename": "main.askai.core.askai_configs", "qualname": "AskAiConfigs", "kind": "class", "doc": "<p>Provides access to AskAI configurations.</p>\n", "bases": "typing.Type"}, {"fullname": "main.askai.core.askai_configs.AskAiConfigs.__init__", "modulename": "main.askai.core.askai_configs", "qualname": "AskAiConfigs.__init__", "kind": "function", "doc": "<p>Invoke the class constructor or return the instance if it exists.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, {"fullname": "main.askai.core.askai_configs.AskAiConfigs.RESOURCE_DIR", "modulename": "main.askai.core.askai_configs", "qualname": "AskAiConfigs.RESOURCE_DIR", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;/Users/hjunior/GIT-Repository/GitHub/askai/src/main/askai/resources&#x27;"}, {"fullname": "main.askai.core.askai_configs.AskAiConfigs.engine", "modulename": "main.askai.core.askai_configs", "qualname": "AskAiConfigs.engine", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "main.askai.core.askai_configs.AskAiConfigs.model", "modulename": "main.askai.core.askai_configs", "qualname": "AskAiConfigs.model", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "main.askai.core.askai_configs.AskAiConfigs.is_interactive", "modulename": "main.askai.core.askai_configs", "qualname": "AskAiConfigs.is_interactive", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "main.askai.core.askai_configs.AskAiConfigs.is_speak", "modulename": "main.askai.core.askai_configs", "qualname": "AskAiConfigs.is_speak", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "main.askai.core.askai_configs.AskAiConfigs.is_debug", "modulename": "main.askai.core.askai_configs", "qualname": "AskAiConfigs.is_debug", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "main.askai.core.askai_configs.AskAiConfigs.is_cache", "modulename": "main.askai.core.askai_configs", "qualname": "AskAiConfigs.is_cache", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "main.askai.core.askai_configs.AskAiConfigs.tempo", "modulename": "main.askai.core.askai_configs", "qualname": "AskAiConfigs.tempo", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "main.askai.core.askai_configs.AskAiConfigs.ttl", "modulename": "main.askai.core.askai_configs", "qualname": "AskAiConfigs.ttl", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "main.askai.core.askai_configs.AskAiConfigs.verbosity", "modulename": "main.askai.core.askai_configs", "qualname": "AskAiConfigs.verbosity", "kind": "variable", "doc": "<p></p>\n", "annotation": ": askai.core.enums.verbosity.Verbosity"}, {"fullname": "main.askai.core.askai_configs.AskAiConfigs.chunk_size", "modulename": "main.askai.core.askai_configs", "qualname": "AskAiConfigs.chunk_size", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "main.askai.core.askai_configs.AskAiConfigs.chunk_overlap", "modulename": "main.askai.core.askai_configs", "qualname": "AskAiConfigs.chunk_overlap", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "main.askai.core.askai_configs.AskAiConfigs.rag_retrival_amount", "modulename": "main.askai.core.askai_configs", "qualname": "AskAiConfigs.rag_retrival_amount", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "main.askai.core.askai_configs.AskAiConfigs.is_rag", "modulename": "main.askai.core.askai_configs", "qualname": "AskAiConfigs.is_rag", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "main.askai.core.askai_configs.AskAiConfigs.language", "modulename": "main.askai.core.askai_configs", "qualname": "AskAiConfigs.language", "kind": "variable", "doc": "<p>Lookup order: Settings -> Locale -> Environment.</p>\n", "annotation": ": askai.language.language.Language"}, {"fullname": "main.askai.core.askai_configs.AskAiConfigs.default_router_mode", "modulename": "main.askai.core.askai_configs", "qualname": "AskAiConfigs.default_router_mode", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "main.askai.core.askai_configs.AskAiConfigs.encoding", "modulename": "main.askai.core.askai_configs", "qualname": "AskAiConfigs.encoding", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hspylib.core.enums.charset.Charset"}, {"fullname": "main.askai.core.askai_configs.AskAiConfigs.max_iteractions", "modulename": "main.askai.core.askai_configs", "qualname": "AskAiConfigs.max_iteractions", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "main.askai.core.askai_configs.AskAiConfigs.max_short_memory_size", "modulename": "main.askai.core.askai_configs", "qualname": "AskAiConfigs.max_short_memory_size", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "main.askai.core.askai_configs.AskAiConfigs.max_router_retries", "modulename": "main.askai.core.askai_configs", "qualname": "AskAiConfigs.max_router_retries", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "main.askai.core.askai_configs.AskAiConfigs.max_agent_retries", "modulename": "main.askai.core.askai_configs", "qualname": "AskAiConfigs.max_agent_retries", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "main.askai.core.askai_configs.AskAiConfigs.max_agent_execution_time_seconds", "modulename": "main.askai.core.askai_configs", "qualname": "AskAiConfigs.max_agent_execution_time_seconds", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "main.askai.core.askai_configs.AskAiConfigs.face_detect_alg", "modulename": "main.askai.core.askai_configs", "qualname": "AskAiConfigs.face_detect_alg", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "main.askai.core.askai_configs.AskAiConfigs.scale_factor", "modulename": "main.askai.core.askai_configs", "qualname": "AskAiConfigs.scale_factor", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "main.askai.core.askai_configs.AskAiConfigs.min_neighbors", "modulename": "main.askai.core.askai_configs", "qualname": "AskAiConfigs.min_neighbors", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "main.askai.core.askai_configs.AskAiConfigs.min_max_size", "modulename": "main.askai.core.askai_configs", "qualname": "AskAiConfigs.min_max_size", "kind": "variable", "doc": "<p></p>\n", "annotation": ": tuple[int, ...]"}, {"fullname": "main.askai.core.askai_configs.AskAiConfigs.max_id_distance", "modulename": "main.askai.core.askai_configs", "qualname": "AskAiConfigs.max_id_distance", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "main.askai.core.askai_configs.AskAiConfigs.recorder_phrase_limit_millis", "modulename": "main.askai.core.askai_configs", "qualname": "AskAiConfigs.recorder_phrase_limit_millis", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "main.askai.core.askai_configs.AskAiConfigs.recorder_silence_timeout_millis", "modulename": "main.askai.core.askai_configs", "qualname": "AskAiConfigs.recorder_silence_timeout_millis", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "main.askai.core.askai_configs.AskAiConfigs.recorder_noise_detection_duration_millis", "modulename": "main.askai.core.askai_configs", "qualname": "AskAiConfigs.recorder_noise_detection_duration_millis", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "main.askai.core.askai_configs.AskAiConfigs.recorder_input_device_auto_swap", "modulename": "main.askai.core.askai_configs", "qualname": "AskAiConfigs.recorder_input_device_auto_swap", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "main.askai.core.askai_configs.AskAiConfigs.recorder_devices", "modulename": "main.askai.core.askai_configs", "qualname": "AskAiConfigs.recorder_devices", "kind": "variable", "doc": "<p></p>\n", "annotation": ": set[str]"}, {"fullname": "main.askai.core.askai_configs.AskAiConfigs.add_device", "modulename": "main.askai.core.askai_configs", "qualname": "AskAiConfigs.add_device", "kind": "function", "doc": "<p>Add a new device to the configuration list.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>device_name</strong>:  The device name to be added.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">device_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.askai_configs.AskAiConfigs.remove_device", "modulename": "main.askai.core.askai_configs", "qualname": "AskAiConfigs.remove_device", "kind": "function", "doc": "<p>Remove a new device from the configuration list.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>device_name</strong>:  The device name to be removed.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">device_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.askai_configs.AskAiConfigs.clear_devices", "modulename": "main.askai.core.askai_configs", "qualname": "AskAiConfigs.clear_devices", "kind": "function", "doc": "<p>Remove all devices from the configuration list.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.askai_events", "modulename": "main.askai.core.askai_events", "kind": "module", "doc": "<p>@project: HsPyLib-AskAI\n@package: askai.core.askai_events\n   @file: askai_events.py\n@created: Fri, 5 Jan 2024\n @author: <B>H</B>ugo <B>S</B>aporetti <B>J</B>unior\n   @site: <a href=\"https://github.com/yorevs/askai\">https://github.com/yorevs/askai</a>\n@license: MIT - Please refer to <a href=\"https://opensource.org/licenses/MIT\">https://opensource.org/licenses/MIT</a></p>\n\n<p>Copyright (c) 2024, AskAI</p>\n"}, {"fullname": "main.askai.core.askai_events.ASKAI_BUS_NAME", "modulename": "main.askai.core.askai_events", "qualname": "ASKAI_BUS_NAME", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;askai-reply-bus&#x27;"}, {"fullname": "main.askai.core.askai_events.REPLY_EVENT", "modulename": "main.askai.core.askai_events", "qualname": "REPLY_EVENT", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;askai-reply-event&#x27;"}, {"fullname": "main.askai.core.askai_events.MIC_LISTENING_EVENT", "modulename": "main.askai.core.askai_events", "qualname": "MIC_LISTENING_EVENT", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;askai-mic-listening-event&#x27;"}, {"fullname": "main.askai.core.askai_events.DEVICE_CHANGED_EVENT", "modulename": "main.askai.core.askai_events", "qualname": "DEVICE_CHANGED_EVENT", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;askai-input-device-changed-event&#x27;"}, {"fullname": "main.askai.core.askai_events.MODE_CHANGED_EVENT", "modulename": "main.askai.core.askai_events", "qualname": "MODE_CHANGED_EVENT", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;askai-routing-mode-changed-event&#x27;"}, {"fullname": "main.askai.core.askai_events.AskAiEvents", "modulename": "main.askai.core.askai_events", "qualname": "AskAiEvents", "kind": "class", "doc": "<p>Facility class to provide easy access to AskAI events.</p>\n", "bases": "hspylib.core.enums.enumeration.Enumeration"}, {"fullname": "main.askai.core.askai_events.AskAiEvents.ASKAI_BUS", "modulename": "main.askai.core.askai_events", "qualname": "AskAiEvents.ASKAI_BUS", "kind": "variable", "doc": "<p></p>\n", "default_value": "ASKAI_BUS"}, {"fullname": "main.askai.core.askai_events.AskAiEvents.bus", "modulename": "main.askai.core.askai_events", "qualname": "AskAiEvents.bus", "kind": "function", "doc": "<p>Return an event bus instance for the given name.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>bus_name</strong>:  The name of the event bus to retrieve.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>An instance of FluidEventBus if found; otherwise, None.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">bus_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hspylib</span><span class=\"o\">.</span><span class=\"n\">modules</span><span class=\"o\">.</span><span class=\"n\">eventbus</span><span class=\"o\">.</span><span class=\"n\">fluid</span><span class=\"o\">.</span><span class=\"n\">FluidEventBus</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.askai_events.AskAiEvents.events", "modulename": "main.askai.core.askai_events", "qualname": "AskAiEvents.events", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hspylib.core.namespace.Namespace"}, {"fullname": "main.askai.core.askai_events.events", "modulename": "main.askai.core.askai_events", "qualname": "events", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hspylib.core.namespace.Namespace", "default_value": "FluidEventBus::askai-reply-bus(reply=FluidEvent-askai-reply-event::(name, erase_last, cb_event_handler, emit, subscribe), listening=FluidEvent-askai-mic-listening-event::(name, listening, cb_event_handler, emit, subscribe), device_changed=FluidEvent-askai-input-device-changed-event::(name, device, cb_event_handler, emit, subscribe), mode_changed=FluidEvent-askai-routing-mode-changed-event::(name, mode, sum_path, glob, cb_event_handler, emit, subscribe))"}, {"fullname": "main.askai.core.askai_messages", "modulename": "main.askai.core.askai_messages", "kind": "module", "doc": "<p>@project: HsPyLib-AskAI\n@package: askai.core.askai_messages\n   @file: askai_messages.py\n@created: Fri, 5 Jan 2024\n @author: <B>H</B>ugo <B>S</B>aporetti <B>J</B>unior\n   @site: <a href=\"https://github.com/yorevs/askai\">https://github.com/yorevs/askai</a>\n@license: MIT - Please refer to <a href=\"https://opensource.org/licenses/MIT\">https://opensource.org/licenses/MIT</a></p>\n\n<p>Copyright (c) 2024, AskAI</p>\n"}, {"fullname": "main.askai.core.askai_messages.AskAiMessages", "modulename": "main.askai.core.askai_messages", "qualname": "AskAiMessages", "kind": "class", "doc": "<p>Provide access to static 'translated' messages.</p>\n", "bases": "typing.Type"}, {"fullname": "main.askai.core.askai_messages.AskAiMessages.__init__", "modulename": "main.askai.core.askai_messages", "qualname": "AskAiMessages.__init__", "kind": "function", "doc": "<p>Invoke the class constructor or return the instance if it exists.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, {"fullname": "main.askai.core.askai_messages.AskAiMessages.INSTANCE", "modulename": "main.askai.core.askai_messages", "qualname": "AskAiMessages.INSTANCE", "kind": "variable", "doc": "<p></p>\n", "annotation": ": main.askai.core.askai_messages.AskAiMessages"}, {"fullname": "main.askai.core.askai_messages.AskAiMessages.TRANSLATOR", "modulename": "main.askai.core.askai_messages", "qualname": "AskAiMessages.TRANSLATOR", "kind": "variable", "doc": "<p></p>\n", "annotation": ": askai.language.ai_translator.AITranslator", "default_value": "&lt;class &#x27;askai.language.translators.deepl_translator.DeepLTranslator&#x27;&gt;"}, {"fullname": "main.askai.core.askai_messages.AskAiMessages.get_translator", "modulename": "main.askai.core.askai_messages", "qualname": "AskAiMessages.get_translator", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">from_lang</span><span class=\"p\">:</span> <span class=\"n\">askai</span><span class=\"o\">.</span><span class=\"n\">language</span><span class=\"o\">.</span><span class=\"n\">language</span><span class=\"o\">.</span><span class=\"n\">Language</span>,</span><span class=\"param\">\t<span class=\"n\">to_lang</span><span class=\"p\">:</span> <span class=\"n\">askai</span><span class=\"o\">.</span><span class=\"n\">language</span><span class=\"o\">.</span><span class=\"n\">language</span><span class=\"o\">.</span><span class=\"n\">Language</span></span><span class=\"return-annotation\">) -> <span class=\"n\">askai</span><span class=\"o\">.</span><span class=\"n\">language</span><span class=\"o\">.</span><span class=\"n\">ai_translator</span><span class=\"o\">.</span><span class=\"n\">AITranslator</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.askai_messages.AskAiMessages.accurate_responses", "modulename": "main.askai.core.askai_messages", "qualname": "AskAiMessages.accurate_responses", "kind": "variable", "doc": "<p></p>\n", "annotation": ": list[str]"}, {"fullname": "main.askai.core.askai_messages.AskAiMessages.translator", "modulename": "main.askai.core.askai_messages", "qualname": "AskAiMessages.translator", "kind": "variable", "doc": "<p></p>\n", "annotation": ": askai.language.ai_translator.AITranslator"}, {"fullname": "main.askai.core.askai_messages.AskAiMessages.translate", "modulename": "main.askai.core.askai_messages", "qualname": "AskAiMessages.translate", "kind": "function", "doc": "<p>Translate text using the configured language.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>text</strong>:  The text to be translated.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The translated text.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">text</span><span class=\"p\">:</span> <span class=\"o\">~</span><span class=\"n\">AnyStr</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.askai_messages.AskAiMessages.t", "modulename": "main.askai.core.askai_messages", "qualname": "AskAiMessages.t", "kind": "function", "doc": "<p>Wrapper to translate.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>text</strong>:  The text to be translated.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The translated text.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">text</span><span class=\"p\">:</span> <span class=\"o\">~</span><span class=\"n\">AnyStr</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.askai_messages.AskAiMessages.welcome", "modulename": "main.askai.core.askai_messages", "qualname": "AskAiMessages.welcome", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">username</span><span class=\"p\">:</span> <span class=\"o\">~</span><span class=\"n\">AnyStr</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.askai_messages.AskAiMessages.wait", "modulename": "main.askai.core.askai_messages", "qualname": "AskAiMessages.wait", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.askai_messages.AskAiMessages.welcome_back", "modulename": "main.askai.core.askai_messages", "qualname": "AskAiMessages.welcome_back", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.askai_messages.AskAiMessages.listening", "modulename": "main.askai.core.askai_messages", "qualname": "AskAiMessages.listening", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.askai_messages.AskAiMessages.transcribing", "modulename": "main.askai.core.askai_messages", "qualname": "AskAiMessages.transcribing", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.askai_messages.AskAiMessages.goodbye", "modulename": "main.askai.core.askai_messages", "qualname": "AskAiMessages.goodbye", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.askai_messages.AskAiMessages.smile", "modulename": "main.askai.core.askai_messages", "qualname": "AskAiMessages.smile", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">countdown</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.askai_messages.AskAiMessages.cmd_success", "modulename": "main.askai.core.askai_messages", "qualname": "AskAiMessages.cmd_success", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">command_line</span><span class=\"p\">:</span> <span class=\"o\">~</span><span class=\"n\">AnyStr</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.askai_messages.AskAiMessages.searching", "modulename": "main.askai.core.askai_messages", "qualname": "AskAiMessages.searching", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.askai_messages.AskAiMessages.scrapping", "modulename": "main.askai.core.askai_messages", "qualname": "AskAiMessages.scrapping", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.askai_messages.AskAiMessages.summarizing", "modulename": "main.askai.core.askai_messages", "qualname": "AskAiMessages.summarizing", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">path</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">pathlib</span><span class=\"o\">.</span><span class=\"n\">Path</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.askai_messages.AskAiMessages.summary_succeeded", "modulename": "main.askai.core.askai_messages", "qualname": "AskAiMessages.summary_succeeded", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">path</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">pathlib</span><span class=\"o\">.</span><span class=\"n\">Path</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span>, </span><span class=\"param\"><span class=\"n\">glob</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.askai_messages.AskAiMessages.enter_qna", "modulename": "main.askai.core.askai_messages", "qualname": "AskAiMessages.enter_qna", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.askai_messages.AskAiMessages.qna_welcome", "modulename": "main.askai.core.askai_messages", "qualname": "AskAiMessages.qna_welcome", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.askai_messages.AskAiMessages.enter_rag", "modulename": "main.askai.core.askai_messages", "qualname": "AskAiMessages.enter_rag", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.askai_messages.AskAiMessages.enter_chat", "modulename": "main.askai.core.askai_messages", "qualname": "AskAiMessages.enter_chat", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.askai_messages.AskAiMessages.leave_qna", "modulename": "main.askai.core.askai_messages", "qualname": "AskAiMessages.leave_qna", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.askai_messages.AskAiMessages.leave_rag", "modulename": "main.askai.core.askai_messages", "qualname": "AskAiMessages.leave_rag", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.askai_messages.AskAiMessages.leave_chat", "modulename": "main.askai.core.askai_messages", "qualname": "AskAiMessages.leave_chat", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.askai_messages.AskAiMessages.press_esc_enter", "modulename": "main.askai.core.askai_messages", "qualname": "AskAiMessages.press_esc_enter", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.askai_messages.AskAiMessages.device_switch", "modulename": "main.askai.core.askai_messages", "qualname": "AskAiMessages.device_switch", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">device_info</span><span class=\"p\">:</span> <span class=\"o\">~</span><span class=\"n\">AnyStr</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.askai_messages.AskAiMessages.photo_captured", "modulename": "main.askai.core.askai_messages", "qualname": "AskAiMessages.photo_captured", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">photo</span><span class=\"p\">:</span> <span class=\"o\">~</span><span class=\"n\">AnyStr</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.askai_messages.AskAiMessages.screenshot_saved", "modulename": "main.askai.core.askai_messages", "qualname": "AskAiMessages.screenshot_saved", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">screenshot</span><span class=\"p\">:</span> <span class=\"o\">~</span><span class=\"n\">AnyStr</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.askai_messages.AskAiMessages.executing", "modulename": "main.askai.core.askai_messages", "qualname": "AskAiMessages.executing", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">command_line</span><span class=\"p\">:</span> <span class=\"o\">~</span><span class=\"n\">AnyStr</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.askai_messages.AskAiMessages.analysis", "modulename": "main.askai.core.askai_messages", "qualname": "AskAiMessages.analysis", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">result</span><span class=\"p\">:</span> <span class=\"o\">~</span><span class=\"n\">AnyStr</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.askai_messages.AskAiMessages.assert_acc", "modulename": "main.askai.core.askai_messages", "qualname": "AskAiMessages.assert_acc", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">status</span><span class=\"p\">:</span> <span class=\"o\">~</span><span class=\"n\">AnyStr</span>, </span><span class=\"param\"><span class=\"n\">details</span><span class=\"p\">:</span> <span class=\"o\">~</span><span class=\"n\">AnyStr</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.askai_messages.AskAiMessages.action_plan", "modulename": "main.askai.core.askai_messages", "qualname": "AskAiMessages.action_plan", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">plan_text</span><span class=\"p\">:</span> <span class=\"o\">~</span><span class=\"n\">AnyStr</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.askai_messages.AskAiMessages.x_reference", "modulename": "main.askai.core.askai_messages", "qualname": "AskAiMessages.x_reference", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">pathname</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">pathlib</span><span class=\"o\">.</span><span class=\"n\">Path</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.askai_messages.AskAiMessages.describe_image", "modulename": "main.askai.core.askai_messages", "qualname": "AskAiMessages.describe_image", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">image_path</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">pathlib</span><span class=\"o\">.</span><span class=\"n\">Path</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.askai_messages.AskAiMessages.model_select", "modulename": "main.askai.core.askai_messages", "qualname": "AskAiMessages.model_select", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">model</span><span class=\"p\">:</span> <span class=\"o\">~</span><span class=\"n\">AnyStr</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.askai_messages.AskAiMessages.task", "modulename": "main.askai.core.askai_messages", "qualname": "AskAiMessages.task", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">task</span><span class=\"p\">:</span> <span class=\"o\">~</span><span class=\"n\">AnyStr</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.askai_messages.AskAiMessages.final_query", "modulename": "main.askai.core.askai_messages", "qualname": "AskAiMessages.final_query", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">query</span><span class=\"p\">:</span> <span class=\"o\">~</span><span class=\"n\">AnyStr</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.askai_messages.AskAiMessages.refine_answer", "modulename": "main.askai.core.askai_messages", "qualname": "AskAiMessages.refine_answer", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">answer</span><span class=\"p\">:</span> <span class=\"o\">~</span><span class=\"n\">AnyStr</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.askai_messages.AskAiMessages.no_caption", "modulename": "main.askai.core.askai_messages", "qualname": "AskAiMessages.no_caption", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.askai_messages.AskAiMessages.no_good_result", "modulename": "main.askai.core.askai_messages", "qualname": "AskAiMessages.no_good_result", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.askai_messages.AskAiMessages.no_output", "modulename": "main.askai.core.askai_messages", "qualname": "AskAiMessages.no_output", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">source</span><span class=\"p\">:</span> <span class=\"o\">~</span><span class=\"n\">AnyStr</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.askai_messages.AskAiMessages.access_grant", "modulename": "main.askai.core.askai_messages", "qualname": "AskAiMessages.access_grant", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.askai_messages.AskAiMessages.sorry_retry", "modulename": "main.askai.core.askai_messages", "qualname": "AskAiMessages.sorry_retry", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.askai_messages.AskAiMessages.no_query_string", "modulename": "main.askai.core.askai_messages", "qualname": "AskAiMessages.no_query_string", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.askai_messages.AskAiMessages.invalid_response", "modulename": "main.askai.core.askai_messages", "qualname": "AskAiMessages.invalid_response", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">response_text</span><span class=\"p\">:</span> <span class=\"o\">~</span><span class=\"n\">AnyStr</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.askai_messages.AskAiMessages.invalid_command", "modulename": "main.askai.core.askai_messages", "qualname": "AskAiMessages.invalid_command", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">response_text</span><span class=\"p\">:</span> <span class=\"o\">~</span><span class=\"n\">AnyStr</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.askai_messages.AskAiMessages.cmd_no_exist", "modulename": "main.askai.core.askai_messages", "qualname": "AskAiMessages.cmd_no_exist", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">command</span><span class=\"p\">:</span> <span class=\"o\">~</span><span class=\"n\">AnyStr</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.askai_messages.AskAiMessages.cmd_failed", "modulename": "main.askai.core.askai_messages", "qualname": "AskAiMessages.cmd_failed", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">cmd_line</span><span class=\"p\">:</span> <span class=\"o\">~</span><span class=\"n\">AnyStr</span>, </span><span class=\"param\"><span class=\"n\">error_msg</span><span class=\"p\">:</span> <span class=\"o\">~</span><span class=\"n\">AnyStr</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.askai_messages.AskAiMessages.camera_not_open", "modulename": "main.askai.core.askai_messages", "qualname": "AskAiMessages.camera_not_open", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.askai_messages.AskAiMessages.missing_package", "modulename": "main.askai.core.askai_messages", "qualname": "AskAiMessages.missing_package", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">err</span><span class=\"p\">:</span> <span class=\"ne\">ImportError</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.askai_messages.AskAiMessages.summary_not_possible", "modulename": "main.askai.core.askai_messages", "qualname": "AskAiMessages.summary_not_possible", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">err</span><span class=\"p\">:</span> <span class=\"ne\">BaseException</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.askai_messages.AskAiMessages.intelligible", "modulename": "main.askai.core.askai_messages", "qualname": "AskAiMessages.intelligible", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">reason</span><span class=\"p\">:</span> <span class=\"o\">~</span><span class=\"n\">AnyStr</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.askai_messages.AskAiMessages.impossible", "modulename": "main.askai.core.askai_messages", "qualname": "AskAiMessages.impossible", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">reason</span><span class=\"p\">:</span> <span class=\"o\">~</span><span class=\"n\">AnyStr</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.askai_messages.AskAiMessages.timeout", "modulename": "main.askai.core.askai_messages", "qualname": "AskAiMessages.timeout", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">reason</span><span class=\"p\">:</span> <span class=\"o\">~</span><span class=\"n\">AnyStr</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.askai_messages.AskAiMessages.llm_error", "modulename": "main.askai.core.askai_messages", "qualname": "AskAiMessages.llm_error", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">error</span><span class=\"p\">:</span> <span class=\"o\">~</span><span class=\"n\">AnyStr</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.askai_messages.AskAiMessages.fail_to_search", "modulename": "main.askai.core.askai_messages", "qualname": "AskAiMessages.fail_to_search", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">error</span><span class=\"p\">:</span> <span class=\"o\">~</span><span class=\"n\">AnyStr</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.askai_messages.AskAiMessages.too_many_actions", "modulename": "main.askai.core.askai_messages", "qualname": "AskAiMessages.too_many_actions", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"o\">~</span><span class=\"n\">AnyStr</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.askai_messages.AskAiMessages.unprocessable", "modulename": "main.askai.core.askai_messages", "qualname": "AskAiMessages.unprocessable", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">reason</span><span class=\"p\">:</span> <span class=\"o\">~</span><span class=\"n\">AnyStr</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.askai_messages.AskAiMessages.quote_exceeded", "modulename": "main.askai.core.askai_messages", "qualname": "AskAiMessages.quote_exceeded", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.askai_messages.AskAiMessages.interruption_requested", "modulename": "main.askai.core.askai_messages", "qualname": "AskAiMessages.interruption_requested", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">reason</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.askai_messages.AskAiMessages.terminate_requested", "modulename": "main.askai.core.askai_messages", "qualname": "AskAiMessages.terminate_requested", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">reason</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.askai_prompt", "modulename": "main.askai.core.askai_prompt", "kind": "module", "doc": "<p>@project: HsPyLib-AskAI\n@package: askai.core.askai_prompt\n   @file: askai_prompt.py\n@created: Mon, 22 Jan 2024\n @author: <B>H</B>ugo <B>S</B>aporetti <B>J</B>unior\n   @site: <a href=\"https://github.com/yorevs/askai\">https://github.com/yorevs/askai</a>\n@license: MIT - Please refer to <a href=\"https://opensource.org/licenses/MIT\">https://opensource.org/licenses/MIT</a></p>\n\n<p>Copyright (c) 2024, AskAI</p>\n"}, {"fullname": "main.askai.core.askai_prompt.AskAiPrompt", "modulename": "main.askai.core.askai_prompt", "qualname": "AskAiPrompt", "kind": "class", "doc": "<p>Provide the prompts used by the AskAi.</p>\n", "bases": "typing.Type"}, {"fullname": "main.askai.core.askai_prompt.AskAiPrompt.__init__", "modulename": "main.askai.core.askai_prompt", "qualname": "AskAiPrompt.__init__", "kind": "function", "doc": "<p>Invoke the class constructor or return the instance if it exists.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, {"fullname": "main.askai.core.askai_prompt.AskAiPrompt.INSTANCE", "modulename": "main.askai.core.askai_prompt", "qualname": "AskAiPrompt.INSTANCE", "kind": "variable", "doc": "<p></p>\n", "annotation": ": main.askai.core.askai_prompt.AskAiPrompt"}, {"fullname": "main.askai.core.askai_prompt.AskAiPrompt.PROMPT_DIR", "modulename": "main.askai.core.askai_prompt", "qualname": "AskAiPrompt.PROMPT_DIR", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;/Users/hjunior/GIT-Repository/GitHub/askai/src/main/askai/resources/prompts&#x27;"}, {"fullname": "main.askai.core.askai_prompt.AskAiPrompt.os_type", "modulename": "main.askai.core.askai_prompt", "qualname": "AskAiPrompt.os_type", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[Literal[&#x27;linux&#x27;, &#x27;windows&#x27;, &#x27;darwin&#x27;]]"}, {"fullname": "main.askai.core.askai_prompt.AskAiPrompt.shell", "modulename": "main.askai.core.askai_prompt", "qualname": "AskAiPrompt.shell", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[Literal[&#x27;bash&#x27;, &#x27;csh&#x27;, &#x27;dash&#x27;, &#x27;ksh&#x27;, &#x27;tcsh&#x27;, &#x27;zsh&#x27;, &#x27;sh&#x27;]]"}, {"fullname": "main.askai.core.askai_prompt.AskAiPrompt.user", "modulename": "main.askai.core.askai_prompt", "qualname": "AskAiPrompt.user", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "main.askai.core.askai_prompt.AskAiPrompt.idiom", "modulename": "main.askai.core.askai_prompt", "qualname": "AskAiPrompt.idiom", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "main.askai.core.askai_prompt.AskAiPrompt.read_prompt", "modulename": "main.askai.core.askai_prompt", "qualname": "AskAiPrompt.read_prompt", "kind": "function", "doc": "<p>Read a processor prompt template.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>template_file</strong>:  The name of the template file to read.</li>\n<li><strong>prompt_dir</strong>:  Optional directory where the template file is located.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The content of the prompt template as a string.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">template_file</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">prompt_dir</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.askai_prompt.AskAiPrompt.append_path", "modulename": "main.askai.core.askai_prompt", "qualname": "AskAiPrompt.append_path", "kind": "function", "doc": "<p>Return the PROMPT_DIR with the extra path appended.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>path</strong>:  The path to append to PROMPT_DIR.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The concatenated path.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">path</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.askai_settings", "modulename": "main.askai.core.askai_settings", "kind": "module", "doc": "<p>@project: HsPyLib-AskAI\n@package: askai.core.support\n   @file: askai_settings.py\n@created: Tue, 23 Apr 2024\n @author: <B>H</B>ugo <B>S</B>aporetti <B>J</B>unior\n   @site: <a href=\"https://github.com/yorevs/askai\">https://github.com/yorevs/askai</a>\n@license: MIT - Please refer to <a href=\"https://opensource.org/licenses/MIT\">https://opensource.org/licenses/MIT</a></p>\n\n<p>Copyright (c) 2024, AskAI</p>\n"}, {"fullname": "main.askai.core.askai_settings.ASKAI_DIR", "modulename": "main.askai.core.askai_settings", "qualname": "ASKAI_DIR", "kind": "variable", "doc": "<p></p>\n", "annotation": ": pathlib.Path", "default_value": "PosixPath(&#x27;/Users/hjunior/.config/hhs/askai/askai&#x27;)"}, {"fullname": "main.askai.core.askai_settings.AskAiSettings", "modulename": "main.askai.core.askai_settings", "qualname": "AskAiSettings", "kind": "class", "doc": "<p>The AskAI 'SetMan' Settings.</p>\n", "bases": "typing.Type"}, {"fullname": "main.askai.core.askai_settings.AskAiSettings.__init__", "modulename": "main.askai.core.askai_settings", "qualname": "AskAiSettings.__init__", "kind": "function", "doc": "<p>Invoke the class constructor or return the instance if it exists.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, {"fullname": "main.askai.core.askai_settings.AskAiSettings.INSTANCE", "modulename": "main.askai.core.askai_settings", "qualname": "AskAiSettings.INSTANCE", "kind": "variable", "doc": "<p></p>\n", "annotation": ": main.askai.core.askai_settings.AskAiSettings"}, {"fullname": "main.askai.core.askai_settings.AskAiSettings.settings", "modulename": "main.askai.core.askai_settings", "qualname": "AskAiSettings.settings", "kind": "variable", "doc": "<p></p>\n", "annotation": ": setman.settings.settings.Settings"}, {"fullname": "main.askai.core.askai_settings.AskAiSettings.search", "modulename": "main.askai.core.askai_settings", "qualname": "AskAiSettings.search", "kind": "function", "doc": "<p>Search settings using the specified filters.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>filters</strong>:  Optional filters to apply to the search.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The search results as a string, or None if no results are found.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">filters</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.askai_settings.AskAiSettings.defaults", "modulename": "main.askai.core.askai_settings", "qualname": "AskAiSettings.defaults", "kind": "function", "doc": "<p>Create the default settings database.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.askai_settings.AskAiSettings.get", "modulename": "main.askai.core.askai_settings", "qualname": "AskAiSettings.get", "kind": "function", "doc": "<p>Retrieve the setting specified by the given key.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>key</strong>:  The name of the setting to retrieve.</li>\n<li><strong>default_value</strong>:  The value to return if the setting does not exist.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The setting value if it exists, otherwise the default_value.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">default_value</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.askai_settings.AskAiSettings.put", "modulename": "main.askai.core.askai_settings", "qualname": "AskAiSettings.put", "kind": "function", "doc": "<p>Set the setting specified by the given key.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>key</strong>:  The name of the setting to update.</li>\n<li><strong>value</strong>:  The value to associate with the key.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.askai_settings.AskAiSettings.get_bool", "modulename": "main.askai.core.askai_settings", "qualname": "AskAiSettings.get_bool", "kind": "function", "doc": "<p>Retrieve the setting specified by the given key, converting it to boolean.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>key</strong>:  The name of the setting to retrieve.</li>\n<li><strong>default_value</strong>:  The value to return if the setting does not exist.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The setting value if it exists, otherwise the default_value.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">default_value</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.askai_settings.AskAiSettings.get_int", "modulename": "main.askai.core.askai_settings", "qualname": "AskAiSettings.get_int", "kind": "function", "doc": "<p>Retrieve the setting specified by the given key, converting it to integer.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>key</strong>:  The name of the setting to retrieve.</li>\n<li><strong>default_value</strong>:  The value to return if the setting does not exist.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The setting value if it exists, otherwise the default_value.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">default_value</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"mi\">0</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.askai_settings.AskAiSettings.get_float", "modulename": "main.askai.core.askai_settings", "qualname": "AskAiSettings.get_float", "kind": "function", "doc": "<p>Retrieve the setting specified by the given key, converting it to float.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>key</strong>:  The name of the setting to retrieve.</li>\n<li><strong>default_value</strong>:  The value to return if the setting does not exist.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The setting value if it exists, otherwise the default_value.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">default_value</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"mf\">0.0</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">float</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.askai_settings.AskAiSettings.get_list", "modulename": "main.askai.core.askai_settings", "qualname": "AskAiSettings.get_list", "kind": "function", "doc": "<p>Retrieve the setting specified by the given key, converting it to list.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>key</strong>:  The name of the setting to retrieve.</li>\n<li><strong>default_value</strong>:  The value to return if the setting does not exist.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The setting value if it exists, otherwise the default_value.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">default_value</span><span class=\"p\">:</span> <span class=\"nb\">list</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.commander", "modulename": "main.askai.core.commander", "kind": "module", "doc": "<p>Package initialization.</p>\n"}, {"fullname": "main.askai.core.commander.commander", "modulename": "main.askai.core.commander.commander", "kind": "module", "doc": "<p>@project: HsPyLib-AskAI\n@package: askai.core.commander.commander\n   @file: commander.py\n@created: Thu, 25 Apr 2024\n @author: <B>H</B>ugo <B>S</B>aporetti <B>J</B>unior\n   @site: <a href=\"https://github.com/yorevs/askai\">https://github.com/yorevs/askai</a>\n@license: MIT - Please refer to <a href=\"https://opensource.org/licenses/MIT\">https://opensource.org/licenses/MIT</a></p>\n\n<p>Copyright (c) 2024, AskAI</p>\n"}, {"fullname": "main.askai.core.commander.commander.COMMANDER_HELP_TPL", "modulename": "main.askai.core.commander.commander", "qualname": "COMMANDER_HELP_TPL", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;string.Template object&gt;"}, {"fullname": "main.askai.core.commander.commander.COMMANDER_HELP_CMD_TPL", "modulename": "main.askai.core.commander.commander", "qualname": "COMMANDER_HELP_CMD_TPL", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;string.Template object&gt;"}, {"fullname": "main.askai.core.commander.commander.RE_ASKAI_CMD", "modulename": "main.askai.core.commander.commander", "qualname": "RE_ASKAI_CMD", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;^(?&lt;!\\\\\\\\)/(\\\\w+)( (.*))*$&#x27;"}, {"fullname": "main.askai.core.commander.commander.commands", "modulename": "main.askai.core.commander.commander", "qualname": "commands", "kind": "function", "doc": "<p>Return the list of all available commander commands.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A list of strings representing the available commands.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.commander.commander.commander_help", "modulename": "main.askai.core.commander.commander", "qualname": "commander_help", "kind": "function", "doc": "<p>Return the help string for the specified commander command.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>command</strong>:  The command for which to retrieve help.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A string containing the help information for the specified command.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">command</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.commander.commander.is_command", "modulename": "main.askai.core.commander.commander", "qualname": "is_command", "kind": "function", "doc": "<p>Check if the given string is a command.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>string</strong>:  The string to check.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>True if the string is a command, False otherwise.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">string</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.commander.commander.ask_commander", "modulename": "main.askai.core.commander.commander", "qualname": "ask_commander", "kind": "variable", "doc": "<p>AskAI commands group. This function serves as the entry point for the AskAI command-line interface (CLI)\ncommands, grouping related commands together.</p>\n", "default_value": "&lt;Group ask-commander&gt;"}, {"fullname": "main.askai.core.commander.commander.help", "modulename": "main.askai.core.commander.commander", "qualname": "help", "kind": "variable", "doc": "<p>Display the help message for the specified command and exit. If no command is provided, it displays the general\nhelp message.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>command</strong>:  The command to retrieve help for (optional).</li>\n</ul>\n", "default_value": "&lt;Command help&gt;"}, {"fullname": "main.askai.core.commander.commander.debug", "modulename": "main.askai.core.commander.commander", "qualname": "debug", "kind": "variable", "doc": "<p>Toggle debug mode ON/OFF.</p>\n", "default_value": "&lt;Command debug&gt;"}, {"fullname": "main.askai.core.commander.commander.speak", "modulename": "main.askai.core.commander.commander", "qualname": "speak", "kind": "variable", "doc": "<p>Toggle speak mode ON/OFF.</p>\n", "default_value": "&lt;Command speak&gt;"}, {"fullname": "main.askai.core.commander.commander.context", "modulename": "main.askai.core.commander.commander", "qualname": "context", "kind": "variable", "doc": "<p>Manage the current chat context window.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>operation: The operation to perform on contexts. Options</strong>:  [list | forget].</li>\n<li><strong>name</strong>:  The name of the context to target (default is \"ALL\").</li>\n</ul>\n", "default_value": "&lt;Command context&gt;"}, {"fullname": "main.askai.core.commander.commander.history", "modulename": "main.askai.core.commander.commander", "qualname": "history", "kind": "variable", "doc": "<p>Manages the current input history.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>operation: The operation to perform on contexts. Options</strong>:  [list|forget].</li>\n</ul>\n", "default_value": "&lt;Command history&gt;"}, {"fullname": "main.askai.core.commander.commander.copy", "modulename": "main.askai.core.commander.commander", "qualname": "copy", "kind": "variable", "doc": "<p>Copy the specified context entry to the clipboard.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>name</strong>:  The name of the context entry to copy.</li>\n</ul>\n", "default_value": "&lt;Command copy&gt;"}, {"fullname": "main.askai.core.commander.commander.devices", "modulename": "main.askai.core.commander.commander", "qualname": "devices", "kind": "variable", "doc": "<p>Manages the audio input devices.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>operation: Specifies the device operation. Options</strong>:  [list|set].</li>\n<li><strong>name</strong>:  The target device name for setting.</li>\n</ul>\n", "default_value": "&lt;Command devices&gt;"}, {"fullname": "main.askai.core.commander.commander.settings", "modulename": "main.askai.core.commander.commander", "qualname": "settings", "kind": "variable", "doc": "<p>Handles modifications to AskAI settings.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>operation: The action to perform on settings. Options</strong>:  [list|get|set|reset]</li>\n<li><strong>name</strong>:  The key for the setting to modify.</li>\n<li><strong>value</strong>:  The new value for the specified setting.</li>\n</ul>\n", "default_value": "&lt;Command settings&gt;"}, {"fullname": "main.askai.core.commander.commander.cache", "modulename": "main.askai.core.commander.commander", "qualname": "cache", "kind": "variable", "doc": "<p>Manages AskAI TTL-cache management and associated files.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>operation: Specifies the cache operation. Options</strong>:  [list|get|clear|files|enable|ttl]</li>\n<li><strong>args</strong>:  Arguments relevant to the chosen operation.</li>\n</ul>\n", "default_value": "&lt;Command cache&gt;"}, {"fullname": "main.askai.core.commander.commander.tempo", "modulename": "main.askai.core.commander.commander", "qualname": "tempo", "kind": "variable", "doc": "<p>Manages the speech-to-text tempo.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>speed: Desired speech tempo setting. Options</strong>:  [list|get]</li>\n</ul>\n", "default_value": "&lt;Command tempo&gt;"}, {"fullname": "main.askai.core.commander.commander.voices", "modulename": "main.askai.core.commander.commander", "qualname": "voices", "kind": "variable", "doc": "<p>Manages speech-to-text voice operations.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>operation: The action to perform on voices. Options</strong>:  [list/set/play]</li>\n<li><strong>name</strong>:  The voice name.</li>\n</ul>\n", "default_value": "&lt;Command voices&gt;"}, {"fullname": "main.askai.core.commander.commander.tts", "modulename": "main.askai.core.commander.commander", "qualname": "tts", "kind": "variable", "doc": "<p>Convert text to speech using the default AI engine.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>text</strong>:  The text to convert. If text represents a valid file, its contents will be used instead.</li>\n<li><strong>dest_dir</strong>:  The directory where the converted audio file will be saved.</li>\n<li><strong>playback</strong>:  Whether to play the audio file after conversion.</li>\n</ul>\n", "default_value": "&lt;Command tts&gt;"}, {"fullname": "main.askai.core.commander.commander.summarize", "modulename": "main.askai.core.commander.commander", "qualname": "summarize", "kind": "variable", "doc": "<p>Create a summary of the folder's contents.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>folder</strong>:  The root directory for the summary.</li>\n<li><strong>glob</strong>:  The file pattern or path to summarize.</li>\n</ul>\n", "default_value": "&lt;Command summarize&gt;"}, {"fullname": "main.askai.core.commander.commander.idiom", "modulename": "main.askai.core.commander.commander", "qualname": "idiom", "kind": "variable", "doc": "<p>Set the application's language preference.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>locale_str</strong>:  The locale identifier, e.g., 'pt_BR'.</li>\n</ul>\n", "default_value": "&lt;Command idiom&gt;"}, {"fullname": "main.askai.core.commander.commander.info", "modulename": "main.askai.core.commander.commander", "qualname": "info", "kind": "variable", "doc": "<p>Display key information about the running application.</p>\n", "default_value": "&lt;Command info&gt;"}, {"fullname": "main.askai.core.commander.commander.translate", "modulename": "main.askai.core.commander.commander", "qualname": "translate", "kind": "variable", "doc": "<p>Translate text from the source language to the target language.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>from_locale_str</strong>:  The source locale identifier, e.g., 'pt_BR'.</li>\n<li><strong>to_locale_str</strong>:  The target locale identifier, e.g., 'en_US'.</li>\n<li><strong>texts</strong>:  The list of texts to translate.</li>\n</ul>\n", "default_value": "&lt;Command translate&gt;"}, {"fullname": "main.askai.core.commander.commander.camera", "modulename": "main.askai.core.commander.commander", "qualname": "camera", "kind": "variable", "doc": "<p>Take photos, import images, or identify a person using the WebCam.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>operation: The camera operation to perform. Options</strong>:  [capture|identify|import]</li>\n<li><strong>args</strong>:  The arguments required for the operation.</li>\n</ul>\n", "default_value": "&lt;Command camera&gt;"}, {"fullname": "main.askai.core.commander.commander.mode", "modulename": "main.askai.core.commander.commander", "qualname": "mode", "kind": "variable", "doc": "<p>Change the AskAI routing mode.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>router_mode: The routing mode. Options</strong>:  [rag|chat|splitter]</li>\n</ul>\n", "default_value": "&lt;Command mode&gt;"}, {"fullname": "main.askai.core.commander.commands", "modulename": "main.askai.core.commander.commands", "kind": "module", "doc": "<p>Package initialization.</p>\n"}, {"fullname": "main.askai.core.commander.commands.cache_cmd", "modulename": "main.askai.core.commander.commands.cache_cmd", "kind": "module", "doc": "<p>@project: HsPyLib-AskAI\n@package: askai.core.commander.cache_cmd\n   @file: cache_cmd.py\n@created: Thu, 27 Apr 2024\n @author: <B>H</B>ugo <B>S</B>aporetti <B>J</B>unior\n   @site: <a href=\"https://github.com/yorevs/askai\">https://github.com/yorevs/askai</a>\n@license: MIT - Please refer to <a href=\"https://opensource.org/licenses/MIT\">https://opensource.org/licenses/MIT</a></p>\n\n<p>Copyright (c) 2024, AskAI</p>\n"}, {"fullname": "main.askai.core.commander.commands.cache_cmd.CacheCmd", "modulename": "main.askai.core.commander.commands.cache_cmd", "qualname": "CacheCmd", "kind": "class", "doc": "<p>Provides cache command functionalities.</p>\n", "bases": "abc.ABC"}, {"fullname": "main.askai.core.commander.commands.cache_cmd.CacheCmd.list", "modulename": "main.askai.core.commander.commands.cache_cmd", "qualname": "CacheCmd.list", "kind": "function", "doc": "<p>List all cache entries.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.commander.commands.cache_cmd.CacheCmd.get", "modulename": "main.askai.core.commander.commands.cache_cmd", "qualname": "CacheCmd.get", "kind": "function", "doc": "<p>Retrieve a cache entry by its name.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>name</strong>:  The name of the cache entry to retrieve.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The value of the cache entry as a string, or None if the entry does not exist.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.commander.commands.cache_cmd.CacheCmd.clear", "modulename": "main.askai.core.commander.commands.cache_cmd", "qualname": "CacheCmd.clear", "kind": "function", "doc": "<p>Clear a specified cache entry or all cache entries.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>entry</strong>:  The cache entry to clear, specified by name or index. If None, all cache entries will be cleared.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">entry</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.commander.commands.cache_cmd.CacheCmd.files", "modulename": "main.askai.core.commander.commands.cache_cmd", "qualname": "CacheCmd.files", "kind": "function", "doc": "<p>List all cached files from the AskAI cache directory.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>cleanup</strong>:  If True, clean up the listed cache files after displaying them (default is False).</li>\n<li><strong>args</strong>:  Specific file names or indices to target for listing or cleanup.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">cleanup</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.commander.commands.camera_cmd", "modulename": "main.askai.core.commander.commands.camera_cmd", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "main.askai.core.commander.commands.camera_cmd.CameraCmd", "modulename": "main.askai.core.commander.commands.camera_cmd", "qualname": "CameraCmd", "kind": "class", "doc": "<p>Provides camera command functionalities.</p>\n", "bases": "abc.ABC"}, {"fullname": "main.askai.core.commander.commands.camera_cmd.CameraCmd.capture", "modulename": "main.askai.core.commander.commands.camera_cmd", "qualname": "CameraCmd.capture", "kind": "function", "doc": "<p>Take a photo using the webcam.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>filename</strong>:  The filename to save the photo under (optional).</li>\n<li><strong>detect_faces</strong>:  Whether to detect faces in the photo (default is True).</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">filename</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">pathlib</span><span class=\"o\">.</span><span class=\"n\">Path</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">detect_faces</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.commander.commands.camera_cmd.CameraCmd.identify", "modulename": "main.askai.core.commander.commands.camera_cmd", "qualname": "CameraCmd.identify", "kind": "function", "doc": "<p>Identify the person in front of the webcam.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>max_distance</strong>:  The maximum allowable distance for face recognition. A lower value means closer matching\nto the real face (default is configs.max_id_distance).</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">max_distance</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mf\">0.7</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.commander.commands.camera_cmd.CameraCmd.import_images", "modulename": "main.askai.core.commander.commands.camera_cmd", "qualname": "CameraCmd.import_images", "kind": "function", "doc": "<p>Import image files into the image collection.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>pathname</strong>:  The pathname or glob pattern specifying the images to be imported (optional).</li>\n<li><strong>detect_faces</strong>:  Whether to detect faces in the imported images (default is True).</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">pathname</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">pathlib</span><span class=\"o\">.</span><span class=\"n\">Path</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">detect_faces</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.commander.commands.general_cmd", "modulename": "main.askai.core.commander.commands.general_cmd", "kind": "module", "doc": "<p>@project: HsPyLib-AskAI\n@package: askai.core.commander.general_cmd\n   @file: general_cmd.py\n@created: Mon, 06 Apr 2024\n @author: <B>H</B>ugo <B>S</B>aporetti <B>J</B>unior\n   @site: <a href=\"https://github.com/yorevs/askai\">https://github.com/yorevs/askai</a>\n@license: MIT - Please refer to <a href=\"https://opensource.org/licenses/MIT\">https://opensource.org/licenses/MIT</a></p>\n\n<p>Copyright (c) 2024, AskAI</p>\n"}, {"fullname": "main.askai.core.commander.commands.general_cmd.GeneralCmd", "modulename": "main.askai.core.commander.commands.general_cmd", "qualname": "GeneralCmd", "kind": "class", "doc": "<p>Provides general command functionalities.</p>\n", "bases": "abc.ABC"}, {"fullname": "main.askai.core.commander.commands.general_cmd.GeneralCmd.execute", "modulename": "main.askai.core.commander.commands.general_cmd", "qualname": "GeneralCmd.execute", "kind": "function", "doc": "<p>Execute a terminal command.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>cmd_line</strong>:  The command line to execute (optional).</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">cmd_line</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.commander.commands.general_cmd.GeneralCmd.summarize", "modulename": "main.askai.core.commander.commands.general_cmd", "qualname": "GeneralCmd.summarize", "kind": "function", "doc": "<p>Generate a summarization of files and folder contents.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>folder</strong>:  The base folder from which the summarization will be generated.</li>\n<li><strong>glob</strong>:  The glob pattern specifying which files or folders to include in the summarization.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">folder</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">glob</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.commander.commands.general_cmd.GeneralCmd.idiom", "modulename": "main.askai.core.commander.commands.general_cmd", "qualname": "GeneralCmd.idiom", "kind": "function", "doc": "<p>Set the application language.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>locale_str</strong>:  The locale string.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">locale_str</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.commander.commands.general_cmd.GeneralCmd.app_info", "modulename": "main.askai.core.commander.commands.general_cmd", "qualname": "GeneralCmd.app_info", "kind": "function", "doc": "<p>Display some useful application information.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.commander.commands.general_cmd.GeneralCmd.translate", "modulename": "main.askai.core.commander.commands.general_cmd", "qualname": "GeneralCmd.translate", "kind": "function", "doc": "<p>Translate text from the source language to the target language.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>from_lang</strong>:  The source language.</li>\n<li><strong>to_lang</strong>:  The target language.</li>\n<li><strong>texts</strong>:  The texts to be translated.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">from_lang</span><span class=\"p\">:</span> <span class=\"n\">askai</span><span class=\"o\">.</span><span class=\"n\">language</span><span class=\"o\">.</span><span class=\"n\">language</span><span class=\"o\">.</span><span class=\"n\">Language</span>,</span><span class=\"param\">\t<span class=\"n\">to_lang</span><span class=\"p\">:</span> <span class=\"n\">askai</span><span class=\"o\">.</span><span class=\"n\">language</span><span class=\"o\">.</span><span class=\"n\">language</span><span class=\"o\">.</span><span class=\"n\">Language</span>,</span><span class=\"param\">\t<span class=\"o\">*</span><span class=\"n\">texts</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.commander.commands.history_cmd", "modulename": "main.askai.core.commander.commands.history_cmd", "kind": "module", "doc": "<p>@project: HsPyLib-AskAI\n@package: askai.core.commander.history_cmd\n   @file: general_cmd.py\n@created: Sat, 22 Jun 2024\n @author: <B>H</B>ugo <B>S</B>aporetti <B>J</B>unior\n   @site: <a href=\"https://github.com/yorevs/askai\">https://github.com/yorevs/askai</a>\n@license: MIT - Please refer to <a href=\"https://opensource.org/licenses/MIT\">https://opensource.org/licenses/MIT</a></p>\n\n<p>Copyright (c) 2024, AskAI</p>\n"}, {"fullname": "main.askai.core.commander.commands.history_cmd.HistoryCmd", "modulename": "main.askai.core.commander.commands.history_cmd", "qualname": "HistoryCmd", "kind": "class", "doc": "<p>Provides history command functionalities.</p>\n", "bases": "abc.ABC"}, {"fullname": "main.askai.core.commander.commands.history_cmd.HistoryCmd.context_list", "modulename": "main.askai.core.commander.commands.history_cmd", "qualname": "HistoryCmd.context_list", "kind": "function", "doc": "<p>List the entries in the chat context window.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.commander.commands.history_cmd.HistoryCmd.context_forget", "modulename": "main.askai.core.commander.commands.history_cmd", "qualname": "HistoryCmd.context_forget", "kind": "function", "doc": "<p>Forget entries pushed to the chat context.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>context</strong>:  The context key to forget, or None to forget all context entries.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">context</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.commander.commands.history_cmd.HistoryCmd.context_copy", "modulename": "main.askai.core.commander.commands.history_cmd", "qualname": "HistoryCmd.context_copy", "kind": "function", "doc": "<p>Copy a context entry to the clipboard.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>name</strong>:  The name of the context entry to copy. If None, the default context will be copied.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.commander.commands.history_cmd.HistoryCmd.history_list", "modulename": "main.askai.core.commander.commands.history_cmd", "qualname": "HistoryCmd.history_list", "kind": "function", "doc": "<p>List the input history entries.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.commander.commands.history_cmd.HistoryCmd.history_forget", "modulename": "main.askai.core.commander.commands.history_cmd", "qualname": "HistoryCmd.history_forget", "kind": "function", "doc": "<p>Forget entries pushed to the history.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.commander.commands.settings_cmd", "modulename": "main.askai.core.commander.commands.settings_cmd", "kind": "module", "doc": "<p>@project: HsPyLib-AskAI\n@package: askai.core.commander.settings_cmd\n   @file: settings_cmd.py\n@created: Thu, 25 Apr 2024\n @author: <B>H</B>ugo <B>S</B>aporetti <B>J</B>unior\n   @site: <a href=\"https://github.com/yorevs/askai\">https://github.com/yorevs/askai</a>\n@license: MIT - Please refer to <a href=\"https://opensource.org/licenses/MIT\">https://opensource.org/licenses/MIT</a></p>\n\n<p>Copyright (c) 2024, AskAI</p>\n"}, {"fullname": "main.askai.core.commander.commands.settings_cmd.SettingsCmd", "modulename": "main.askai.core.commander.commands.settings_cmd", "qualname": "SettingsCmd", "kind": "class", "doc": "<p>Provides settings manipulation command functionalities.</p>\n", "bases": "abc.ABC"}, {"fullname": "main.askai.core.commander.commands.settings_cmd.SettingsCmd.list", "modulename": "main.askai.core.commander.commands.settings_cmd", "qualname": "SettingsCmd.list", "kind": "function", "doc": "<p>List all settings, optionally matching filters.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">filters</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.commander.commands.settings_cmd.SettingsCmd.set", "modulename": "main.askai.core.commander.commands.settings_cmd", "qualname": "SettingsCmd.set", "kind": "function", "doc": "<p>Set a setting value.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>name</strong>:  The name of the setting to update or create.</li>\n<li><strong>value</strong>:  The value to assign to the setting.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.commander.commands.settings_cmd.SettingsCmd.get", "modulename": "main.askai.core.commander.commands.settings_cmd", "qualname": "SettingsCmd.get", "kind": "function", "doc": "<p>Retrieve the setting specified by the key.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>key</strong>:  The key of the setting to retrieve.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The corresponding SettingsEntry if found, otherwise None.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">setman</span><span class=\"o\">.</span><span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">settings_entry</span><span class=\"o\">.</span><span class=\"n\">SettingsEntry</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.commander.commands.settings_cmd.SettingsCmd.reset", "modulename": "main.askai.core.commander.commands.settings_cmd", "qualname": "SettingsCmd.reset", "kind": "function", "doc": "<p>Reset all settings to their default values.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.commander.commands.tts_stt_cmd", "modulename": "main.askai.core.commander.commands.tts_stt_cmd", "kind": "module", "doc": "<p>@project: HsPyLib-AskAI\n@package: askai.core.commander.tts_stt_cmd\n   @file: tts_stt_cmd.py\n@created: Thu, 25 Apr 2024\n @author: <B>H</B>ugo <B>S</B>aporetti <B>J</B>unior\n   @site: <a href=\"https://github.com/yorevs/askai\">https://github.com/yorevs/askai</a>\n@license: MIT - Please refer to <a href=\"https://opensource.org/licenses/MIT\">https://opensource.org/licenses/MIT</a></p>\n\n<p>Copyright (c) 2024, AskAI</p>\n"}, {"fullname": "main.askai.core.commander.commands.tts_stt_cmd.TtsSttCmd", "modulename": "main.askai.core.commander.commands.tts_stt_cmd", "qualname": "TtsSttCmd", "kind": "class", "doc": "<p>Provides Speech-to-Text (STT) and Text-to-Speech (TTS) command functionalities.</p>\n", "bases": "abc.ABC"}, {"fullname": "main.askai.core.commander.commands.tts_stt_cmd.TtsSttCmd.voice_list", "modulename": "main.askai.core.commander.commands.tts_stt_cmd", "qualname": "TtsSttCmd.voice_list", "kind": "function", "doc": "<p>List all available voices for the current engine/model.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.commander.commands.tts_stt_cmd.TtsSttCmd.voice_set", "modulename": "main.askai.core.commander.commands.tts_stt_cmd", "qualname": "TtsSttCmd.voice_set", "kind": "function", "doc": "<p>Set the specified voice for the current engine.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>name_or_index</strong>:  The name or index of the voice to set. If None, the default voice will be used.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">name_or_index</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.commander.commands.tts_stt_cmd.TtsSttCmd.voice_play", "modulename": "main.askai.core.commander.commands.tts_stt_cmd", "qualname": "TtsSttCmd.voice_play", "kind": "function", "doc": "<p>Play a sample using the specified voice.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>name_or_index</strong>:  The name or index of the voice to use for the sample. If None, the default voice will be used.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">name_or_index</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.commander.commands.tts_stt_cmd.TtsSttCmd.tempo", "modulename": "main.askai.core.commander.commands.tts_stt_cmd", "qualname": "TtsSttCmd.tempo", "kind": "function", "doc": "<p>Set the playing speed of the speech.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>speed</strong>:  The speed to set for speech playback. If None, the default speed will be used.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">speed</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.commander.commands.tts_stt_cmd.TtsSttCmd.device_list", "modulename": "main.askai.core.commander.commands.tts_stt_cmd", "qualname": "TtsSttCmd.device_list", "kind": "function", "doc": "<p>List the available audio input devices.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.commander.commands.tts_stt_cmd.TtsSttCmd.device_set", "modulename": "main.askai.core.commander.commands.tts_stt_cmd", "qualname": "TtsSttCmd.device_set", "kind": "function", "doc": "<p>Set the current audio input device.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>name_or_index</strong>:  The name or index of the audio input device to set. If None, the default device will be\nused.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">name_or_index</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.commander.commands.tts_stt_cmd.TtsSttCmd.tts", "modulename": "main.askai.core.commander.commands.tts_stt_cmd", "qualname": "TtsSttCmd.tts", "kind": "function", "doc": "<p>Convert text to speech and optionally play it back.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>text</strong>:  The text to be converted to speech.</li>\n<li><strong>dest_dir</strong>:  The directory where the audio file will be saved (default is the current working directory).</li>\n<li><strong>playback</strong>:  Whether to play back the generated speech after conversion (default is True).</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">text</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">dest_dir</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;/Users/hjunior/GIT-Repository/GitHub/askai&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">playback</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.component", "modulename": "main.askai.core.component", "kind": "module", "doc": "<p>Package initialization.</p>\n"}, {"fullname": "main.askai.core.component.audio_player", "modulename": "main.askai.core.component.audio_player", "kind": "module", "doc": "<p>@project: HsPyLib-AskAI\n@package: askai.core.component\n   @file: audio_player.py\n@created: Wed, 22 Feb 2024\n @author: <B>H</B>ugo <B>S</B>aporetti <B>J</B>unior\n   @site: <a href=\"https://github.com/yorevs/askai\">https://github.com/yorevs/askai</a>\n@license: MIT - Please refer to <a href=\"https://opensource.org/licenses/MIT\">https://opensource.org/licenses/MIT</a></p>\n\n<p>Copyright (c) 2024, AskAI</p>\n"}, {"fullname": "main.askai.core.component.audio_player.AudioPlayer", "modulename": "main.askai.core.component.audio_player", "qualname": "AudioPlayer", "kind": "class", "doc": "<p>Provide an interface for playing audio through the default speaker device. This class allows for the playback of\naudio files using the system's default audio output device.</p>\n", "bases": "typing.Type"}, {"fullname": "main.askai.core.component.audio_player.AudioPlayer.__init__", "modulename": "main.askai.core.component.audio_player", "qualname": "AudioPlayer.__init__", "kind": "function", "doc": "<p>Invoke the class constructor or return the instance if it exists.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, {"fullname": "main.askai.core.component.audio_player.AudioPlayer.INSTANCE", "modulename": "main.askai.core.component.audio_player", "qualname": "AudioPlayer.INSTANCE", "kind": "variable", "doc": "<p></p>\n", "annotation": ": main.askai.core.component.audio_player.AudioPlayer"}, {"fullname": "main.askai.core.component.audio_player.AudioPlayer.SFX_DIR", "modulename": "main.askai.core.component.audio_player", "qualname": "AudioPlayer.SFX_DIR", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;/Users/hjunior/GIT-Repository/GitHub/askai/src/main/askai/resources/sound-fx&#x27;"}, {"fullname": "main.askai.core.component.audio_player.AudioPlayer.play_audio_file", "modulename": "main.askai.core.component.audio_player", "qualname": "AudioPlayer.play_audio_file", "kind": "function", "doc": "<p>Play the specified audio file using the ffplay (ffmpeg) application.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>path_to_audio_file</strong>:  The path to the audio file (e.g., MP3) to be played.</li>\n<li><strong>tempo</strong>:  The playback speed (default is 1).</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>True if the audio file is played successfully, otherwise False.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">path_to_audio_file</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"n\">pathlib</span><span class=\"o\">.</span><span class=\"n\">Path</span>, </span><span class=\"param\"><span class=\"n\">tempo</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">1</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.component.audio_player.AudioPlayer.start_delay", "modulename": "main.askai.core.component.audio_player", "qualname": "AudioPlayer.start_delay", "kind": "function", "doc": "<p>Determine the amount of delay before start streaming the text.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">float</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.component.audio_player.AudioPlayer.audio_length", "modulename": "main.askai.core.component.audio_player", "qualname": "AudioPlayer.audio_length", "kind": "function", "doc": "<p>Determine the length of an audio file using ffmpeg.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>path_to_audio_file</strong>:  The path to the audio file whose length is to be determined.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The length of the audio file in seconds as a float.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">path_to_audio_file</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">float</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.component.audio_player.AudioPlayer.play_sfx", "modulename": "main.askai.core.component.audio_player", "qualname": "AudioPlayer.play_sfx", "kind": "function", "doc": "<p>Play a sound effect audio file.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>filename</strong>:  The name of the sound effect file (without the extension).</li>\n<li><strong>file_ext</strong>:  The file extension of the sound effect (default is \".mp3\").</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>True if the sound effect is played successfully, otherwise False.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">filename</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">file_ext</span><span class=\"p\">:</span> <span class=\"n\">Literal</span><span class=\"p\">[</span><span class=\"s1\">&#39;.mp3&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;.wav&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;.m4a&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;.mp3&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.component.cache_service", "modulename": "main.askai.core.component.cache_service", "kind": "module", "doc": "<p>@project: HsPyLib-AskAI\n@package: askai.core.component\n   @file: cache_service.py\n@created: Tue, 16 Jan 2024\n @author: <B>H</B>ugo <B>S</B>aporetti <B>J</B>unior\n   @site: <a href=\"https://github.com/yorevs/askai\">https://github.com/yorevs/askai</a>\n@license: MIT - Please refer to <a href=\"https://opensource.org/licenses/MIT\">https://opensource.org/licenses/MIT</a></p>\n\n<p>Copyright (c) 2024, AskAI</p>\n"}, {"fullname": "main.askai.core.component.cache_service.CACHE_DIR", "modulename": "main.askai.core.component.cache_service", "qualname": "CACHE_DIR", "kind": "variable", "doc": "<p></p>\n", "annotation": ": pathlib.Path", "default_value": "PosixPath(&#x27;/Users/hjunior/.config/hhs/askai/cache&#x27;)"}, {"fullname": "main.askai.core.component.cache_service.SETTINGS_DIR", "modulename": "main.askai.core.component.cache_service", "qualname": "SETTINGS_DIR", "kind": "variable", "doc": "<p></p>\n", "annotation": ": pathlib.Path", "default_value": "PosixPath(&#x27;/Users/hjunior/.config/hhs/askai/settings&#x27;)"}, {"fullname": "main.askai.core.component.cache_service.AUDIO_DIR", "modulename": "main.askai.core.component.cache_service", "qualname": "AUDIO_DIR", "kind": "variable", "doc": "<p></p>\n", "annotation": ": pathlib.Path", "default_value": "PosixPath(&#x27;/Users/hjunior/.config/hhs/askai/cache/audio&#x27;)"}, {"fullname": "main.askai.core.component.cache_service.PICTURE_DIR", "modulename": "main.askai.core.component.cache_service", "qualname": "PICTURE_DIR", "kind": "variable", "doc": "<p></p>\n", "annotation": ": pathlib.Path", "default_value": "PosixPath(&#x27;/Users/hjunior/.config/hhs/askai/cache/pictures&#x27;)"}, {"fullname": "main.askai.core.component.cache_service.PHOTO_DIR", "modulename": "main.askai.core.component.cache_service", "qualname": "PHOTO_DIR", "kind": "variable", "doc": "<p></p>\n", "annotation": ": pathlib.Path", "default_value": "PosixPath(&#x27;/Users/hjunior/.config/hhs/askai/cache/pictures/photos&#x27;)"}, {"fullname": "main.askai.core.component.cache_service.FACE_DIR", "modulename": "main.askai.core.component.cache_service", "qualname": "FACE_DIR", "kind": "variable", "doc": "<p></p>\n", "annotation": ": pathlib.Path", "default_value": "PosixPath(&#x27;/Users/hjunior/.config/hhs/askai/cache/pictures/faces&#x27;)"}, {"fullname": "main.askai.core.component.cache_service.IMG_IMPORTS_DIR", "modulename": "main.askai.core.component.cache_service", "qualname": "IMG_IMPORTS_DIR", "kind": "variable", "doc": "<p></p>\n", "annotation": ": pathlib.Path", "default_value": "PosixPath(&#x27;/Users/hjunior/.config/hhs/askai/cache/pictures/imports&#x27;)"}, {"fullname": "main.askai.core.component.cache_service.GEN_AI_DIR", "modulename": "main.askai.core.component.cache_service", "qualname": "GEN_AI_DIR", "kind": "variable", "doc": "<p></p>\n", "annotation": ": pathlib.Path", "default_value": "PosixPath(&#x27;/Users/hjunior/.config/hhs/askai/cache/generated&#x27;)"}, {"fullname": "main.askai.core.component.cache_service.REC_DIR", "modulename": "main.askai.core.component.cache_service", "qualname": "REC_DIR", "kind": "variable", "doc": "<p></p>\n", "annotation": ": pathlib.Path", "default_value": "PosixPath(&#x27;/Users/hjunior/.config/hhs/askai/cache/recordings&#x27;)"}, {"fullname": "main.askai.core.component.cache_service.PERSIST_DIR", "modulename": "main.askai.core.component.cache_service", "qualname": "PERSIST_DIR", "kind": "variable", "doc": "<p></p>\n", "annotation": ": pathlib.Path", "default_value": "PosixPath(&#x27;/Users/hjunior/.config/hhs/askai/cache/chroma&#x27;)"}, {"fullname": "main.askai.core.component.cache_service.CacheEntry", "modulename": "main.askai.core.component.cache_service", "qualname": "CacheEntry", "kind": "class", "doc": "<p>CacheEntry(key, expires)</p>\n", "bases": "builtins.tuple"}, {"fullname": "main.askai.core.component.cache_service.CacheEntry.__init__", "modulename": "main.askai.core.component.cache_service", "qualname": "CacheEntry.__init__", "kind": "function", "doc": "<p>Create new instance of CacheEntry(key, expires)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">key</span>, </span><span class=\"param\"><span class=\"n\">expires</span></span>)</span>"}, {"fullname": "main.askai.core.component.cache_service.CacheEntry.key", "modulename": "main.askai.core.component.cache_service", "qualname": "CacheEntry.key", "kind": "variable", "doc": "<p>Alias for field number 0</p>\n"}, {"fullname": "main.askai.core.component.cache_service.CacheEntry.expires", "modulename": "main.askai.core.component.cache_service", "qualname": "CacheEntry.expires", "kind": "variable", "doc": "<p>Alias for field number 1</p>\n"}, {"fullname": "main.askai.core.component.cache_service.CacheService", "modulename": "main.askai.core.component.cache_service", "qualname": "CacheService", "kind": "class", "doc": "<p>Provide a cache service for previously used queries, audio generation, and other recurring operations. This\nclass is designed to store and retrieve cached data efficiently, reducing the need for repeated processing and\nenhancing performance.</p>\n", "bases": "typing.Type"}, {"fullname": "main.askai.core.component.cache_service.CacheService.__init__", "modulename": "main.askai.core.component.cache_service", "qualname": "CacheService.__init__", "kind": "function", "doc": "<p>Invoke the class constructor or return the instance if it exists.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, {"fullname": "main.askai.core.component.cache_service.CacheService.INSTANCE", "modulename": "main.askai.core.component.cache_service", "qualname": "CacheService.INSTANCE", "kind": "variable", "doc": "<p></p>\n", "annotation": ": main.askai.core.component.cache_service.CacheService"}, {"fullname": "main.askai.core.component.cache_service.CacheService.ASKAI_CACHE_KEYS", "modulename": "main.askai.core.component.cache_service", "qualname": "CacheService.ASKAI_CACHE_KEYS", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;askai-cache-keys&#x27;"}, {"fullname": "main.askai.core.component.cache_service.CacheService.ASKAI_INPUT_CACHE_KEY", "modulename": "main.askai.core.component.cache_service", "qualname": "CacheService.ASKAI_INPUT_CACHE_KEY", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;askai-input-history&#x27;"}, {"fullname": "main.askai.core.component.cache_service.CacheService.ASKAI_CONTEXT_KEY", "modulename": "main.askai.core.component.cache_service", "qualname": "CacheService.ASKAI_CONTEXT_KEY", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;askai-context-key&#x27;"}, {"fullname": "main.askai.core.component.cache_service.CacheService.keys", "modulename": "main.askai.core.component.cache_service", "qualname": "CacheService.keys", "kind": "variable", "doc": "<p></p>\n", "annotation": ": set[str]"}, {"fullname": "main.askai.core.component.cache_service.CacheService.audio_file_path", "modulename": "main.askai.core.component.cache_service", "qualname": "CacheService.audio_file_path", "kind": "function", "doc": "<p>Retrieve the hashed audio file path and determine whether the file already exists.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>text</strong>:  The text that the audio represents.</li>\n<li><strong>voice</strong>:  The AI voice used for speech synthesis (default is \"onyx\").</li>\n<li><strong>audio_format</strong>:  The audio file format (default is \"mp3\").</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A tuple containing the hashed file path as a string and a boolean indicating if the file exists.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">text</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">voice</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;onyx&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">audio_format</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;mp3&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.component.cache_service.CacheService.save_reply", "modulename": "main.askai.core.component.cache_service", "qualname": "CacheService.save_reply", "kind": "function", "doc": "<p>Save an AI reply into the TTL (Time-To-Live) cache.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>text</strong>:  The text to be cached.</li>\n<li><strong>reply</strong>:  The AI reply associated with this text.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The key under which the reply is saved, or None if the save operation fails.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">text</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">reply</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.component.cache_service.CacheService.read_reply", "modulename": "main.askai.core.component.cache_service", "qualname": "CacheService.read_reply", "kind": "function", "doc": "<p>Retrieve AI replies from the TTL (Time-To-Live) cache.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>text</strong>:  The text key to look up in the cache.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The cached reply associated with the text, or None if not found.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">text</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.component.cache_service.CacheService.del_reply", "modulename": "main.askai.core.component.cache_service", "qualname": "CacheService.del_reply", "kind": "function", "doc": "<p>Delete an AI reply from the TTL (Time-To-Live) cache.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>text</strong>:  The text key whose associated reply is to be deleted from the cache.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The deleted reply if it existed, or None if no reply was found.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">text</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.component.cache_service.CacheService.clear_replies", "modulename": "main.askai.core.component.cache_service", "qualname": "CacheService.clear_replies", "kind": "function", "doc": "<p>Clear all cached replies.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A list of keys for the replies that were deleted from the cache.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.component.cache_service.CacheService.read_input_history", "modulename": "main.askai.core.component.cache_service", "qualname": "CacheService.read_input_history", "kind": "function", "doc": "<p>Retrieve line input queries from the TTL (Time-To-Live) cache.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A list of input queries stored in the cache.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.component.cache_service.CacheService.save_input_history", "modulename": "main.askai.core.component.cache_service", "qualname": "CacheService.save_input_history", "kind": "function", "doc": "<p>Save input queries into the TTL (Time-To-Live) cache.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>history</strong>:  A list of input queries to be saved. If None, the current input history will be saved.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The temporary file name of the saved entry.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">history</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.component.cache_service.CacheService.load_input_history", "modulename": "main.askai.core.component.cache_service", "qualname": "CacheService.load_input_history", "kind": "function", "doc": "<p>Load input queries from the TTL (Time-To-Live) cache extending it with a predefined input history.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>predefined</strong>:  A list of predefined input queries to be appended to the final list.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A list of input queries loaded from the cache.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">predefined</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.component.cache_service.CacheService.save_context", "modulename": "main.askai.core.component.cache_service", "qualname": "CacheService.save_context", "kind": "function", "doc": "<p>Save the context window entries into the TTL (Time-To-Live) cache.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>context</strong>:  A list of context entries to be saved.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">context</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.component.cache_service.CacheService.read_context", "modulename": "main.askai.core.component.cache_service", "qualname": "CacheService.read_context", "kind": "function", "doc": "<p>Read the context window entries from the TTL (Time-To-Live) cache.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A list of context entries retrieved from the cache.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.component.camera", "modulename": "main.askai.core.component.camera", "kind": "module", "doc": "<p>@project: HsPyLib-AskAI\n@package: askai.core.components\n   @file: recorder.py\n@created: Wed, 22 Feb 2024\n @author: <B>H</B>ugo <B>S</B>aporetti <B>J</B>unior\n   @site: <a href=\"https://github.com/yorevs/askai\">https://github.com/yorevs/askai</a>\n@license: MIT - Please refer to <a href=\"https://opensource.org/licenses/MIT\">https://opensource.org/licenses/MIT</a></p>\n\n<p>Copyright (c) 2024, AskAI</p>\n"}, {"fullname": "main.askai.core.component.camera.InputDevice", "modulename": "main.askai.core.component.camera", "qualname": "InputDevice", "kind": "variable", "doc": "<p></p>\n", "annotation": ": TypeAlias", "default_value": "tuple[int, str]"}, {"fullname": "main.askai.core.component.camera.Camera", "modulename": "main.askai.core.component.camera", "qualname": "Camera", "kind": "class", "doc": "<p>Provide an interface to interact with the webcam. This class offers methods for controlling and accessing the\nwebcam's functionality, ensuring that only one instance interacts with the hardware at a time.</p>\n", "bases": "typing.Type"}, {"fullname": "main.askai.core.component.camera.Camera.__init__", "modulename": "main.askai.core.component.camera", "qualname": "Camera.__init__", "kind": "function", "doc": "<p>Invoke the class constructor or return the instance if it exists.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, {"fullname": "main.askai.core.component.camera.Camera.INSTANCE", "modulename": "main.askai.core.component.camera", "qualname": "Camera.INSTANCE", "kind": "variable", "doc": "<p></p>\n", "annotation": ": main.askai.core.component.camera.Camera"}, {"fullname": "main.askai.core.component.camera.Camera.RESOURCE_DIR", "modulename": "main.askai.core.component.camera", "qualname": "Camera.RESOURCE_DIR", "kind": "variable", "doc": "<p></p>\n", "annotation": ": pathlib.Path", "default_value": "PosixPath(&#x27;/Users/hjunior/GIT-Repository/GitHub/askai/src/main/askai/resources&#x27;)"}, {"fullname": "main.askai.core.component.camera.Camera.ALG", "modulename": "main.askai.core.component.camera", "qualname": "Camera.ALG", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;haarcascade_frontalface_default.xml&#x27;"}, {"fullname": "main.askai.core.component.camera.Camera.initialize", "modulename": "main.askai.core.component.camera", "qualname": "Camera.initialize", "kind": "function", "doc": "<p>Initialize the camera device.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.component.camera.Camera.shutdown", "modulename": "main.askai.core.component.camera", "qualname": "Camera.shutdown", "kind": "function", "doc": "<p>Shutdown the camera device.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.component.camera.Camera.capture", "modulename": "main.askai.core.component.camera", "qualname": "Camera.capture", "kind": "function", "doc": "<p>Capture a webcam frame (take a photo).</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>filename</strong>:  The file name for the capturing image.</li>\n<li><strong>countdown</strong>:  The number of seconds for the countdown before capturing the photo (default is 3).</li>\n<li><strong>with_caption</strong>:  Whether to generate a caption for the captured image (default is True).</li>\n<li><strong>store_image</strong>:  Whether to save the captured image to the image store (default is True).</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A tuple containing the image file and image data, or None if the capture fails.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">filename</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">pathlib</span><span class=\"o\">.</span><span class=\"n\">Path</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">countdown</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>,</span><span class=\"param\">\t<span class=\"n\">with_caption</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">store_image</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"n\">askai</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">component</span><span class=\"o\">.</span><span class=\"n\">image_store</span><span class=\"o\">.</span><span class=\"n\">ImageFile</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">]]]</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.component.camera.Camera.detect_faces", "modulename": "main.askai.core.component.camera", "qualname": "Camera.detect_faces", "kind": "function", "doc": "<p>Detect all faces in the provided photo.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>photo</strong>:  The image data in which to detect faces.</li>\n<li><strong>filename</strong>:  The file name for the detected face image.(optional).</li>\n<li><strong>with_caption</strong>:  Whether to generate captions for the detected faces (default is True).</li>\n<li><strong>store_image</strong>:  Whether to save the processed images to the image store (default is True).</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A tuple containing a list of image files and a list of image data for the detected faces.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">photo</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">[</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">filename</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">pathlib</span><span class=\"o\">.</span><span class=\"n\">Path</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">with_caption</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">store_image</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">askai</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">component</span><span class=\"o\">.</span><span class=\"n\">image_store</span><span class=\"o\">.</span><span class=\"n\">ImageFile</span><span class=\"p\">],</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">[</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">]]]</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.component.camera.Camera.identify", "modulename": "main.askai.core.component.camera", "qualname": "Camera.identify", "kind": "function", "doc": "<p>Identify the person in front of the webcam.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>countdown</strong>:  The number of seconds for the countdown before capturing an identification the photo\n(default is 0).</li>\n<li><strong>max_distance</strong>:  The maximum allowable distance for face recognition accuracy (default is\nconfigs.max_id_distance).</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>Metadata about the identified person, or None if identification fails.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">countdown</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">max_distance</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.7</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">askai</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">component</span><span class=\"o\">.</span><span class=\"n\">image_store</span><span class=\"o\">.</span><span class=\"n\">ImageMetadata</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.component.camera.Camera.import_images", "modulename": "main.askai.core.component.camera", "qualname": "Camera.import_images", "kind": "function", "doc": "<p>Import image files into the image collection.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>pathname</strong>:  The path or glob pattern of the images to be imported.</li>\n<li><strong>detect_faces</strong>:  Whether to detect faces in the imported images (default is False).</li>\n<li><strong>with_caption</strong>:  Whether to generate captions for the imported images (default is True).</li>\n<li><strong>store_image</strong>:  Whether to save the processed images to the image store (default is True).</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A tuple containing the number of images successfully imported, and the number of detected faces.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">pathname</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">pathlib</span><span class=\"o\">.</span><span class=\"n\">Path</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">detect_faces</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">with_caption</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">store_image</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.component.geo_location", "modulename": "main.askai.core.component.geo_location", "kind": "module", "doc": "<p>@project: HsPyLib-AskAI\n@package: askai.core.component\n   @file: geo_location.py\n@created: Tue, 23 Apr 2024\n @author: <B>H</B>ugo <B>S</B>aporetti <B>J</B>unior\n   @site: <a href=\"https://github.com/yorevs/askai\">https://github.com/yorevs/askai</a>\n@license: MIT - Please refer to <a href=\"https://opensource.org/licenses/MIT\">https://opensource.org/licenses/MIT</a></p>\n\n<p>Copyright (c) 2024, AskAI</p>\n"}, {"fullname": "main.askai.core.component.geo_location.GeoLocation", "modulename": "main.askai.core.component.geo_location", "qualname": "GeoLocation", "kind": "class", "doc": "<p>A class for managing and retrieving geographic location data.</p>\n", "bases": "typing.Type"}, {"fullname": "main.askai.core.component.geo_location.GeoLocation.__init__", "modulename": "main.askai.core.component.geo_location", "qualname": "GeoLocation.__init__", "kind": "function", "doc": "<p>Invoke the class constructor or return the instance if it exists.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, {"fullname": "main.askai.core.component.geo_location.GeoLocation.INSTANCE", "modulename": "main.askai.core.component.geo_location", "qualname": "GeoLocation.INSTANCE", "kind": "variable", "doc": "<p></p>\n", "annotation": ": main.askai.core.component.geo_location.GeoLocation"}, {"fullname": "main.askai.core.component.geo_location.GeoLocation.GEO_LOC_URL", "modulename": "main.askai.core.component.geo_location", "qualname": "GeoLocation.GEO_LOC_URL", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;http://ip-api.com/json&#x27;"}, {"fullname": "main.askai.core.component.geo_location.GeoLocation.EMPTY_JSON_RESP", "modulename": "main.askai.core.component.geo_location", "qualname": "GeoLocation.EMPTY_JSON_RESP", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;{\\n    &quot;status&quot;: &quot;failure&quot;, &quot;country&quot;: &quot;&quot;, &quot;countryCode&quot;: &quot;&quot;, &quot;region&quot;: &quot;&quot;, &quot;regionName&quot;: &quot;&quot;,\\n    &quot;city&quot;: &quot;&quot;, &quot;zip&quot;: &quot;&quot;, &quot;lat&quot;: 0.0, &quot;lon&quot;: 0.0, &quot;timezone&quot;: &quot;&quot;,\\n    &quot;isp&quot;: &quot;&quot;, &quot;org&quot;: &quot;&quot;, &quot;as&quot;: &quot;&quot;, &quot;query&quot;: &quot;&quot;\\n}&#x27;"}, {"fullname": "main.askai.core.component.geo_location.GeoLocation.DATE_FMT", "modulename": "main.askai.core.component.geo_location", "qualname": "GeoLocation.DATE_FMT", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;%a %d %b %-H:%M %Y&#x27;"}, {"fullname": "main.askai.core.component.geo_location.GeoLocation.get_location", "modulename": "main.askai.core.component.geo_location", "qualname": "GeoLocation.get_location", "kind": "function", "doc": "<p>Retrieve the geographic location based on the provided IP address.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>ip</strong>:  The IP address to locate. If None, the current device's IP address will be used.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A Namespace object containing the geolocation data, such as latitude, longitude, city, and country.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">ip</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hspylib</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">namespace</span><span class=\"o\">.</span><span class=\"n\">Namespace</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.component.geo_location.GeoLocation.latitude", "modulename": "main.askai.core.component.geo_location", "qualname": "GeoLocation.latitude", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "main.askai.core.component.geo_location.GeoLocation.longitude", "modulename": "main.askai.core.component.geo_location", "qualname": "GeoLocation.longitude", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "main.askai.core.component.geo_location.GeoLocation.country", "modulename": "main.askai.core.component.geo_location", "qualname": "GeoLocation.country", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "main.askai.core.component.geo_location.GeoLocation.country_code", "modulename": "main.askai.core.component.geo_location", "qualname": "GeoLocation.country_code", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "main.askai.core.component.geo_location.GeoLocation.region", "modulename": "main.askai.core.component.geo_location", "qualname": "GeoLocation.region", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "main.askai.core.component.geo_location.GeoLocation.region_name", "modulename": "main.askai.core.component.geo_location", "qualname": "GeoLocation.region_name", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "main.askai.core.component.geo_location.GeoLocation.city", "modulename": "main.askai.core.component.geo_location", "qualname": "GeoLocation.city", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "main.askai.core.component.geo_location.GeoLocation.zip", "modulename": "main.askai.core.component.geo_location", "qualname": "GeoLocation.zip", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "main.askai.core.component.geo_location.GeoLocation.timezone", "modulename": "main.askai.core.component.geo_location", "qualname": "GeoLocation.timezone", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "main.askai.core.component.geo_location.GeoLocation.location", "modulename": "main.askai.core.component.geo_location", "qualname": "GeoLocation.location", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "main.askai.core.component.geo_location.GeoLocation.datetime", "modulename": "main.askai.core.component.geo_location", "qualname": "GeoLocation.datetime", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "main.askai.core.component.image_store", "modulename": "main.askai.core.component.image_store", "kind": "module", "doc": "<p>@project: HsPyLib-AskAI\n@package: askai.core.components\n   @file: recorder.py\n@created: Wed, 22 Feb 2024\n @author: <B>H</B>ugo <B>S</B>aporetti <B>J</B>unior\n   @site: <a href=\"https://github.com/yorevs/askai\">https://github.com/yorevs/askai</a>\n@license: MIT - Please refer to <a href=\"https://opensource.org/licenses/MIT\">https://opensource.org/licenses/MIT</a></p>\n\n<p>Copyright (c) 2024, AskAI</p>\n"}, {"fullname": "main.askai.core.component.image_store.Metadata", "modulename": "main.askai.core.component.image_store", "qualname": "Metadata", "kind": "variable", "doc": "<p></p>\n", "annotation": ": TypeAlias", "default_value": "Mapping[str, str | int | float | bool]"}, {"fullname": "main.askai.core.component.image_store.ImageData", "modulename": "main.askai.core.component.image_store", "qualname": "ImageData", "kind": "variable", "doc": "<p></p>\n", "annotation": ": TypeAlias", "default_value": "numpy.ndarray[typing.Any, numpy.dtype]"}, {"fullname": "main.askai.core.component.image_store.ImageFile", "modulename": "main.askai.core.component.image_store", "qualname": "ImageFile", "kind": "class", "doc": "<p>ImageFile(img_id, img_path, img_category, img_caption)</p>\n", "bases": "builtins.tuple"}, {"fullname": "main.askai.core.component.image_store.ImageFile.__init__", "modulename": "main.askai.core.component.image_store", "qualname": "ImageFile.__init__", "kind": "function", "doc": "<p>Create new instance of ImageFile(img_id, img_path, img_category, img_caption)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">img_id</span>, </span><span class=\"param\"><span class=\"n\">img_path</span>, </span><span class=\"param\"><span class=\"n\">img_category</span>, </span><span class=\"param\"><span class=\"n\">img_caption</span></span>)</span>"}, {"fullname": "main.askai.core.component.image_store.ImageFile.img_id", "modulename": "main.askai.core.component.image_store", "qualname": "ImageFile.img_id", "kind": "variable", "doc": "<p>Alias for field number 0</p>\n"}, {"fullname": "main.askai.core.component.image_store.ImageFile.img_path", "modulename": "main.askai.core.component.image_store", "qualname": "ImageFile.img_path", "kind": "variable", "doc": "<p>Alias for field number 1</p>\n"}, {"fullname": "main.askai.core.component.image_store.ImageFile.img_category", "modulename": "main.askai.core.component.image_store", "qualname": "ImageFile.img_category", "kind": "variable", "doc": "<p>Alias for field number 2</p>\n"}, {"fullname": "main.askai.core.component.image_store.ImageFile.img_caption", "modulename": "main.askai.core.component.image_store", "qualname": "ImageFile.img_caption", "kind": "variable", "doc": "<p>Alias for field number 3</p>\n"}, {"fullname": "main.askai.core.component.image_store.ImageMetadata", "modulename": "main.askai.core.component.image_store", "qualname": "ImageMetadata", "kind": "class", "doc": "<p>ImageMetadata(caption, data, uri, distance)</p>\n", "bases": "builtins.tuple"}, {"fullname": "main.askai.core.component.image_store.ImageMetadata.__init__", "modulename": "main.askai.core.component.image_store", "qualname": "ImageMetadata.__init__", "kind": "function", "doc": "<p>Create new instance of ImageMetadata(caption, data, uri, distance)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">caption</span>, </span><span class=\"param\"><span class=\"n\">data</span>, </span><span class=\"param\"><span class=\"n\">uri</span>, </span><span class=\"param\"><span class=\"n\">distance</span></span>)</span>"}, {"fullname": "main.askai.core.component.image_store.ImageMetadata.caption", "modulename": "main.askai.core.component.image_store", "qualname": "ImageMetadata.caption", "kind": "variable", "doc": "<p>Alias for field number 0</p>\n"}, {"fullname": "main.askai.core.component.image_store.ImageMetadata.data", "modulename": "main.askai.core.component.image_store", "qualname": "ImageMetadata.data", "kind": "variable", "doc": "<p>Alias for field number 1</p>\n"}, {"fullname": "main.askai.core.component.image_store.ImageMetadata.uri", "modulename": "main.askai.core.component.image_store", "qualname": "ImageMetadata.uri", "kind": "variable", "doc": "<p>Alias for field number 2</p>\n"}, {"fullname": "main.askai.core.component.image_store.ImageMetadata.distance", "modulename": "main.askai.core.component.image_store", "qualname": "ImageMetadata.distance", "kind": "variable", "doc": "<p>Alias for field number 3</p>\n"}, {"fullname": "main.askai.core.component.image_store.ImageStore", "modulename": "main.askai.core.component.image_store", "qualname": "ImageStore", "kind": "class", "doc": "<p>Provide an interface to store, retrieve, locate, and vectorize images. This class manages the storage and\nretrieval of images, as well as their localization and vectorization for various applications.</p>\n", "bases": "typing.Type"}, {"fullname": "main.askai.core.component.image_store.ImageStore.__init__", "modulename": "main.askai.core.component.image_store", "qualname": "ImageStore.__init__", "kind": "function", "doc": "<p>Invoke the class constructor or return the instance if it exists.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, {"fullname": "main.askai.core.component.image_store.ImageStore.INSTANCE", "modulename": "main.askai.core.component.image_store", "qualname": "ImageStore.INSTANCE", "kind": "variable", "doc": "<p></p>\n", "annotation": ": main.askai.core.component.image_store.ImageStore"}, {"fullname": "main.askai.core.component.image_store.ImageStore.COLLECTION_NAME", "modulename": "main.askai.core.component.image_store", "qualname": "ImageStore.COLLECTION_NAME", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;image_store&#x27;"}, {"fullname": "main.askai.core.component.image_store.ImageStore.PHOTO_CATEGORY", "modulename": "main.askai.core.component.image_store", "qualname": "ImageStore.PHOTO_CATEGORY", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;photos&#x27;"}, {"fullname": "main.askai.core.component.image_store.ImageStore.FACE_CATEGORY", "modulename": "main.askai.core.component.image_store", "qualname": "ImageStore.FACE_CATEGORY", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;faces&#x27;"}, {"fullname": "main.askai.core.component.image_store.ImageStore.IMPORTS_CATEGORY", "modulename": "main.askai.core.component.image_store", "qualname": "ImageStore.IMPORTS_CATEGORY", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;imports&#x27;"}, {"fullname": "main.askai.core.component.image_store.ImageStore.sync_folders", "modulename": "main.askai.core.component.image_store", "qualname": "ImageStore.sync_folders", "kind": "function", "doc": "<p>Load image files from the specified directories.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">with_caption</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"o\">*</span><span class=\"n\">dirs</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">pathlib</span><span class=\"o\">.</span><span class=\"n\">Path</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">main</span><span class=\"o\">.</span><span class=\"n\">askai</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">component</span><span class=\"o\">.</span><span class=\"n\">image_store</span><span class=\"o\">.</span><span class=\"n\">ImageFile</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.component.image_store.ImageStore.persist_dir", "modulename": "main.askai.core.component.image_store", "qualname": "ImageStore.persist_dir", "kind": "variable", "doc": "<p></p>\n", "annotation": ": pathlib.Path"}, {"fullname": "main.askai.core.component.image_store.ImageStore.metadatas", "modulename": "main.askai.core.component.image_store", "qualname": "ImageStore.metadatas", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[list[Mapping[str, str | int | float | bool]]]"}, {"fullname": "main.askai.core.component.image_store.ImageStore.enlist", "modulename": "main.askai.core.component.image_store", "qualname": "ImageStore.enlist", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.component.image_store.ImageStore.store_image", "modulename": "main.askai.core.component.image_store", "qualname": "ImageStore.store_image", "kind": "function", "doc": "<p>Add the provided images to the image store collection.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>image_files</strong>:  One or more ImageFile objects representing the images to be stored.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The number of images successfully added to the store.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"o\">*</span><span class=\"n\">image_files</span><span class=\"p\">:</span> <span class=\"n\">main</span><span class=\"o\">.</span><span class=\"n\">askai</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">component</span><span class=\"o\">.</span><span class=\"n\">image_store</span><span class=\"o\">.</span><span class=\"n\">ImageFile</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.component.image_store.ImageStore.clear_store", "modulename": "main.askai.core.component.image_store", "qualname": "ImageStore.clear_store", "kind": "function", "doc": "<p>Clear the image store collection.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.component.image_store.ImageStore.sync_store", "modulename": "main.askai.core.component.image_store", "qualname": "ImageStore.sync_store", "kind": "function", "doc": "<p>Synchronize the image store collection with the cached pictures folder.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>re_caption</strong>:  Whether to regenerate captions for the images during synchronization (default is False).</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The number of images synchronized with the store.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">re_caption</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.component.image_store.ImageStore.query_image", "modulename": "main.askai.core.component.image_store", "qualname": "ImageStore.query_image", "kind": "function", "doc": "<p>Query the image store for photos matching the provided description.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>description</strong>:  A text description to match against the stored images.</li>\n<li><strong>k</strong>:  The maximum number of matching results to return (default is 3).</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A list of ImageMetadata objects for the photos that match the description.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">description</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">k</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">3</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">main</span><span class=\"o\">.</span><span class=\"n\">askai</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">component</span><span class=\"o\">.</span><span class=\"n\">image_store</span><span class=\"o\">.</span><span class=\"n\">ImageMetadata</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.component.image_store.ImageStore.query_face", "modulename": "main.askai.core.component.image_store", "qualname": "ImageStore.query_face", "kind": "function", "doc": "<p>Query the image store for faces matching the provided description.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>description</strong>:  A text description to match against the stored faces.</li>\n<li><strong>k</strong>:  The maximum number of matching faces to return (default is 1).</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A list of ImageMetadata objects for the faces that match the description.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">description</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">k</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">3</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">main</span><span class=\"o\">.</span><span class=\"n\">askai</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">component</span><span class=\"o\">.</span><span class=\"n\">image_store</span><span class=\"o\">.</span><span class=\"n\">ImageMetadata</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.component.image_store.ImageStore.find_by_description", "modulename": "main.askai.core.component.image_store", "qualname": "ImageStore.find_by_description", "kind": "function", "doc": "<p>Find images using natural language.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>description</strong>:  A natural language description to match against stored images.</li>\n<li><strong>categories</strong>:  A list of categories to limit the search within.</li>\n<li><strong>k</strong>:  The maximum number of matching images to return (default is 3).</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A list of ImageMetadata objects for the images that match the description and categories.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">description</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">categories</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">k</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">3</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">main</span><span class=\"o\">.</span><span class=\"n\">askai</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">component</span><span class=\"o\">.</span><span class=\"n\">image_store</span><span class=\"o\">.</span><span class=\"n\">ImageMetadata</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.component.image_store.ImageStore.find_by_similarity", "modulename": "main.askai.core.component.image_store", "qualname": "ImageStore.find_by_similarity", "kind": "function", "doc": "<p>Find images that match the provided photo using similarity methods.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>photo</strong>:  The ImageData object representing the photo to match against stored faces.</li>\n<li><strong>k</strong>:  The maximum number of matching faces to return (default is 3).</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A list of ImageMetadata objects for the faces that match the provided photo.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">photo</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">[</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">k</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">3</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">main</span><span class=\"o\">.</span><span class=\"n\">askai</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">component</span><span class=\"o\">.</span><span class=\"n\">image_store</span><span class=\"o\">.</span><span class=\"n\">ImageMetadata</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.component.internet_service", "modulename": "main.askai.core.component.internet_service", "kind": "module", "doc": "<p>@project: HsPyLib-AskAI\n@package: askai.core.component\n   @file: internet_service.py\n@created: Sun, 10 Mar 2024\n @author: <B>H</B>ugo <B>S</B>aporetti <B>J</B>unior\n   @site: <a href=\"https://github.com/yorevs/askai\">https://github.com/yorevs/askai</a>\n@license: MIT - Please refer to <a href=\"https://opensource.org/licenses/MIT\">https://opensource.org/licenses/MIT</a></p>\n\n<p>Copyright (c) 2024, AskAI</p>\n"}, {"fullname": "main.askai.core.component.internet_service.InternetService", "modulename": "main.askai.core.component.internet_service", "qualname": "InternetService", "kind": "class", "doc": "<p>Provide an internet search service to complete queries that require real-time data. This service allows for the\nretrieval of up-to-date information from the web, enabling queries that depend on current data.</p>\n", "bases": "typing.Type"}, {"fullname": "main.askai.core.component.internet_service.InternetService.__init__", "modulename": "main.askai.core.component.internet_service", "qualname": "InternetService.__init__", "kind": "function", "doc": "<p>Invoke the class constructor or return the instance if it exists.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, {"fullname": "main.askai.core.component.internet_service.InternetService.INSTANCE", "modulename": "main.askai.core.component.internet_service", "qualname": "InternetService.INSTANCE", "kind": "variable", "doc": "<p></p>\n", "annotation": ": main.askai.core.component.internet_service.InternetService"}, {"fullname": "main.askai.core.component.internet_service.InternetService.ASKAI_INTERNET_DATA_KEY", "modulename": "main.askai.core.component.internet_service", "qualname": "InternetService.ASKAI_INTERNET_DATA_KEY", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;askai-internet-data&#x27;"}, {"fullname": "main.askai.core.component.internet_service.InternetService.CATEGORY_ICONS", "modulename": "main.askai.core.component.internet_service", "qualname": "InternetService.CATEGORY_ICONS", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;Weather&#x27;: &#x27;\\uf0e9&#x27;, &#x27;Sports&#x27;: &#x27;\uf9b7&#x27;, &#x27;News&#x27;: &#x27;\\uf1ea&#x27;, &#x27;Celebrities&#x27;: &#x27;\\uf516&#x27;, &#x27;People&#x27;: &#x27;\\uf50d&#x27;, &#x27;Programming&#x27;: &#x27;\\uf822&#x27;, &#x27;Travel&#x27;: &#x27;\\uf51c&#x27;, &#x27;General&#x27;: &#x27;\\uf6e4&#x27;, &#x27;Maps&#x27;: &#x27;\\uf0ac&#x27;}"}, {"fullname": "main.askai.core.component.internet_service.InternetService.SITE_ICONS", "modulename": "main.askai.core.component.internet_service", "qualname": "InternetService.SITE_ICONS", "kind": "variable", "doc": "<p></p>\n", "default_value": "defaultdict(&lt;class &#x27;str&#x27;&gt;, {&#x27;linkedin.com&#x27;: &#x27;\\uf0e1&#x27;, &#x27;github.com&#x27;: &#x27;\\uf408&#x27;, &#x27;instagram.com&#x27;: &#x27;\\uf16d&#x27;, &#x27;x.com&#x27;: &#x27;X&#x27;, &#x27;twitter.com&#x27;: &#x27;\\uf081&#x27;, &#x27;stackoverflow.com&#x27;: &#x27;\\uf16c&#x27;, &#x27;facebook.com&#x27;: &#x27;\\uf082&#x27;, &#x27;youtube.com&#x27;: &#x27;\\uf16a&#x27;, &#x27;amazon.com&#x27;: &#x27;\\uf270&#x27;, &#x27;apple.com&#x27;: &#x27;\\uf179&#x27;, &#x27;docker.com&#x27;: &#x27;\\uf308&#x27;, &#x27;dropbox.com&#x27;: &#x27;\\uf16b&#x27;, &#x27;google.com&#x27;: &#x27;\\uf7ac&#x27;, &#x27;search.google.com&#x27;: &#x27;\\uf7ac&#x27;, &#x27;paypal.com&#x27;: &#x27;\\uf1ed&#x27;, &#x27;wikipedia.org&#x27;: &#x27;\ufab3&#x27;, &#x27;reddit.com&#x27;: &#x27;\\uf281&#x27;, &#x27;ubuntu.com&#x27;: &#x27;\\uf31b&#x27;, &#x27;fedora.com&#x27;: &#x27;\\uf30b&#x27;})"}, {"fullname": "main.askai.core.component.internet_service.InternetService.wrap_response", "modulename": "main.askai.core.component.internet_service", "qualname": "InternetService.wrap_response", "kind": "function", "doc": "<p>Format and wrap the search response based on the search terms, output, and method used.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>terms</strong>:  The search terms used in the query.</li>\n<li><strong>output</strong>:  The raw output or results from the search.</li>\n<li><strong>search</strong>:  The search result.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A formatted string that encapsulates the search response.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">cls</span>,</span><span class=\"param\">\t<span class=\"n\">terms</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">output</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">search</span><span class=\"p\">:</span> <span class=\"n\">askai</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">search_result</span><span class=\"o\">.</span><span class=\"n\">SearchResult</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.component.internet_service.InternetService.refine_template", "modulename": "main.askai.core.component.internet_service", "qualname": "InternetService.refine_template", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "main.askai.core.component.internet_service.InternetService.google_search", "modulename": "main.askai.core.component.internet_service", "qualname": "InternetService.google_search", "kind": "function", "doc": "<p>Search the web using the Google Search API. This method utilizes advanced Google search operators to refine\nand execute the search.\nReference: <a href=\"https://ahrefs.com/blog/google-advanced-search-operators/\">https://ahrefs.com/blog/google-advanced-search-operators/</a></p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>search</strong>:  The AI search parameters encapsulated in a SearchResult object.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A refined string containing the search results.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">search</span><span class=\"p\">:</span> <span class=\"n\">askai</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">search_result</span><span class=\"o\">.</span><span class=\"n\">SearchResult</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.component.rag_provider", "modulename": "main.askai.core.component.rag_provider", "kind": "module", "doc": "<p>@project: HsPyLib-AskAI\n@package: askai.core.support\n   @file: rag_provider.py\n@created: Wed, 28 Aug 2024\n @author: <B>H</B>ugo <B>S</B>aporetti <B>J</B>unior\n   @site: <a href=\"https://github.com/yorevs/askai\">https://github.com/yorevs/askai</a>\n@license: MIT - Please refer to <a href=\"https://opensource.org/licenses/MIT\">https://opensource.org/licenses/MIT</a></p>\n\n<p>Copyright (c) 2024, AskAI</p>\n"}, {"fullname": "main.askai.core.component.rag_provider.RAG_EXT_DIR", "modulename": "main.askai.core.component.rag_provider", "qualname": "RAG_EXT_DIR", "kind": "variable", "doc": "<p></p>\n", "annotation": ": pathlib.Path", "default_value": "PosixPath(&#x27;/Users/hjunior/.config/hhs/askai/rag&#x27;)"}, {"fullname": "main.askai.core.component.rag_provider.RAGProvider", "modulename": "main.askai.core.component.rag_provider", "qualname": "RAGProvider", "kind": "class", "doc": "<p>A class responsible for implementing the Retrieval-Augmented Generation (RAG) mechanism.</p>\n"}, {"fullname": "main.askai.core.component.rag_provider.RAGProvider.__init__", "modulename": "main.askai.core.component.rag_provider", "qualname": "RAGProvider.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">rag_filepath</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span>)</span>"}, {"fullname": "main.askai.core.component.rag_provider.RAGProvider.RAG_DIR", "modulename": "main.askai.core.component.rag_provider", "qualname": "RAGProvider.RAG_DIR", "kind": "variable", "doc": "<p></p>\n", "annotation": ": pathlib.Path", "default_value": "PosixPath(&#x27;/Users/hjunior/GIT-Repository/GitHub/askai/src/main/askai/resources/rag&#x27;)"}, {"fullname": "main.askai.core.component.rag_provider.RAGProvider.copy_rag", "modulename": "main.askai.core.component.rag_provider", "qualname": "RAGProvider.copy_rag", "kind": "function", "doc": "<p>Copy the RAG documents into the specified RAG directory.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>path_name</strong>:  The path of the RAG documents to copy.</li>\n<li><strong>dest_name</strong>:  The destination, within the RAG directory, where the documents will be copied to. If None,\ndefaults to a hashed directory based on the source path.</li>\n<li><strong>rag_dir</strong>:  The directory where RAG documents will be copied.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>True if the copy operation was successful, False otherwise.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">cls</span>,</span><span class=\"param\">\t<span class=\"n\">path_name</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">pathlib</span><span class=\"o\">.</span><span class=\"n\">Path</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">dest_name</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">pathlib</span><span class=\"o\">.</span><span class=\"n\">Path</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">rag_dir</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">pathlib</span><span class=\"o\">.</span><span class=\"n\">Path</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">PosixPath</span><span class=\"p\">(</span><span class=\"s1\">&#39;/Users/hjunior/.config/hhs/askai/rag&#39;</span><span class=\"p\">)</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.component.rag_provider.RAGProvider.requires_update", "modulename": "main.askai.core.component.rag_provider", "qualname": "RAGProvider.requires_update", "kind": "function", "doc": "<p>Check whether the RAG directory has changed and therefore, requires an update from the Chroma DB.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>True if an update is required, False otherwise</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">rag_dir</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">pathlib</span><span class=\"o\">.</span><span class=\"n\">Path</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">PosixPath</span><span class=\"p\">(</span><span class=\"s1\">&#39;/Users/hjunior/.config/hhs/askai/rag&#39;</span><span class=\"p\">)</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.component.rag_provider.RAGProvider.get_rag_examples", "modulename": "main.askai.core.component.rag_provider", "qualname": "RAGProvider.get_rag_examples", "kind": "function", "doc": "<p>Retrieve a list of relevant examples based on the provided query.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>query</strong>:  The search query used to retrieve examples.</li>\n<li><strong>k</strong>:  The number of examples to retrieve (default is 3).</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A list of strings representing the retrieved examples.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">query</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">k</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">3</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.component.recorder", "modulename": "main.askai.core.component.recorder", "kind": "module", "doc": "<p>@project: HsPyLib-AskAI\n@package: askai.core.components\n   @file: recorder.py\n@created: Wed, 22 Feb 2024\n @author: <B>H</B>ugo <B>S</B>aporetti <B>J</B>unior\n   @site: <a href=\"https://github.com/yorevs/askai\">https://github.com/yorevs/askai</a>\n@license: MIT - Please refer to <a href=\"https://opensource.org/licenses/MIT\">https://opensource.org/licenses/MIT</a></p>\n\n<p>Copyright (c) 2024, AskAI</p>\n"}, {"fullname": "main.askai.core.component.recorder.InputDevice", "modulename": "main.askai.core.component.recorder", "qualname": "InputDevice", "kind": "variable", "doc": "<p></p>\n", "annotation": ": TypeAlias", "default_value": "tuple[int, str]"}, {"fullname": "main.askai.core.component.recorder.Recorder", "modulename": "main.askai.core.component.recorder", "qualname": "Recorder", "kind": "class", "doc": "<p>Provide an interface to record voice using the microphone device. This class offers methods to capture and\nmanage audio recordings, ensuring that only one instance interacts with the microphone at a time.</p>\n", "bases": "typing.Type"}, {"fullname": "main.askai.core.component.recorder.Recorder.__init__", "modulename": "main.askai.core.component.recorder", "qualname": "Recorder.__init__", "kind": "function", "doc": "<p>Invoke the class constructor or return the instance if it exists.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, {"fullname": "main.askai.core.component.recorder.Recorder.INSTANCE", "modulename": "main.askai.core.component.recorder", "qualname": "Recorder.INSTANCE", "kind": "variable", "doc": "<p></p>\n", "annotation": ": main.askai.core.component.recorder.Recorder"}, {"fullname": "main.askai.core.component.recorder.Recorder.RecognitionApi", "modulename": "main.askai.core.component.recorder", "qualname": "Recorder.RecognitionApi", "kind": "class", "doc": "<p>Available voice recognition APIs.</p>\n", "bases": "hspylib.core.enums.enumeration.Enumeration"}, {"fullname": "main.askai.core.component.recorder.Recorder.RecognitionApi.OPEN_AI", "modulename": "main.askai.core.component.recorder", "qualname": "Recorder.RecognitionApi.OPEN_AI", "kind": "variable", "doc": "<p></p>\n", "default_value": "OPEN_AI"}, {"fullname": "main.askai.core.component.recorder.Recorder.RecognitionApi.GOOGLE", "modulename": "main.askai.core.component.recorder", "qualname": "Recorder.RecognitionApi.GOOGLE", "kind": "variable", "doc": "<p></p>\n", "default_value": "GOOGLE"}, {"fullname": "main.askai.core.component.recorder.Recorder.get_device_list", "modulename": "main.askai.core.component.recorder", "qualname": "Recorder.get_device_list", "kind": "function", "doc": "<p>Return a list of available audio input devices.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A list of InputDevice objects representing the available microphone devices.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.component.recorder.Recorder.setup", "modulename": "main.askai.core.component.recorder", "qualname": "Recorder.setup", "kind": "function", "doc": "<p>Setup the microphone recorder.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.component.recorder.Recorder.devices", "modulename": "main.askai.core.component.recorder", "qualname": "Recorder.devices", "kind": "variable", "doc": "<p></p>\n", "annotation": ": list[tuple[int, str]]"}, {"fullname": "main.askai.core.component.recorder.Recorder.input_device", "modulename": "main.askai.core.component.recorder", "qualname": "Recorder.input_device", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[tuple[int, str]]"}, {"fullname": "main.askai.core.component.recorder.Recorder.device_index", "modulename": "main.askai.core.component.recorder", "qualname": "Recorder.device_index", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[int]"}, {"fullname": "main.askai.core.component.recorder.Recorder.is_auto_swap", "modulename": "main.askai.core.component.recorder", "qualname": "Recorder.is_auto_swap", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "main.askai.core.component.recorder.Recorder.set_device", "modulename": "main.askai.core.component.recorder", "qualname": "Recorder.set_device", "kind": "function", "doc": "<p>Test and set the specified device as the current audio input device.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>device</strong>:  The audio input device to be set as the current device.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>True if the device was successfully set, False otherwise.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">device</span><span class=\"p\">:</span> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.component.recorder.Recorder.is_headphones", "modulename": "main.askai.core.component.recorder", "qualname": "Recorder.is_headphones", "kind": "function", "doc": "<p>Check if the currently set audio input device is a headphone. This is a simplistic method of detection, but\nit has been effective in practice.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>True if the device is detected as a headphone, False otherwise.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.component.recorder.Recorder.listen", "modulename": "main.askai.core.component.recorder", "qualname": "Recorder.listen", "kind": "function", "doc": "<p>Listen to the microphone, save the recorded audio as a WAV file, and transcribe the speech.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>recognition_api</strong>:  The API to use for recognizing the speech. Defaults to GOOGLE.</li>\n<li><strong>language</strong>:  The spoken language. Defaults to EN_US.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A tuple containing the path to the saved audio file and the transcribed text.\n           If transcription fails, the second element of the tuple will be None.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">recognition_api</span><span class=\"p\">:</span> <span class=\"n\">main</span><span class=\"o\">.</span><span class=\"n\">askai</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">component</span><span class=\"o\">.</span><span class=\"n\">recorder</span><span class=\"o\">.</span><span class=\"n\">Recorder</span><span class=\"o\">.</span><span class=\"n\">RecognitionApi</span> <span class=\"o\">=</span> <span class=\"n\">GOOGLE</span>,</span><span class=\"param\">\t<span class=\"n\">language</span><span class=\"p\">:</span> <span class=\"n\">askai</span><span class=\"o\">.</span><span class=\"n\">language</span><span class=\"o\">.</span><span class=\"n\">language</span><span class=\"o\">.</span><span class=\"n\">Language</span> <span class=\"o\">=</span> <span class=\"n\">English</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"n\">pathlib</span><span class=\"o\">.</span><span class=\"n\">Path</span><span class=\"p\">,</span> <span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.component.recorder.Recorder.test_device", "modulename": "main.askai.core.component.recorder", "qualname": "Recorder.test_device", "kind": "function", "doc": "<p>Test whether the input device specified by the given index can be used for speech-to-text (STT) input.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>idx</strong>:  The index of the device to be tested.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>True if the device at the specified index is suitable for STT, otherwise False.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">idx</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.component.scheduler", "modulename": "main.askai.core.component.scheduler", "kind": "module", "doc": "<p>@project: HsPyLib-AskAI\n@package: askai.core.component.scheduler\n   @file: scheduler.py\n@created: Thu, 25 Mar 2024\n @author: <B>H</B>ugo <B>S</B>aporetti <B>J</B>unior\n   @site: <a href=\"https://github.com/yorevs/askai\">https://github.com/yorevs/askai</a>\n@license: MIT - Please refer to <a href=\"https://opensource.org/licenses/MIT\">https://opensource.org/licenses/MIT</a></p>\n\n<p>Copyright (c) 2024, AskAI</p>\n"}, {"fullname": "main.askai.core.component.scheduler.Scheduler", "modulename": "main.askai.core.component.scheduler", "qualname": "Scheduler", "kind": "class", "doc": "<p>A singleton scheduler class for managing and executing scheduled tasks.\nInherits from:\n    - Thread: Allows the scheduler to run tasks in a separate thread.</p>\n", "bases": "typing.Type"}, {"fullname": "main.askai.core.component.scheduler.Scheduler.__init__", "modulename": "main.askai.core.component.scheduler", "qualname": "Scheduler.__init__", "kind": "function", "doc": "<p>Invoke the class constructor or return the instance if it exists.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, {"fullname": "main.askai.core.component.scheduler.Scheduler.INSTANCE", "modulename": "main.askai.core.component.scheduler", "qualname": "Scheduler.INSTANCE", "kind": "variable", "doc": "<p></p>\n", "annotation": ": main.askai.core.component.scheduler.Scheduler"}, {"fullname": "main.askai.core.component.scheduler.Scheduler.every", "modulename": "main.askai.core.component.scheduler", "qualname": "Scheduler.every", "kind": "function", "doc": "<p>Decorator to schedule a function to be run periodically. The decorated function will be executed every\n<code>interval_ms</code> milliseconds, with an initial delay of <code>delay_ms</code> milliseconds before the first execution.\nCan be used with both instance methods (methods with <code>self</code>) and static or standalone functions.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>interval_ms</strong>:  The interval in milliseconds between consecutive executions of the decorated function.</li>\n<li><strong>delay_ms</strong>:  The initial delay in milliseconds before the first execution of the decorated function.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The decorated function.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">interval_ms</span><span class=\"p\">:</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"n\">delay_ms</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.component.scheduler.Scheduler.at", "modulename": "main.askai.core.component.scheduler", "qualname": "Scheduler.at", "kind": "function", "doc": "<p>Decorator to schedule a function to be run periodically at a specific time each day. This can handle both\ninstance methods (with <code>self</code>) and standalone functions.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>hour</strong>:  The hour of the day (0-23) when the function should run.</li>\n<li><strong>minute</strong>:  The minute of the hour (0-59) when the function should run.</li>\n<li><strong>second</strong>:  The second of the minute (0-59) when the function should run.</li>\n<li><strong>millis</strong>:  The millisecond of the second (0-999) when the function should run.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A decorator that schedules the function to run at the specified time.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">hour</span><span class=\"p\">:</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"n\">minute</span><span class=\"p\">:</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"n\">second</span><span class=\"p\">:</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"n\">millis</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.component.scheduler.Scheduler.after", "modulename": "main.askai.core.component.scheduler", "qualname": "Scheduler.after", "kind": "function", "doc": "<p>Decorator to schedule a function to be run after the specified hour, minute, second, and microsecond delay.\nCan be used for both instance methods (with <code>self</code>) and static or standalone functions.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>hour</strong>:  Hours to delay</li>\n<li><strong>minute</strong>:  Minutes to delay</li>\n<li><strong>second</strong>:  Seconds to delay</li>\n<li><strong>microsecond</strong>:  Microseconds to delay</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A decorator that schedules the function to run after the specified delay.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">hour</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">minute</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">second</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">microsecond</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.component.scheduler.Scheduler.now", "modulename": "main.askai.core.component.scheduler", "qualname": "Scheduler.now", "kind": "variable", "doc": "<p></p>\n", "annotation": ": datetime.datetime"}, {"fullname": "main.askai.core.component.scheduler.Scheduler.alive", "modulename": "main.askai.core.component.scheduler", "qualname": "Scheduler.alive", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "main.askai.core.component.scheduler.Scheduler.run", "modulename": "main.askai.core.component.scheduler", "qualname": "Scheduler.run", "kind": "function", "doc": "<p>Method representing the thread's activity.</p>\n\n<p>You may override this method in a subclass. The standard run() method\ninvokes the callable object passed to the object's constructor as the\ntarget argument, if any, with sequential and keyword arguments taken\nfrom the args and kwargs arguments, respectively.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.component.scheduler.Scheduler.start", "modulename": "main.askai.core.component.scheduler", "qualname": "Scheduler.start", "kind": "function", "doc": "<p>Start the thread's activity.</p>\n\n<p>It must be called at most once per thread object. It arranges for the\nobject's run() method to be invoked in a separate thread of control.</p>\n\n<p>This method will raise a RuntimeError if called more than once on the\nsame thread object.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.component.scheduler.Scheduler.schedule", "modulename": "main.askai.core.component.scheduler", "qualname": "Scheduler.schedule", "kind": "function", "doc": "<p>Schedule a task to run at a specific time in the future. This method schedules the provided callback\nfunction to execute at the specified hour, minute, second, and microsecond on the current day. The function\nwill be invoked with the specified arguments and keyword arguments.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>hour</strong>:  The hour of the day (0-23) when the task should run.</li>\n<li><strong>minute</strong>:  The minute of the hour (0-59) when the task should run.</li>\n<li><strong>second</strong>:  The second of the minute (0-59) when the task should run.</li>\n<li><strong>microsecond</strong>:  The microsecond of the second (0-999999) when the task should run.</li>\n<li><strong>callback</strong>:  The callback function to be executed at the scheduled time.</li>\n<li><strong>cb_fn_args</strong>:  The positional arguments to pass to the callback function. Defaults to None.</li>\n<li><strong>cb_fn_kwargs</strong>:  The keyword arguments to pass to the callback function. Defaults to None.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">hour</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">minute</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">second</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">microsecond</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">callback</span><span class=\"p\">:</span> <span class=\"n\">Callable</span>,</span><span class=\"param\">\t<span class=\"n\">cb_fn_args</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Iterable</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">cb_fn_kwargs</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Mapping</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.component.scheduler.Scheduler.scheduler_after", "modulename": "main.askai.core.component.scheduler", "qualname": "Scheduler.scheduler_after", "kind": "function", "doc": "<p>Schedule a function to be run after the specified hour, minute, second, and microsecond.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>hh</strong>:  Hours to delay</li>\n<li><strong>mm</strong>:  Minutes to delay</li>\n<li><strong>ss</strong>:  Seconds to delay</li>\n<li><strong>us</strong>:  microsecond delay</li>\n<li><strong>callback</strong>:  Function to be executed</li>\n<li><strong>cb_fn_args</strong>:  Optional arguments to pass to the callback function</li>\n<li><strong>cb_fn_kwargs</strong>:  Optional keyword arguments to pass to the callback function</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">hh</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">mm</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">ss</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">us</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">callback</span><span class=\"p\">:</span> <span class=\"n\">Callable</span>,</span><span class=\"param\">\t<span class=\"n\">cb_fn_args</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Iterable</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">cb_fn_kwargs</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Mapping</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.component.scheduler.Scheduler.set_interval", "modulename": "main.askai.core.component.scheduler", "qualname": "Scheduler.set_interval", "kind": "function", "doc": "<p>Schedule a function to be run periodically at a specified interval (in milliseconds). This method schedules\nthe given callback function to be invoked repeatedly at the specified interval in milliseconds. The function\nwill be initially delayed by the specified amount of milliseconds before the first invocation.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>interval_ms</strong>:  The interval in milliseconds between each invocation of the callback function.</li>\n<li><strong>callback</strong>:  The callback function to be invoked periodically.</li>\n<li><strong>delay_ms</strong>:  The initial delay in milliseconds before starting the periodic invocations.</li>\n<li><strong>cb_fn_args</strong>:  The arguments to pass to the callback function.</li>\n<li><strong>cb_fn_kwargs</strong>:  The keyword arguments to pass to the callback function.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">interval_ms</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">callback</span><span class=\"p\">:</span> <span class=\"n\">Callable</span>,</span><span class=\"param\">\t<span class=\"n\">delay_ms</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">cb_fn_args</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Iterable</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">cb_fn_kwargs</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Mapping</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.component.summarizer", "modulename": "main.askai.core.component.summarizer", "kind": "module", "doc": "<p>@project: HsPyLib-AskAI\n@package: askai.core.component\n   @file: summarizer.py\n@created: Mon, 11 Mar 2024\n @author: <B>H</B>ugo <B>S</B>aporetti <B>J</B>unior\n   @site: <a href=\"https://github.com/yorevs/askai\">https://github.com/yorevs/askai</a>\n@license: MIT - Please refer to <a href=\"https://opensource.org/licenses/MIT\">https://opensource.org/licenses/MIT</a></p>\n\n<p>Copyright (c) 2024, AskAI</p>\n"}, {"fullname": "main.askai.core.component.summarizer.Summarizer", "modulename": "main.askai.core.component.summarizer", "qualname": "Summarizer", "kind": "class", "doc": "<p>Provide a summarization service to complete queries that require summarization. This class is designed to\ngenerate concise summaries of text data, which can be used to condense lengthy content into more digestible\ninformation. It leverages natural language processing techniques to extract key points and present them in a\ncoherent manner.</p>\n", "bases": "typing.Type"}, {"fullname": "main.askai.core.component.summarizer.Summarizer.__init__", "modulename": "main.askai.core.component.summarizer", "qualname": "Summarizer.__init__", "kind": "function", "doc": "<p>Invoke the class constructor or return the instance if it exists.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, {"fullname": "main.askai.core.component.summarizer.Summarizer.INSTANCE", "modulename": "main.askai.core.component.summarizer", "qualname": "Summarizer.INSTANCE", "kind": "variable", "doc": "<p></p>\n", "annotation": ": main.askai.core.component.summarizer.Summarizer"}, {"fullname": "main.askai.core.component.summarizer.Summarizer.extract_result", "modulename": "main.askai.core.component.summarizer", "qualname": "Summarizer.extract_result", "kind": "function", "doc": "<p>Extract the question and answer from the summarization result.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>result</strong>:  A dictionary containing the summarization result.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A tuple containing the question and the answer.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">result</span><span class=\"p\">:</span> <span class=\"nb\">dict</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.component.summarizer.Summarizer.persist_dir", "modulename": "main.askai.core.component.summarizer", "qualname": "Summarizer.persist_dir", "kind": "variable", "doc": "<p></p>\n", "annotation": ": pathlib.Path"}, {"fullname": "main.askai.core.component.summarizer.Summarizer.folder", "modulename": "main.askai.core.component.summarizer", "qualname": "Summarizer.folder", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "main.askai.core.component.summarizer.Summarizer.glob", "modulename": "main.askai.core.component.summarizer", "qualname": "Summarizer.glob", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "main.askai.core.component.summarizer.Summarizer.sum_path", "modulename": "main.askai.core.component.summarizer", "qualname": "Summarizer.sum_path", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "main.askai.core.component.summarizer.Summarizer.text_splitter", "modulename": "main.askai.core.component.summarizer", "qualname": "Summarizer.text_splitter", "kind": "variable", "doc": "<p></p>\n", "annotation": ": langchain_text_splitters.base.TextSplitter"}, {"fullname": "main.askai.core.component.summarizer.Summarizer.retriever", "modulename": "main.askai.core.component.summarizer", "qualname": "Summarizer.retriever", "kind": "variable", "doc": "<p></p>\n", "annotation": ": langchain.chains.retrieval_qa.base.RetrievalQA"}, {"fullname": "main.askai.core.component.summarizer.Summarizer.generate", "modulename": "main.askai.core.component.summarizer", "qualname": "Summarizer.generate", "kind": "function", "doc": "<p>Generate a summarization of the contents within a specified folder. This method analyzes files within the\ngiven folder that match the provided glob pattern and creates a summarization of their contents.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>folder</strong>:  The base folder where files are located.</li>\n<li><strong>glob</strong>:  The glob pattern or specific file name used to filter the files for summarization.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A boolean indicating the success or failure of the summarization process.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">folder</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">pathlib</span><span class=\"o\">.</span><span class=\"n\">Path</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span>, </span><span class=\"param\"><span class=\"n\">glob</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.component.summarizer.Summarizer.exists", "modulename": "main.askai.core.component.summarizer", "qualname": "Summarizer.exists", "kind": "function", "doc": "<p>Check if a summarization exists for the specified folder and glob pattern. This method determines whether a\nsummarization has been created for the contents of the given folder that match the provided glob pattern.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>folder</strong>:  The base folder where files are located.</li>\n<li><strong>glob</strong>:  The glob pattern or file name used to filter the files for which the summarization was created.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>True if a summarization exists for the given folder and glob pattern; False otherwise.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">folder</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">pathlib</span><span class=\"o\">.</span><span class=\"n\">Path</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span>, </span><span class=\"param\"><span class=\"n\">glob</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.component.summarizer.Summarizer.query", "modulename": "main.askai.core.component.summarizer", "qualname": "Summarizer.query", "kind": "function", "doc": "<p>Answer questions about the summarized content.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>queries</strong>:  The list queries to ask the AI engine.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"o\">*</span><span class=\"n\">queries</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">askai</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">summary_result</span><span class=\"o\">.</span><span class=\"n\">SummaryResult</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.component.text_streamer", "modulename": "main.askai.core.component.text_streamer", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "main.askai.core.component.text_streamer.TextStreamer", "modulename": "main.askai.core.component.text_streamer", "qualname": "TextStreamer", "kind": "class", "doc": "<p>Provide a TypeWriter effect helper. This class can sync spoken language with streamed text.</p>\n", "bases": "typing.Type"}, {"fullname": "main.askai.core.component.text_streamer.TextStreamer.__init__", "modulename": "main.askai.core.component.text_streamer", "qualname": "TextStreamer.__init__", "kind": "function", "doc": "<p>Invoke the class constructor or return the instance if it exists.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, {"fullname": "main.askai.core.component.text_streamer.TextStreamer.INSTANCE", "modulename": "main.askai.core.component.text_streamer", "qualname": "TextStreamer.INSTANCE", "kind": "variable", "doc": "<p></p>\n", "annotation": ": main.askai.core.component.text_streamer.TextStreamer"}, {"fullname": "main.askai.core.component.text_streamer.TextStreamer.DONE", "modulename": "main.askai.core.component.text_streamer", "qualname": "TextStreamer.DONE", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": "False"}, {"fullname": "main.askai.core.component.text_streamer.TextStreamer.STREAMING", "modulename": "main.askai.core.component.text_streamer", "qualname": "TextStreamer.STREAMING", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": "False"}, {"fullname": "main.askai.core.component.text_streamer.TextStreamer.STREAMER_THREAD", "modulename": "main.askai.core.component.text_streamer", "qualname": "TextStreamer.STREAMER_THREAD", "kind": "variable", "doc": "<p></p>\n", "annotation": ": threading.Thread", "default_value": "None"}, {"fullname": "main.askai.core.component.text_streamer.TextStreamer.stream_text", "modulename": "main.askai.core.component.text_streamer", "qualname": "TextStreamer.stream_text", "kind": "function", "doc": "<p>TODO</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">text</span><span class=\"p\">:</span> <span class=\"o\">~</span><span class=\"n\">AnyStr</span>,</span><span class=\"param\">\t<span class=\"n\">prefix</span><span class=\"p\">:</span> <span class=\"o\">~</span><span class=\"n\">AnyStr</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">tempo</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">language</span><span class=\"p\">:</span> <span class=\"n\">askai</span><span class=\"o\">.</span><span class=\"n\">language</span><span class=\"o\">.</span><span class=\"n\">language</span><span class=\"o\">.</span><span class=\"n\">Language</span> <span class=\"o\">=</span> <span class=\"n\">English</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.engine", "modulename": "main.askai.core.engine", "kind": "module", "doc": "<p>Package initialization.</p>\n"}, {"fullname": "main.askai.core.engine.ai_engine", "modulename": "main.askai.core.engine.ai_engine", "kind": "module", "doc": "<p>@project: HsPyLib-AskAI\n@package: askai.core.model\n   @file: ai_engine.py\n@created: Fri, 5 May 2024\n @author: <B>H</B>ugo <B>S</B>aporetti <B>J</B>unior\n   @site: <a href=\"https://github.com/yorevs/askai\">https://github.com/yorevs/askai</a>\n@license: MIT - Please refer to <a href=\"https://opensource.org/licenses/MIT\">https://opensource.org/licenses/MIT</a></p>\n\n<p>Copyright (c) 2024, AskAI</p>\n"}, {"fullname": "main.askai.core.engine.ai_engine.AIEngine", "modulename": "main.askai.core.engine.ai_engine", "qualname": "AIEngine", "kind": "class", "doc": "<p>Provide an interface for AI engines.</p>\n", "bases": "typing.Protocol"}, {"fullname": "main.askai.core.engine.ai_engine.AIEngine.__init__", "modulename": "main.askai.core.engine.ai_engine", "qualname": "AIEngine.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, {"fullname": "main.askai.core.engine.ai_engine.AIEngine.configs", "modulename": "main.askai.core.engine.ai_engine", "qualname": "AIEngine.configs", "kind": "function", "doc": "<p>Return the engine-specific configurations.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">askai</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">askai_configs</span><span class=\"o\">.</span><span class=\"n\">AskAiConfigs</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.engine.ai_engine.AIEngine.nickname", "modulename": "main.askai.core.engine.ai_engine", "qualname": "AIEngine.nickname", "kind": "function", "doc": "<p>Get the AI engine nickname.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The nickname of the AI engine.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.engine.ai_engine.AIEngine.models", "modulename": "main.askai.core.engine.ai_engine", "qualname": "AIEngine.models", "kind": "function", "doc": "<p>Get the list of available models for the engine.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A list of available AI models.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">askai</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">engine</span><span class=\"o\">.</span><span class=\"n\">ai_model</span><span class=\"o\">.</span><span class=\"n\">AIModel</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.engine.ai_engine.AIEngine.voices", "modulename": "main.askai.core.engine.ai_engine", "qualname": "AIEngine.voices", "kind": "function", "doc": "<p>Return the available model voices for speech to text.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A list of available voices.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.engine.ai_engine.AIEngine.vision", "modulename": "main.askai.core.engine.ai_engine", "qualname": "AIEngine.vision", "kind": "function", "doc": "<p>Return the engine's vision component.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The vision component of the engine.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">askai</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">engine</span><span class=\"o\">.</span><span class=\"n\">ai_vision</span><span class=\"o\">.</span><span class=\"n\">AIVision</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.engine.ai_engine.AIEngine.lc_model", "modulename": "main.askai.core.engine.ai_engine", "qualname": "AIEngine.lc_model", "kind": "function", "doc": "<p>Create a LangChain LLM model instance using the current AI engine.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>temperature</strong>:  The LLM model temperature.</li>\n<li><strong>top_p</strong>:  The model engine top_p.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>An instance of BaseLLM.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">temperature</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">top_p</span><span class=\"p\">:</span> <span class=\"nb\">float</span></span><span class=\"return-annotation\">) -> <span class=\"n\">langchain_core</span><span class=\"o\">.</span><span class=\"n\">language_models</span><span class=\"o\">.</span><span class=\"n\">llms</span><span class=\"o\">.</span><span class=\"n\">BaseLLM</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.engine.ai_engine.AIEngine.lc_chat_model", "modulename": "main.askai.core.engine.ai_engine", "qualname": "AIEngine.lc_chat_model", "kind": "function", "doc": "<p>Create a LangChain LLM chat model instance using the current AI engine.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>temperature</strong>:  The LLM chat model temperature.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>An instance of BaseChatModel.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">temperature</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.0</span></span><span class=\"return-annotation\">) -> <span class=\"n\">langchain_core</span><span class=\"o\">.</span><span class=\"n\">language_models</span><span class=\"o\">.</span><span class=\"n\">chat_models</span><span class=\"o\">.</span><span class=\"n\">BaseChatModel</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.engine.ai_engine.AIEngine.lc_embeddings", "modulename": "main.askai.core.engine.ai_engine", "qualname": "AIEngine.lc_embeddings", "kind": "function", "doc": "<p>Create a LangChain LLM embeddings model instance.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>model</strong>:  The LLM embeddings model string.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>An instance of BaseEmbeddingsModel.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">model</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">langchain_core</span><span class=\"o\">.</span><span class=\"n\">embeddings</span><span class=\"o\">.</span><span class=\"n\">embeddings</span><span class=\"o\">.</span><span class=\"n\">Embeddings</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.engine.ai_engine.AIEngine.ai_name", "modulename": "main.askai.core.engine.ai_engine", "qualname": "AIEngine.ai_name", "kind": "function", "doc": "<p>Get the AI engine name.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The name of the AI engine.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.engine.ai_engine.AIEngine.ai_model_name", "modulename": "main.askai.core.engine.ai_engine", "qualname": "AIEngine.ai_model_name", "kind": "function", "doc": "<p>Get the AI model name.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The name of the AI model.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.engine.ai_engine.AIEngine.ai_token_limit", "modulename": "main.askai.core.engine.ai_engine", "qualname": "AIEngine.ai_token_limit", "kind": "function", "doc": "<p>Get the AI model token limit.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The token limit of the AI model.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.engine.ai_engine.AIEngine.ask", "modulename": "main.askai.core.engine.ai_engine", "qualname": "AIEngine.ask", "kind": "function", "doc": "<p>Ask AI assistance for the given question and expect a response.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>chat_context</strong>:  The chat history or context.</li>\n<li><strong>temperature</strong>:  The model engine temperature.</li>\n<li><strong>top_p</strong>:  The model engine top_p.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The AI's reply.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">chat_context</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">dict</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">temperature</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.8</span>,</span><span class=\"param\">\t<span class=\"n\">top_p</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.0</span></span><span class=\"return-annotation\">) -> <span class=\"n\">askai</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">ai_reply</span><span class=\"o\">.</span><span class=\"n\">AIReply</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.engine.ai_engine.AIEngine.text_to_speech", "modulename": "main.askai.core.engine.ai_engine", "qualname": "AIEngine.text_to_speech", "kind": "function", "doc": "<p>Convert the provided text to speech.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>text</strong>:  The text to convert to speech.</li>\n<li><strong>prefix</strong>:  The prefix of the streamed text.</li>\n<li><strong>stream</strong>:  Whether to stream the text into stdout.</li>\n<li><strong>playback</strong>:  Whether to play back the generated audio file.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The path to the generated audio file; or None if no file was generated.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">text</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">prefix</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">stream</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">playback</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">pathlib</span><span class=\"o\">.</span><span class=\"n\">Path</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.engine.ai_engine.AIEngine.speech_to_text", "modulename": "main.askai.core.engine.ai_engine", "qualname": "AIEngine.speech_to_text", "kind": "function", "doc": "<p>Transcribe audio input from the microphone into text.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The transcribed text or None if transcription fails.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.engine.ai_engine.AIEngine.calculate_tokens", "modulename": "main.askai.core.engine.ai_engine", "qualname": "AIEngine.calculate_tokens", "kind": "function", "doc": "<p>Calculate the number of tokens for the given text.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>text</strong>:  The text for which to calculate tokens.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The number of tokens in the text.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">text</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.engine.ai_model", "modulename": "main.askai.core.engine.ai_model", "kind": "module", "doc": "<p>@project: HsPyLib-AskAI\n@package: askai.core.model\n   @file: ai_model.py\n@created: Fri, 5 May 2024\n @author: <B>H</B>ugo <B>S</B>aporetti <B>J</B>unior\n   @site: <a href=\"https://github.com/yorevs/askai\">https://github.com/yorevs/askai</a>\n@license: MIT - Please refer to <a href=\"https://opensource.org/licenses/MIT\">https://opensource.org/licenses/MIT</a></p>\n\n<p>Copyright (c) 2024, AskAI</p>\n"}, {"fullname": "main.askai.core.engine.ai_model.AIModel", "modulename": "main.askai.core.engine.ai_model", "qualname": "AIModel", "kind": "class", "doc": "<p>Provide an interface for AI models.</p>\n", "bases": "typing.Protocol"}, {"fullname": "main.askai.core.engine.ai_model.AIModel.__init__", "modulename": "main.askai.core.engine.ai_model", "qualname": "AIModel.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, {"fullname": "main.askai.core.engine.ai_model.AIModel.model_name", "modulename": "main.askai.core.engine.ai_model", "qualname": "AIModel.model_name", "kind": "function", "doc": "<p>Get the official model's name.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The name of the model.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.engine.ai_model.AIModel.token_limit", "modulename": "main.askai.core.engine.ai_model", "qualname": "AIModel.token_limit", "kind": "function", "doc": "<p>Get the official model's token limit.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The token limit of the model.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.engine.ai_vision", "modulename": "main.askai.core.engine.ai_vision", "kind": "module", "doc": "<p>@project: HsPyLib-AskAI\n@package: askai.core.model\n   @file: ai_vision.py\n@created: Tue, 3 Sep 2024\n @author: <B>H</B>ugo <B>S</B>aporetti <B>J</B>unior\n   @site: <a href=\"https://github.com/yorevs/askai\">https://github.com/yorevs/askai</a>\n@license: MIT - Please refer to <a href=\"https://opensource.org/licenses/MIT\">https://opensource.org/licenses/MIT</a></p>\n\n<p>Copyright (c) 2024, AskAI</p>\n"}, {"fullname": "main.askai.core.engine.ai_vision.AIVision", "modulename": "main.askai.core.engine.ai_vision", "qualname": "AIVision", "kind": "class", "doc": "<p>Provide an interface for AI vision.</p>\n", "bases": "typing.Protocol"}, {"fullname": "main.askai.core.engine.ai_vision.AIVision.__init__", "modulename": "main.askai.core.engine.ai_vision", "qualname": "AIVision.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, {"fullname": "main.askai.core.engine.ai_vision.AIVision.caption", "modulename": "main.askai.core.engine.ai_vision", "qualname": "AIVision.caption", "kind": "function", "doc": "<p>Generate a caption for the provided image.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>filename</strong>:  File name of the image for which the caption is to be generated.</li>\n<li><strong>load_dir</strong>:  Optional directory path for loading related resources.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A dictionary containing the generated caption.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">filename</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">pathlib</span><span class=\"o\">.</span><span class=\"n\">Path</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">load_dir</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">pathlib</span><span class=\"o\">.</span><span class=\"n\">Path</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.engine.engine_factory", "modulename": "main.askai.core.engine.engine_factory", "kind": "module", "doc": "<p>@project: HsPyLib-AskAI\n@package: askai.core.engine\n   @file: engine_factory.py\n@created: Tue, 23 Apr 2024\n @author: <B>H</B>ugo <B>S</B>aporetti <B>J</B>unior\n   @site: <a href=\"https://github.com/yorevs/askai\">https://github.com/yorevs/askai</a>\n@license: MIT - Please refer to <a href=\"https://opensource.org/licenses/MIT\">https://opensource.org/licenses/MIT</a></p>\n\n<p>Copyright (c) 2024, AskAI</p>\n"}, {"fullname": "main.askai.core.engine.engine_factory.EngineFactory", "modulename": "main.askai.core.engine.engine_factory", "qualname": "EngineFactory", "kind": "class", "doc": "<p>Factory class to create AI engines.</p>\n", "bases": "typing.Type"}, {"fullname": "main.askai.core.engine.engine_factory.EngineFactory.__init__", "modulename": "main.askai.core.engine.engine_factory", "qualname": "EngineFactory.__init__", "kind": "function", "doc": "<p>Invoke the class constructor or return the instance if it exists.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, {"fullname": "main.askai.core.engine.engine_factory.EngineFactory.INSTANCE", "modulename": "main.askai.core.engine.engine_factory", "qualname": "EngineFactory.INSTANCE", "kind": "variable", "doc": "<p></p>\n", "annotation": ": main.askai.core.engine.engine_factory.EngineFactory"}, {"fullname": "main.askai.core.engine.engine_factory.EngineFactory.create_engine", "modulename": "main.askai.core.engine.engine_factory", "qualname": "EngineFactory.create_engine", "kind": "function", "doc": "<p>Create the suitable AI engine according to the provided engine name.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>engine_name</strong>:  The AI engine name(s).</li>\n<li><strong>engine_model</strong>:  The AI engine model(s).</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>An instance of AIEngine.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">cls</span>,</span><span class=\"param\">\t<span class=\"n\">engine_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">engine_model</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">askai</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">engine</span><span class=\"o\">.</span><span class=\"n\">ai_engine</span><span class=\"o\">.</span><span class=\"n\">AIEngine</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.engine.engine_factory.EngineFactory.active_ai", "modulename": "main.askai.core.engine.engine_factory", "qualname": "EngineFactory.active_ai", "kind": "function", "doc": "<p>Get the currently active AI engine.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The active AI engine.</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>TypeError</strong>:  If no AI engine has been created yet.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span></span><span class=\"return-annotation\">) -> <span class=\"n\">askai</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">engine</span><span class=\"o\">.</span><span class=\"n\">ai_engine</span><span class=\"o\">.</span><span class=\"n\">AIEngine</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.engine.openai", "modulename": "main.askai.core.engine.openai", "kind": "module", "doc": "<p>Package initialization.</p>\n"}, {"fullname": "main.askai.core.engine.openai.openai_configs", "modulename": "main.askai.core.engine.openai.openai_configs", "kind": "module", "doc": "<p>@project: HsPyLib-AskAI\n@package: askai.core.engine.openai\n   @file: openai_configs.py\n@created: Fri, 12 Jan 2024\n @author: <B>H</B>ugo <B>S</B>aporetti <B>J</B>unior\n   @site: <a href=\"https://github.com/yorevs/askai\">https://github.com/yorevs/askai</a>\n@license: MIT - Please refer to <a href=\"https://opensource.org/licenses/MIT\">https://opensource.org/licenses/MIT</a></p>\n\n<p>Copyright (c) 2024, AskAI</p>\n"}, {"fullname": "main.askai.core.engine.openai.openai_configs.OpenAiConfigs", "modulename": "main.askai.core.engine.openai.openai_configs", "qualname": "OpenAiConfigs", "kind": "class", "doc": "<p>Provides access to OpenAI configurations.</p>\n", "bases": "typing.Type"}, {"fullname": "main.askai.core.engine.openai.openai_configs.OpenAiConfigs.__init__", "modulename": "main.askai.core.engine.openai.openai_configs", "qualname": "OpenAiConfigs.__init__", "kind": "function", "doc": "<p>Invoke the class constructor or return the instance if it exists.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, {"fullname": "main.askai.core.engine.openai.openai_configs.OpenAiConfigs.INSTANCE", "modulename": "main.askai.core.engine.openai.openai_configs", "qualname": "OpenAiConfigs.INSTANCE", "kind": "variable", "doc": "<p></p>\n", "annotation": ": main.askai.core.engine.openai.openai_configs.OpenAiConfigs", "default_value": "&lt;askai.core.askai_configs.AskAiConfigs object&gt;"}, {"fullname": "main.askai.core.engine.openai.openai_configs.OpenAiConfigs.stt_model", "modulename": "main.askai.core.engine.openai.openai_configs", "qualname": "OpenAiConfigs.stt_model", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Literal[&#x27;whisper-1&#x27;]"}, {"fullname": "main.askai.core.engine.openai.openai_configs.OpenAiConfigs.tts_model", "modulename": "main.askai.core.engine.openai.openai_configs", "qualname": "OpenAiConfigs.tts_model", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Literal[&#x27;tts-1&#x27;, &#x27;tts-1-hd&#x27;]"}, {"fullname": "main.askai.core.engine.openai.openai_configs.OpenAiConfigs.tts_voice", "modulename": "main.askai.core.engine.openai.openai_configs", "qualname": "OpenAiConfigs.tts_voice", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Literal[&#x27;alloy&#x27;, &#x27;echo&#x27;, &#x27;fable&#x27;, &#x27;onyx&#x27;, &#x27;nova&#x27;, &#x27;shimmer&#x27;]"}, {"fullname": "main.askai.core.engine.openai.openai_configs.OpenAiConfigs.tts_format", "modulename": "main.askai.core.engine.openai.openai_configs", "qualname": "OpenAiConfigs.tts_format", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Literal[&#x27;mp3&#x27;, &#x27;opus&#x27;, &#x27;aac&#x27;, &#x27;flac&#x27;]"}, {"fullname": "main.askai.core.engine.openai.openai_engine", "modulename": "main.askai.core.engine.openai.openai_engine", "kind": "module", "doc": "<p>@project: HsPyLib-AskAI\n@package: askai.core.engine.openai\n   @file: openai_engine.py\n@created: Fri, 12 Jan 2024\n @author: <B>H</B>ugo <B>S</B>aporetti <B>J</B>unior\n   @site: <a href=\"https://github.com/yorevs/askai\">https://github.com/yorevs/askai</a>\n@license: MIT - Please refer to <a href=\"https://opensource.org/licenses/MIT\">https://opensource.org/licenses/MIT</a></p>\n\n<p>Copyright (c) 2024, AskAI</p>\n"}, {"fullname": "main.askai.core.engine.openai.openai_engine.OpenAIEngine", "modulename": "main.askai.core.engine.openai.openai_engine", "qualname": "OpenAIEngine", "kind": "class", "doc": "<p>Provide a base class for OpenAI features. This class implements the AIEngine protocol.</p>\n"}, {"fullname": "main.askai.core.engine.openai.openai_engine.OpenAIEngine.__init__", "modulename": "main.askai.core.engine.openai.openai_engine", "qualname": "OpenAIEngine.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">model</span><span class=\"p\">:</span> <span class=\"n\">askai</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">engine</span><span class=\"o\">.</span><span class=\"n\">ai_model</span><span class=\"o\">.</span><span class=\"n\">AIModel</span> <span class=\"o\">=</span> <span class=\"n\">GPT_4_O_MINI</span></span>)</span>"}, {"fullname": "main.askai.core.engine.openai.openai_engine.OpenAIEngine.url", "modulename": "main.askai.core.engine.openai.openai_engine", "qualname": "OpenAIEngine.url", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "main.askai.core.engine.openai.openai_engine.OpenAIEngine.client", "modulename": "main.askai.core.engine.openai.openai_engine", "qualname": "OpenAIEngine.client", "kind": "variable", "doc": "<p></p>\n", "annotation": ": openai.OpenAI"}, {"fullname": "main.askai.core.engine.openai.openai_engine.OpenAIEngine.configs", "modulename": "main.askai.core.engine.openai.openai_engine", "qualname": "OpenAIEngine.configs", "kind": "function", "doc": "<p>Return the engine-specific configurations.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">askai</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">engine</span><span class=\"o\">.</span><span class=\"n\">openai</span><span class=\"o\">.</span><span class=\"n\">openai_configs</span><span class=\"o\">.</span><span class=\"n\">OpenAiConfigs</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.engine.openai.openai_engine.OpenAIEngine.nickname", "modulename": "main.askai.core.engine.openai.openai_engine", "qualname": "OpenAIEngine.nickname", "kind": "function", "doc": "<p>Get the AI engine nickname.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The nickname of the AI engine.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.engine.openai.openai_engine.OpenAIEngine.models", "modulename": "main.askai.core.engine.openai.openai_engine", "qualname": "OpenAIEngine.models", "kind": "function", "doc": "<p>Get the list of available models for the engine.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A list of available AI models.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">askai</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">engine</span><span class=\"o\">.</span><span class=\"n\">ai_model</span><span class=\"o\">.</span><span class=\"n\">AIModel</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.engine.openai.openai_engine.OpenAIEngine.voices", "modulename": "main.askai.core.engine.openai.openai_engine", "qualname": "OpenAIEngine.voices", "kind": "function", "doc": "<p>Return the available model voices for speech to text.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A list of available voices.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.engine.openai.openai_engine.OpenAIEngine.vision", "modulename": "main.askai.core.engine.openai.openai_engine", "qualname": "OpenAIEngine.vision", "kind": "function", "doc": "<p>Return the engine's vision component.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The vision component of the engine.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">askai</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">engine</span><span class=\"o\">.</span><span class=\"n\">ai_vision</span><span class=\"o\">.</span><span class=\"n\">AIVision</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.engine.openai.openai_engine.OpenAIEngine.lc_model", "modulename": "main.askai.core.engine.openai.openai_engine", "qualname": "OpenAIEngine.lc_model", "kind": "function", "doc": "<p>Create a LangChain LLM model instance using the current AI engine.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>temperature</strong>:  The LLM model temperature.</li>\n<li><strong>top_p</strong>:  The model engine top_p.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>An instance of BaseLLM.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">temperature</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">top_p</span><span class=\"p\">:</span> <span class=\"nb\">float</span></span><span class=\"return-annotation\">) -> <span class=\"n\">langchain_core</span><span class=\"o\">.</span><span class=\"n\">language_models</span><span class=\"o\">.</span><span class=\"n\">llms</span><span class=\"o\">.</span><span class=\"n\">BaseLLM</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.engine.openai.openai_engine.OpenAIEngine.lc_chat_model", "modulename": "main.askai.core.engine.openai.openai_engine", "qualname": "OpenAIEngine.lc_chat_model", "kind": "function", "doc": "<p>Create a LangChain LLM chat model instance using the current AI engine.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>temperature</strong>:  The LLM chat model temperature.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>An instance of BaseChatModel.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">temperature</span><span class=\"p\">:</span> <span class=\"nb\">float</span></span><span class=\"return-annotation\">) -> <span class=\"n\">langchain_core</span><span class=\"o\">.</span><span class=\"n\">language_models</span><span class=\"o\">.</span><span class=\"n\">chat_models</span><span class=\"o\">.</span><span class=\"n\">BaseChatModel</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.engine.openai.openai_engine.OpenAIEngine.lc_embeddings", "modulename": "main.askai.core.engine.openai.openai_engine", "qualname": "OpenAIEngine.lc_embeddings", "kind": "function", "doc": "<p>Create a LangChain LLM embeddings model instance.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>model</strong>:  The LLM embeddings model string.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>An instance of Embeddings.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">model</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">langchain_core</span><span class=\"o\">.</span><span class=\"n\">embeddings</span><span class=\"o\">.</span><span class=\"n\">embeddings</span><span class=\"o\">.</span><span class=\"n\">Embeddings</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.engine.openai.openai_engine.OpenAIEngine.ai_name", "modulename": "main.askai.core.engine.openai.openai_engine", "qualname": "OpenAIEngine.ai_name", "kind": "function", "doc": "<p>Get the AI engine name.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The name of the AI engine.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.engine.openai.openai_engine.OpenAIEngine.ai_model_name", "modulename": "main.askai.core.engine.openai.openai_engine", "qualname": "OpenAIEngine.ai_model_name", "kind": "function", "doc": "<p>Get the AI model name.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The name of the AI model.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.engine.openai.openai_engine.OpenAIEngine.ai_token_limit", "modulename": "main.askai.core.engine.openai.openai_engine", "qualname": "OpenAIEngine.ai_token_limit", "kind": "function", "doc": "<p>Get the AI model token limit.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The token limit of the AI model.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.engine.openai.openai_engine.OpenAIEngine.ask", "modulename": "main.askai.core.engine.openai.openai_engine", "qualname": "OpenAIEngine.ask", "kind": "function", "doc": "<p>Ask AI assistance for the given question and expect a response.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>chat_context</strong>:  The chat history or context.</li>\n<li><strong>temperature</strong>:  The model engine temperature.</li>\n<li><strong>top_p</strong>:  The model engine top_p.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The AI's reply.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">chat_context</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">dict</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">temperature</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.8</span>,</span><span class=\"param\">\t<span class=\"n\">top_p</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.0</span></span><span class=\"return-annotation\">) -> <span class=\"n\">askai</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">ai_reply</span><span class=\"o\">.</span><span class=\"n\">AIReply</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.engine.openai.openai_engine.OpenAIEngine.text_to_speech", "modulename": "main.askai.core.engine.openai.openai_engine", "qualname": "OpenAIEngine.text_to_speech", "kind": "function", "doc": "<p>Convert the provided text to speech.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>text</strong>:  The text to convert to speech.</li>\n<li><strong>prefix</strong>:  The prefix of the streamed text.</li>\n<li><strong>stream</strong>:  Whether to stream the text into stdout.</li>\n<li><strong>playback</strong>:  Whether to play back the generated audio file.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The path to the generated audio file; or None if no file was generated.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">text</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">prefix</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">stream</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">playback</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">pathlib</span><span class=\"o\">.</span><span class=\"n\">Path</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.engine.openai.openai_engine.OpenAIEngine.speech_to_text", "modulename": "main.askai.core.engine.openai.openai_engine", "qualname": "OpenAIEngine.speech_to_text", "kind": "function", "doc": "<p>Transcribe audio input from the microphone into text.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The transcribed text or None if transcription fails.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.engine.openai.openai_engine.OpenAIEngine.calculate_tokens", "modulename": "main.askai.core.engine.openai.openai_engine", "qualname": "OpenAIEngine.calculate_tokens", "kind": "function", "doc": "<p>Calculate the number of tokens for the given text.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>text</strong>:  The text for which to calculate tokens.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The number of tokens in the text.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">text</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.engine.openai.openai_model", "modulename": "main.askai.core.engine.openai.openai_model", "kind": "module", "doc": "<p>@project: HsPyLib-AskAI\n@package: askai.core.engine.openai\n   @file: openai_model.py\n@created: Fri, 12 Jan 2024\n @author: <B>H</B>ugo <B>S</B>aporetti <B>J</B>unior\n   @site: <a href=\"https://github.com/yorevs/askai\">https://github.com/yorevs/askai</a>\n@license: MIT - Please refer to <a href=\"https://opensource.org/licenses/MIT\">https://opensource.org/licenses/MIT</a></p>\n\n<p>Copyright (c) 2024, AskAI</p>\n"}, {"fullname": "main.askai.core.engine.openai.openai_model.OpenAIModel", "modulename": "main.askai.core.engine.openai.openai_model", "qualname": "OpenAIModel", "kind": "class", "doc": "<p>Enumeration for the supported OpenAI models. This class implements the AIModel protocol.\nReference: <a href=\"https://www.pluralsight.com/resources/blog/data/ai-gpt-models-differences\">https://www.pluralsight.com/resources/blog/data/ai-gpt-models-differences</a></p>\n", "bases": "hspylib.core.enums.enumeration.Enumeration"}, {"fullname": "main.askai.core.engine.openai.openai_model.OpenAIModel.GPT_3_5_TURBO", "modulename": "main.askai.core.engine.openai.openai_model", "qualname": "OpenAIModel.GPT_3_5_TURBO", "kind": "variable", "doc": "<p></p>\n", "default_value": "GPT_3_5_TURBO"}, {"fullname": "main.askai.core.engine.openai.openai_model.OpenAIModel.GPT_4", "modulename": "main.askai.core.engine.openai.openai_model", "qualname": "OpenAIModel.GPT_4", "kind": "variable", "doc": "<p></p>\n", "default_value": "GPT_4"}, {"fullname": "main.askai.core.engine.openai.openai_model.OpenAIModel.GPT_4_TURBO", "modulename": "main.askai.core.engine.openai.openai_model", "qualname": "OpenAIModel.GPT_4_TURBO", "kind": "variable", "doc": "<p></p>\n", "default_value": "GPT_4_TURBO"}, {"fullname": "main.askai.core.engine.openai.openai_model.OpenAIModel.GPT_4_O", "modulename": "main.askai.core.engine.openai.openai_model", "qualname": "OpenAIModel.GPT_4_O", "kind": "variable", "doc": "<p></p>\n", "default_value": "GPT_4_O"}, {"fullname": "main.askai.core.engine.openai.openai_model.OpenAIModel.GPT_4_O_MINI", "modulename": "main.askai.core.engine.openai.openai_model", "qualname": "OpenAIModel.GPT_4_O_MINI", "kind": "variable", "doc": "<p></p>\n", "default_value": "GPT_4_O_MINI"}, {"fullname": "main.askai.core.engine.openai.openai_model.OpenAIModel.O1_PREVIEW", "modulename": "main.askai.core.engine.openai.openai_model", "qualname": "OpenAIModel.O1_PREVIEW", "kind": "variable", "doc": "<p></p>\n", "default_value": "O1_PREVIEW"}, {"fullname": "main.askai.core.engine.openai.openai_model.OpenAIModel.O1_MINI", "modulename": "main.askai.core.engine.openai.openai_model", "qualname": "OpenAIModel.O1_MINI", "kind": "variable", "doc": "<p></p>\n", "default_value": "O1_MINI"}, {"fullname": "main.askai.core.engine.openai.openai_model.OpenAIModel.models", "modulename": "main.askai.core.engine.openai.openai_model", "qualname": "OpenAIModel.models", "kind": "function", "doc": "<p>Get the list of available models for the engine.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A list of available AI models.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">askai</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">engine</span><span class=\"o\">.</span><span class=\"n\">ai_model</span><span class=\"o\">.</span><span class=\"n\">AIModel</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.engine.openai.openai_model.OpenAIModel.of_name", "modulename": "main.askai.core.engine.openai.openai_model", "qualname": "OpenAIModel.of_name", "kind": "function", "doc": "<p>Get the AIModel instance corresponding to the given model name.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>model_name</strong>:  The name of the AI model.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The corresponding AIModel instance.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">model_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">askai</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">engine</span><span class=\"o\">.</span><span class=\"n\">ai_model</span><span class=\"o\">.</span><span class=\"n\">AIModel</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.engine.openai.openai_model.OpenAIModel.model_name", "modulename": "main.askai.core.engine.openai.openai_model", "qualname": "OpenAIModel.model_name", "kind": "function", "doc": "<p>Get the official model's name.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.engine.openai.openai_model.OpenAIModel.token_limit", "modulename": "main.askai.core.engine.openai.openai_model", "qualname": "OpenAIModel.token_limit", "kind": "function", "doc": "<p>Get the official model tokens limit.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.engine.openai.openai_vision", "modulename": "main.askai.core.engine.openai.openai_vision", "kind": "module", "doc": "<p>@project: HsPyLib-AskAI\n@package: askai.core.engine.openai\n   @file: openai_vision.py\n@created: Tue, 5 Sep 2024\n @author: <B>H</B>ugo <B>S</B>aporetti <B>J</B>unior\n   @site: <a href=\"https://github.com/yorevs/askai\">https://github.com/yorevs/askai</a>\n@license: MIT - Please refer to <a href=\"https://opensource.org/licenses/MIT\">https://opensource.org/licenses/MIT</a></p>\n\n<p>Copyright (c) 2024, AskAI</p>\n"}, {"fullname": "main.askai.core.engine.openai.openai_vision.Base64Image", "modulename": "main.askai.core.engine.openai.openai_vision", "qualname": "Base64Image", "kind": "variable", "doc": "<p></p>\n", "annotation": ": TypeAlias", "default_value": "dict[str, str]"}, {"fullname": "main.askai.core.engine.openai.openai_vision.MessageContent", "modulename": "main.askai.core.engine.openai.openai_vision", "qualname": "MessageContent", "kind": "variable", "doc": "<p></p>\n", "annotation": ": TypeAlias", "default_value": "str | list[str] | dict"}, {"fullname": "main.askai.core.engine.openai.openai_vision.OpenAIVision", "modulename": "main.askai.core.engine.openai.openai_vision", "qualname": "OpenAIVision", "kind": "class", "doc": "<p>Provide a base class for OpenAI vision features. This class implements the AIVision protocol.</p>\n"}, {"fullname": "main.askai.core.engine.openai.openai_vision.OpenAIVision.create_image_caption_chain", "modulename": "main.askai.core.engine.openai.openai_vision", "qualname": "OpenAIVision.create_image_caption_chain", "kind": "function", "doc": "<p>RunnableLambda converts a python callable into a Runnable.</p>\n\n<p>Wrapping a callable in a RunnableLambda makes the callable usable\nwithin either a sync or async context.</p>\n\n<p>RunnableLambda can be composed as any other Runnable and provides\nseamless integration with LangChain tracing.</p>\n\n<p><code>RunnableLambda</code> is best suited for code that does not need to support\nstreaming. If you need to support streaming (i.e., be able to operate\non chunks of inputs and yield chunks of outputs), use <code>RunnableGenerator</code>\ninstead.</p>\n\n<p>Note that if a <code>RunnableLambda</code> returns an instance of <code>Runnable</code>, that\ninstance is invoked (or streamed) during execution.</p>\n\n<p>Examples:</p>\n\n<pre><code>```python\n</code></pre>\n\n<h1 id=\"this-is-a-runnablelambda\">This is a RunnableLambda</h1>\n\n<p>from langchain_core.runnables import RunnableLambda</p>\n\n<p>def add_one(x: int) -> int:\n    return x + 1</p>\n\n<p>runnable = RunnableLambda(add_one)</p>\n\n<p>runnable.invoke(1) # returns 2\nrunnable.batch([1, 2, 3]) # returns [2, 3, 4]</p>\n\n<h1 id=\"async-is-supported-by-default-by-delegating-to-the-sync-implementation\">Async is supported by default by delegating to the sync implementation</h1>\n\n<p>await runnable.ainvoke(1) # returns 2\nawait runnable.abatch([1, 2, 3]) # returns [2, 3, 4]</p>\n\n<h1 id=\"alternatively-can-provide-both-synd-and-sync-implementations\">Alternatively, can provide both synd and sync implementations</h1>\n\n<p>async def add_one_async(x: int) -> int:\n    return x + 1</p>\n\n<p>runnable = RunnableLambda(add_one, afunc=add_one_async)\nrunnable.invoke(1) # Uses add_one\nawait runnable.ainvoke(1) # Uses add_one_async\n```</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.engine.openai.openai_vision.OpenAIVision.template", "modulename": "main.askai.core.engine.openai.openai_vision", "qualname": "OpenAIVision.template", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">question</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.engine.openai.openai_vision.OpenAIVision.caption", "modulename": "main.askai.core.engine.openai.openai_vision", "qualname": "OpenAIVision.caption", "kind": "function", "doc": "<p>Generate a caption for the provided image.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>filename</strong>:  File name of the image for which the caption is to be generated.</li>\n<li><strong>load_dir</strong>:  Optional directory path for loading related resources.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A dictionary containing the generated caption.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">filename</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">pathlib</span><span class=\"o\">.</span><span class=\"n\">Path</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">load_dir</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">pathlib</span><span class=\"o\">.</span><span class=\"n\">Path</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">question</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.engine.openai.temperature", "modulename": "main.askai.core.engine.openai.temperature", "kind": "module", "doc": "<p>@project: HsPyLib-AskAI\n@package: askai.core.engine.openai\n   @file: temperature.py\n@created: Tue, 23 Apr 2024\n @author: <B>H</B>ugo <B>S</B>aporetti <B>J</B>unior\n   @site: <a href=\"https://github.com/yorevs/askai\">https://github.com/yorevs/askai</a>\n@license: MIT - Please refer to <a href=\"https://opensource.org/licenses/MIT\">https://opensource.org/licenses/MIT</a></p>\n\n<p>Copyright (c) 2024, AskAI</p>\n"}, {"fullname": "main.askai.core.engine.openai.temperature.Temperature", "modulename": "main.askai.core.engine.openai.temperature", "qualname": "Temperature", "kind": "class", "doc": "<p>Provides recommended temperature and top_p combinations for ChatGPT prompts. This enumeration is designed to\nhelp users select appropriate temperature settings for different types of prompts, balancing creativity and\nconsistency according to the task at hand.\nReference: <a href=\"https://community.openai.com/t/cheat-sheet-mastering-temperature-and-top-p-in-chatgpt-api/172683\">https://community.openai.com/t/cheat-sheet-mastering-temperature-and-top-p-in-chatgpt-api/172683</a></p>\n\n<ul>\n<li><p>Lower temperature (e.g., 0.1 - 0.4): Produces more focused, conservative, and consistent responses.\nUseful for scenarios requiring factual information, precise answers, or adherence to specific formats or brand\nguidelines.</p></li>\n<li><p>Moderate temperature (e.g., 0.5 - 0.7): Strikes a balance between creativity and consistency.\nIdeal for general content generation where a blend of accuracy and inventiveness is desired.</p></li>\n<li><p>Higher temperature (e.g., 0.8 - 1.0): Generates more creative, diverse, and unexpected outputs.\nSuitable for brainstorming innovative ideas, crafting engaging social media content, or exploring fresh\nperspectives on a topic.</p></li>\n</ul>\n", "bases": "hspylib.core.enums.enumeration.Enumeration"}, {"fullname": "main.askai.core.engine.openai.temperature.Temperature.COLDEST", "modulename": "main.askai.core.engine.openai.temperature", "qualname": "Temperature.COLDEST", "kind": "variable", "doc": "<p></p>\n", "default_value": "COLDEST"}, {"fullname": "main.askai.core.engine.openai.temperature.Temperature.DATA_ANALYSIS", "modulename": "main.askai.core.engine.openai.temperature", "qualname": "Temperature.DATA_ANALYSIS", "kind": "variable", "doc": "<p></p>\n", "default_value": "DATA_ANALYSIS"}, {"fullname": "main.askai.core.engine.openai.temperature.Temperature.CODE_GENERATION", "modulename": "main.askai.core.engine.openai.temperature", "qualname": "Temperature.CODE_GENERATION", "kind": "variable", "doc": "<p></p>\n", "default_value": "DATA_ANALYSIS"}, {"fullname": "main.askai.core.engine.openai.temperature.Temperature.CODE_COMMENT_GENERATION", "modulename": "main.askai.core.engine.openai.temperature", "qualname": "Temperature.CODE_COMMENT_GENERATION", "kind": "variable", "doc": "<p></p>\n", "default_value": "CODE_COMMENT_GENERATION"}, {"fullname": "main.askai.core.engine.openai.temperature.Temperature.CHATBOT_RESPONSES", "modulename": "main.askai.core.engine.openai.temperature", "qualname": "Temperature.CHATBOT_RESPONSES", "kind": "variable", "doc": "<p></p>\n", "default_value": "CHATBOT_RESPONSES"}, {"fullname": "main.askai.core.engine.openai.temperature.Temperature.EXPLORATORY_CODE_WRITING", "modulename": "main.askai.core.engine.openai.temperature", "qualname": "Temperature.EXPLORATORY_CODE_WRITING", "kind": "variable", "doc": "<p></p>\n", "default_value": "EXPLORATORY_CODE_WRITING"}, {"fullname": "main.askai.core.engine.openai.temperature.Temperature.CREATIVE_WRITING", "modulename": "main.askai.core.engine.openai.temperature", "qualname": "Temperature.CREATIVE_WRITING", "kind": "variable", "doc": "<p></p>\n", "default_value": "CREATIVE_WRITING"}, {"fullname": "main.askai.core.engine.openai.temperature.Temperature.HOTTEST", "modulename": "main.askai.core.engine.openai.temperature", "qualname": "Temperature.HOTTEST", "kind": "variable", "doc": "<p></p>\n", "default_value": "HOTTEST"}, {"fullname": "main.askai.core.engine.openai.temperature.Temperature.temp", "modulename": "main.askai.core.engine.openai.temperature", "qualname": "Temperature.temp", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "main.askai.core.engine.openai.temperature.Temperature.top_p", "modulename": "main.askai.core.engine.openai.temperature", "qualname": "Temperature.top_p", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "main.askai.core.enums", "modulename": "main.askai.core.enums", "kind": "module", "doc": "<p>Package initialization.</p>\n"}, {"fullname": "main.askai.core.enums.acc_color", "modulename": "main.askai.core.enums.acc_color", "kind": "module", "doc": "<p>@project: HsPyLib-AskAI\n@package: askai.core.enums.acc_response\n   @file: acc_color.py\n@created: Thu, 26 Sep 2024\n @author: <B>H</B>ugo <B>S</B>aporetti <B>J</B>unior\n   @site: <a href=\"https://github.com/yorevs/askai\">https://github.com/yorevs/askai</a>\n@license: MIT - Please refer to <a href=\"https://opensource.org/licenses/MIT\">https://opensource.org/licenses/MIT</a></p>\n\n<p>Copyright (c) 2024, AskAI</p>\n"}, {"fullname": "main.askai.core.enums.acc_color.AccuracyColors", "modulename": "main.askai.core.enums.acc_color", "qualname": "AccuracyColors", "kind": "variable", "doc": "<p></p>\n", "annotation": ": TypeAlias", "default_value": "Literal[&#x27;Blue&#x27;, &#x27;White&#x27;, &#x27;Green&#x27;, &#x27;Yellow&#x27;, &#x27;Red&#x27;]"}, {"fullname": "main.askai.core.enums.acc_color.AccColor", "modulename": "main.askai.core.enums.acc_color", "qualname": "AccColor", "kind": "class", "doc": "<p>TODO</p>\n", "bases": "hspylib.core.enums.enumeration.Enumeration"}, {"fullname": "main.askai.core.enums.acc_color.AccColor.INTERRUPT", "modulename": "main.askai.core.enums.acc_color", "qualname": "AccColor.INTERRUPT", "kind": "variable", "doc": "<p></p>\n", "default_value": "INTERRUPT"}, {"fullname": "main.askai.core.enums.acc_color.AccColor.TERMINATE", "modulename": "main.askai.core.enums.acc_color", "qualname": "AccColor.TERMINATE", "kind": "variable", "doc": "<p></p>\n", "default_value": "TERMINATE"}, {"fullname": "main.askai.core.enums.acc_color.AccColor.EXCELLENT", "modulename": "main.askai.core.enums.acc_color", "qualname": "AccColor.EXCELLENT", "kind": "variable", "doc": "<p></p>\n", "default_value": "EXCELLENT"}, {"fullname": "main.askai.core.enums.acc_color.AccColor.GOOD", "modulename": "main.askai.core.enums.acc_color", "qualname": "AccColor.GOOD", "kind": "variable", "doc": "<p></p>\n", "default_value": "GOOD"}, {"fullname": "main.askai.core.enums.acc_color.AccColor.MODERATE", "modulename": "main.askai.core.enums.acc_color", "qualname": "AccColor.MODERATE", "kind": "variable", "doc": "<p></p>\n", "default_value": "MODERATE"}, {"fullname": "main.askai.core.enums.acc_color.AccColor.BAD", "modulename": "main.askai.core.enums.acc_color", "qualname": "AccColor.BAD", "kind": "variable", "doc": "<p></p>\n", "default_value": "BAD"}, {"fullname": "main.askai.core.enums.acc_color.AccColor.of_color", "modulename": "main.askai.core.enums.acc_color", "qualname": "AccColor.of_color", "kind": "function", "doc": "<p>Create an AccResponse instance based on status and optional reasoning.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>color_str</strong>:  The color as a string.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>An instance of AccColor with the given color.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">cls</span>,</span><span class=\"param\">\t<span class=\"n\">color_str</span><span class=\"p\">:</span> <span class=\"n\">Literal</span><span class=\"p\">[</span><span class=\"s1\">&#39;Blue&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;White&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Green&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Yellow&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Red&#39;</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">main</span><span class=\"o\">.</span><span class=\"n\">askai</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">enums</span><span class=\"o\">.</span><span class=\"n\">acc_color</span><span class=\"o\">.</span><span class=\"n\">AccColor</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.enums.acc_color.AccColor.color", "modulename": "main.askai.core.enums.acc_color", "qualname": "AccColor.color", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "main.askai.core.enums.acc_color.AccColor.val", "modulename": "main.askai.core.enums.acc_color", "qualname": "AccColor.val", "kind": "variable", "doc": "<p>Gets the integer value of the verbosity level.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The integer representation of the verbosity level.</p>\n</blockquote>\n", "annotation": ": int"}, {"fullname": "main.askai.core.enums.acc_color.AccColor.is_terminate", "modulename": "main.askai.core.enums.acc_color", "qualname": "AccColor.is_terminate", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "main.askai.core.enums.acc_color.AccColor.is_interrupt", "modulename": "main.askai.core.enums.acc_color", "qualname": "AccColor.is_interrupt", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "main.askai.core.enums.acc_color.AccColor.is_bad", "modulename": "main.askai.core.enums.acc_color", "qualname": "AccColor.is_bad", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "main.askai.core.enums.acc_color.AccColor.is_moderate", "modulename": "main.askai.core.enums.acc_color", "qualname": "AccColor.is_moderate", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "main.askai.core.enums.acc_color.AccColor.is_good", "modulename": "main.askai.core.enums.acc_color", "qualname": "AccColor.is_good", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "main.askai.core.enums.acc_color.AccColor.passed", "modulename": "main.askai.core.enums.acc_color", "qualname": "AccColor.passed", "kind": "function", "doc": "<p>Determine whether the response matches a 'PASS' classification.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>threshold</strong>:  The threshold or criteria used to determine a 'PASS' classification.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>True if the response meets or exceeds the 'PASS' threshold, otherwise False.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">threshold</span><span class=\"p\">:</span> <span class=\"n\">main</span><span class=\"o\">.</span><span class=\"n\">askai</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">enums</span><span class=\"o\">.</span><span class=\"n\">acc_color</span><span class=\"o\">.</span><span class=\"n\">AccColor</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.enums.response_model", "modulename": "main.askai.core.enums.response_model", "kind": "module", "doc": "<p>@project: HsPyLib-AskAI\n@package: askai.core.enums.routing_model\n   @file: response_model.py\n@created: Tue, 11 Jun 2024\n @author: <B>H</B>ugo <B>S</B>aporetti <B>J</B>unior\n   @site: <a href=\"https://github.com/yorevs/askai\">https://github.com/yorevs/askai</a>\n@license: MIT - Please refer to <a href=\"https://opensource.org/licenses/MIT\">https://opensource.org/licenses/MIT</a></p>\n\n<p>Copyright (c) 2024, AskAI</p>\n"}, {"fullname": "main.askai.core.enums.response_model.ResponseModel", "modulename": "main.askai.core.enums.response_model", "qualname": "ResponseModel", "kind": "class", "doc": "<p>Enumeration representing the model used to provide the final answer to the user.\nThis class defines the different models that can be used in the routing process to generate and deliver the\nfinal response.</p>\n", "bases": "hspylib.core.enums.enumeration.Enumeration"}, {"fullname": "main.askai.core.enums.response_model.ResponseModel.NEUTRAL", "modulename": "main.askai.core.enums.response_model", "qualname": "ResponseModel.NEUTRAL", "kind": "variable", "doc": "<p></p>\n", "default_value": "NEUTRAL::ASK_000"}, {"fullname": "main.askai.core.enums.response_model.ResponseModel.ASSISTIVE_TECH_HELPER", "modulename": "main.askai.core.enums.response_model", "qualname": "ResponseModel.ASSISTIVE_TECH_HELPER", "kind": "variable", "doc": "<p></p>\n", "default_value": "ASSISTIVE_TECH_HELPER::ASK_001"}, {"fullname": "main.askai.core.enums.response_model.ResponseModel.TERMINAL_COMMAND", "modulename": "main.askai.core.enums.response_model", "qualname": "ResponseModel.TERMINAL_COMMAND", "kind": "variable", "doc": "<p></p>\n", "default_value": "TERMINAL_COMMAND::ASK_002"}, {"fullname": "main.askai.core.enums.response_model.ResponseModel.CONTENT_MASTER", "modulename": "main.askai.core.enums.response_model", "qualname": "ResponseModel.CONTENT_MASTER", "kind": "variable", "doc": "<p></p>\n", "default_value": "CONTENT_MASTER::ASK_003"}, {"fullname": "main.askai.core.enums.response_model.ResponseModel.TEXT_ANALYZER", "modulename": "main.askai.core.enums.response_model", "qualname": "ResponseModel.TEXT_ANALYZER", "kind": "variable", "doc": "<p></p>\n", "default_value": "TEXT_ANALYZER::ASK_004"}, {"fullname": "main.askai.core.enums.response_model.ResponseModel.DATA_ANALYSIS", "modulename": "main.askai.core.enums.response_model", "qualname": "ResponseModel.DATA_ANALYSIS", "kind": "variable", "doc": "<p></p>\n", "default_value": "DATA_ANALYSIS::ASK_005"}, {"fullname": "main.askai.core.enums.response_model.ResponseModel.CHAT_MASTER", "modulename": "main.askai.core.enums.response_model", "qualname": "ResponseModel.CHAT_MASTER", "kind": "variable", "doc": "<p></p>\n", "default_value": "CHAT_MASTER::ASK_006"}, {"fullname": "main.askai.core.enums.response_model.ResponseModel.MEDIA_MANAGEMENT_AND_PLAYBACK", "modulename": "main.askai.core.enums.response_model", "qualname": "ResponseModel.MEDIA_MANAGEMENT_AND_PLAYBACK", "kind": "variable", "doc": "<p></p>\n", "default_value": "MEDIA_MANAGEMENT_AND_PLAYBACK::ASK_007"}, {"fullname": "main.askai.core.enums.response_model.ResponseModel.IMAGE_PROCESSOR", "modulename": "main.askai.core.enums.response_model", "qualname": "ResponseModel.IMAGE_PROCESSOR", "kind": "variable", "doc": "<p></p>\n", "default_value": "IMAGE_PROCESSOR::ASK_008"}, {"fullname": "main.askai.core.enums.response_model.ResponseModel.SUMMARIZE_AND_QUERY", "modulename": "main.askai.core.enums.response_model", "qualname": "ResponseModel.SUMMARIZE_AND_QUERY", "kind": "variable", "doc": "<p></p>\n", "default_value": "SUMMARIZE_AND_QUERY::ASK_009"}, {"fullname": "main.askai.core.enums.response_model.ResponseModel.WEB_FETCH", "modulename": "main.askai.core.enums.response_model", "qualname": "ResponseModel.WEB_FETCH", "kind": "variable", "doc": "<p></p>\n", "default_value": "WEB_FETCH::ASK_010"}, {"fullname": "main.askai.core.enums.response_model.ResponseModel.FINAL_ANSWER", "modulename": "main.askai.core.enums.response_model", "qualname": "ResponseModel.FINAL_ANSWER", "kind": "variable", "doc": "<p></p>\n", "default_value": "FINAL_ANSWER::ASK_011"}, {"fullname": "main.askai.core.enums.response_model.ResponseModel.of_model", "modulename": "main.askai.core.enums.response_model", "qualname": "ResponseModel.of_model", "kind": "function", "doc": "<p>Return the ResponseModel instance that matches the given model ID.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>model_id</strong>:  The ID of the model to retrieve.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The ResponseModel instance corresponding to the specified model ID.</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>:  If no matching ResponseModel is found.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">model_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">main</span><span class=\"o\">.</span><span class=\"n\">askai</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">enums</span><span class=\"o\">.</span><span class=\"n\">response_model</span><span class=\"o\">.</span><span class=\"n\">ResponseModel</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.enums.response_model.ResponseModel.enlist", "modulename": "main.askai.core.enums.response_model", "qualname": "ResponseModel.enlist", "kind": "function", "doc": "<p>Return a list of selectable models as a formatted string.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>separator</strong>:  The separator used to delimit the models in the list (default is the system's line separator).</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A string containing the list of selectable models, separated by the specified separator.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">separator</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.enums.response_model.ResponseModel.model", "modulename": "main.askai.core.enums.response_model", "qualname": "ResponseModel.model", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "main.askai.core.enums.response_model.ResponseModel.description", "modulename": "main.askai.core.enums.response_model", "qualname": "ResponseModel.description", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "main.askai.core.enums.router_mode", "modulename": "main.askai.core.enums.router_mode", "kind": "module", "doc": "<p>@project: HsPyLib-AskAI\n@package: askai.core.enums.router_mode\n   @file: router_mode.py\n@created: Tue, 24 Jun 2024\n @author: <B>H</B>ugo <B>S</B>aporetti <B>J</B>unior\n   @site: <a href=\"https://github.com/yorevs/askai\">https://github.com/yorevs/askai</a>\n@license: MIT - Please refer to <a href=\"https://opensource.org/licenses/MIT\">https://opensource.org/licenses/MIT</a></p>\n\n<p>Copyright (c) 2024, AskAI</p>\n"}, {"fullname": "main.askai.core.enums.router_mode.RouterMode", "modulename": "main.askai.core.enums.router_mode", "qualname": "RouterMode", "kind": "class", "doc": "<p>Enumeration of available router modes used to determine the type of response provided to the user. This class\ndefines the different modes that the router can operate in, each affecting how answers are generated and delivered.</p>\n", "bases": "hspylib.core.enums.enumeration.Enumeration"}, {"fullname": "main.askai.core.enums.router_mode.RouterMode.SPLITTER", "modulename": "main.askai.core.enums.router_mode", "qualname": "RouterMode.SPLITTER", "kind": "variable", "doc": "<p></p>\n", "default_value": "SPLITTER"}, {"fullname": "main.askai.core.enums.router_mode.RouterMode.QNA", "modulename": "main.askai.core.enums.router_mode", "qualname": "RouterMode.QNA", "kind": "variable", "doc": "<p></p>\n", "default_value": "QNA"}, {"fullname": "main.askai.core.enums.router_mode.RouterMode.QSTRING", "modulename": "main.askai.core.enums.router_mode", "qualname": "RouterMode.QSTRING", "kind": "variable", "doc": "<p></p>\n", "default_value": "QSTRING"}, {"fullname": "main.askai.core.enums.router_mode.RouterMode.RAG", "modulename": "main.askai.core.enums.router_mode", "qualname": "RouterMode.RAG", "kind": "variable", "doc": "<p></p>\n", "default_value": "RAG"}, {"fullname": "main.askai.core.enums.router_mode.RouterMode.CHAT", "modulename": "main.askai.core.enums.router_mode", "qualname": "RouterMode.CHAT", "kind": "variable", "doc": "<p></p>\n", "default_value": "CHAT"}, {"fullname": "main.askai.core.enums.router_mode.RouterMode.modes", "modulename": "main.askai.core.enums.router_mode", "qualname": "RouterMode.modes", "kind": "function", "doc": "<p>Return a list containing all available agent modes.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A list of available agent modes as strings.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.enums.router_mode.RouterMode.default", "modulename": "main.askai.core.enums.router_mode", "qualname": "RouterMode.default", "kind": "function", "doc": "<p>Return the default routing mode.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The default RouterMode instance.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"n\">main</span><span class=\"o\">.</span><span class=\"n\">askai</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">enums</span><span class=\"o\">.</span><span class=\"n\">router_mode</span><span class=\"o\">.</span><span class=\"n\">RouterMode</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.enums.router_mode.RouterMode.of_name", "modulename": "main.askai.core.enums.router_mode", "qualname": "RouterMode.of_name", "kind": "function", "doc": "<p>Retrieve the RouterMode instance corresponding to the given name.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>name</strong>:  The name of the router mode to retrieve.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The RouterMode instance that matches the given name.</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>:  If no matching RouterMode is found.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">main</span><span class=\"o\">.</span><span class=\"n\">askai</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">enums</span><span class=\"o\">.</span><span class=\"n\">router_mode</span><span class=\"o\">.</span><span class=\"n\">RouterMode</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.enums.router_mode.RouterMode.description", "modulename": "main.askai.core.enums.router_mode", "qualname": "RouterMode.description", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "main.askai.core.enums.router_mode.RouterMode.icon", "modulename": "main.askai.core.enums.router_mode", "qualname": "RouterMode.icon", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "main.askai.core.enums.router_mode.RouterMode.processor", "modulename": "main.askai.core.enums.router_mode", "qualname": "RouterMode.processor", "kind": "variable", "doc": "<p></p>\n", "annotation": ": askai.core.processors.ai_processor.AIProcessor"}, {"fullname": "main.askai.core.enums.router_mode.RouterMode.is_default", "modulename": "main.askai.core.enums.router_mode", "qualname": "RouterMode.is_default", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "main.askai.core.enums.router_mode.RouterMode.welcome", "modulename": "main.askai.core.enums.router_mode", "qualname": "RouterMode.welcome", "kind": "function", "doc": "<p>TODO</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.enums.router_mode.RouterMode.process", "modulename": "main.askai.core.enums.router_mode", "qualname": "RouterMode.process", "kind": "function", "doc": "<p>Invoke the processor associated with the current mode to handle the given question.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>question</strong>:  The question to be processed.</li>\n<li><strong>kwargs</strong>:  Additional arguments to be passed to the processor.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The processed response as a string, or None if no response is generated.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">question</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.enums.run_modes", "modulename": "main.askai.core.enums.run_modes", "kind": "module", "doc": "<p>@project: HsPyLib-AskAI\n@package: askai.core.enums.run_modes\n   @file: run_modes.py\n@created: Wed, 02 Oct 2024\n @author: <B>H</B>ugo <B>S</B>aporetti <B>J</B>unior\n   @site: <a href=\"https://github.com/yorevs/askai\">https://github.com/yorevs/askai</a>\n@license: MIT - Please refer to <a href=\"https://opensource.org/licenses/MIT\">https://opensource.org/licenses/MIT</a></p>\n\n<p>Copyright (c) 2024, AskAI</p>\n"}, {"fullname": "main.askai.core.enums.run_modes.RunModes", "modulename": "main.askai.core.enums.run_modes", "qualname": "RunModes", "kind": "class", "doc": "<p>AskAI run modes</p>\n", "bases": "hspylib.core.enums.enumeration.Enumeration"}, {"fullname": "main.askai.core.enums.run_modes.RunModes.ASKAI_TUI", "modulename": "main.askai.core.enums.run_modes", "qualname": "RunModes.ASKAI_TUI", "kind": "variable", "doc": "<p></p>\n", "default_value": "ASKAI_TUI"}, {"fullname": "main.askai.core.enums.run_modes.RunModes.ASKAI_CLI", "modulename": "main.askai.core.enums.run_modes", "qualname": "RunModes.ASKAI_CLI", "kind": "variable", "doc": "<p></p>\n", "default_value": "ASKAI_CLI"}, {"fullname": "main.askai.core.enums.run_modes.RunModes.ASKAI_CMD", "modulename": "main.askai.core.enums.run_modes", "qualname": "RunModes.ASKAI_CMD", "kind": "variable", "doc": "<p></p>\n", "default_value": "ASKAI_CMD"}, {"fullname": "main.askai.core.enums.verbosity", "modulename": "main.askai.core.enums.verbosity", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "main.askai.core.enums.verbosity.Verbosity", "modulename": "main.askai.core.enums.verbosity", "qualname": "Verbosity", "kind": "class", "doc": "<p>Represents different verbosity levels for logging or output.\nAttributes:\n    MINIMUM (int): The minimum verbosity level.\n    LOW (int): A low verbosity level.\n    NORMAL (int): The normal verbosity level.\n    DETAILED (int): A detailed verbosity level.\n    FULL (int): The full verbosity level.</p>\n", "bases": "hspylib.core.enums.enumeration.Enumeration"}, {"fullname": "main.askai.core.enums.verbosity.Verbosity.MINIMUM", "modulename": "main.askai.core.enums.verbosity", "qualname": "Verbosity.MINIMUM", "kind": "variable", "doc": "<p></p>\n", "default_value": "MINIMUM"}, {"fullname": "main.askai.core.enums.verbosity.Verbosity.LOW", "modulename": "main.askai.core.enums.verbosity", "qualname": "Verbosity.LOW", "kind": "variable", "doc": "<p></p>\n", "default_value": "LOW"}, {"fullname": "main.askai.core.enums.verbosity.Verbosity.NORMAL", "modulename": "main.askai.core.enums.verbosity", "qualname": "Verbosity.NORMAL", "kind": "variable", "doc": "<p></p>\n", "default_value": "NORMAL"}, {"fullname": "main.askai.core.enums.verbosity.Verbosity.DETAILED", "modulename": "main.askai.core.enums.verbosity", "qualname": "Verbosity.DETAILED", "kind": "variable", "doc": "<p></p>\n", "default_value": "DETAILED"}, {"fullname": "main.askai.core.enums.verbosity.Verbosity.FULL", "modulename": "main.askai.core.enums.verbosity", "qualname": "Verbosity.FULL", "kind": "variable", "doc": "<p></p>\n", "default_value": "FULL"}, {"fullname": "main.askai.core.enums.verbosity.Verbosity.val", "modulename": "main.askai.core.enums.verbosity", "qualname": "Verbosity.val", "kind": "variable", "doc": "<p>Gets the integer value of the verbosity level.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The integer representation of the verbosity level.</p>\n</blockquote>\n", "annotation": ": int"}, {"fullname": "main.askai.core.model", "modulename": "main.askai.core.model", "kind": "module", "doc": "<p>Package initialization.</p>\n"}, {"fullname": "main.askai.core.model.acc_response", "modulename": "main.askai.core.model.acc_response", "kind": "module", "doc": "<p>@project: HsPyLib-AskAI\n@package: askai.core.enums.acc_response\n   @file: acc_response.py\n@created: Tue, 23 Apr 2024\n @author: <B>H</B>ugo <B>S</B>aporetti <B>J</B>unior\n   @site: <a href=\"https://github.com/yorevs/askai\">https://github.com/yorevs/askai</a>\n@license: MIT - Please refer to <a href=\"https://opensource.org/licenses/MIT\">https://opensource.org/licenses/MIT</a></p>\n\n<p>Copyright (c) 2024, AskAI</p>\n"}, {"fullname": "main.askai.core.model.acc_response.AccResponse", "modulename": "main.askai.core.model.acc_response", "qualname": "AccResponse", "kind": "class", "doc": "<p>Track and classify accuracy responses based on color classifications. This class provides an enumeration of\npossible accuracy responses, which are typically represented by different colors.</p>\n"}, {"fullname": "main.askai.core.model.acc_response.AccResponse.__init__", "modulename": "main.askai.core.model.acc_response", "qualname": "AccResponse.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">acc_color</span><span class=\"p\">:</span> <span class=\"n\">askai</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">enums</span><span class=\"o\">.</span><span class=\"n\">acc_color</span><span class=\"o\">.</span><span class=\"n\">AccColor</span>,</span><span class=\"param\">\t<span class=\"n\">accuracy</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">reasoning</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">tips</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span>)</span>"}, {"fullname": "main.askai.core.model.acc_response.AccResponse.acc_color", "modulename": "main.askai.core.model.acc_response", "qualname": "AccResponse.acc_color", "kind": "variable", "doc": "<p></p>\n", "annotation": ": askai.core.enums.acc_color.AccColor"}, {"fullname": "main.askai.core.model.acc_response.AccResponse.accuracy", "modulename": "main.askai.core.model.acc_response", "qualname": "AccResponse.accuracy", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "main.askai.core.model.acc_response.AccResponse.reasoning", "modulename": "main.askai.core.model.acc_response", "qualname": "AccResponse.reasoning", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "main.askai.core.model.acc_response.AccResponse.tips", "modulename": "main.askai.core.model.acc_response", "qualname": "AccResponse.tips", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "main.askai.core.model.acc_response.AccResponse.parse_response", "modulename": "main.askai.core.model.acc_response", "qualname": "AccResponse.parse_response", "kind": "function", "doc": "<p>Parse the LLM response and convert it into an AccResponse.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>response</strong>:  The LLM response.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>An instance of AccResponse created from the parsed response.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">response</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">main</span><span class=\"o\">.</span><span class=\"n\">askai</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">acc_response</span><span class=\"o\">.</span><span class=\"n\">AccResponse</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.model.acc_response.AccResponse.color", "modulename": "main.askai.core.model.acc_response", "qualname": "AccResponse.color", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Literal[&#x27;Blue&#x27;, &#x27;White&#x27;, &#x27;Green&#x27;, &#x27;Yellow&#x27;, &#x27;Red&#x27;]"}, {"fullname": "main.askai.core.model.acc_response.AccResponse.status", "modulename": "main.askai.core.model.acc_response", "qualname": "AccResponse.status", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "main.askai.core.model.acc_response.AccResponse.details", "modulename": "main.askai.core.model.acc_response", "qualname": "AccResponse.details", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "main.askai.core.model.acc_response.AccResponse.is_interrupt", "modulename": "main.askai.core.model.acc_response", "qualname": "AccResponse.is_interrupt", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "main.askai.core.model.acc_response.AccResponse.is_terminate", "modulename": "main.askai.core.model.acc_response", "qualname": "AccResponse.is_terminate", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "main.askai.core.model.acc_response.AccResponse.is_pass", "modulename": "main.askai.core.model.acc_response", "qualname": "AccResponse.is_pass", "kind": "function", "doc": "<p>Determine whether the response matches a 'PASS' classification.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>threshold</strong>:  The threshold or criteria used to determine a 'PASS' classification.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>True if the response meets or exceeds the 'PASS' threshold, otherwise False.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">threshold</span><span class=\"p\">:</span> <span class=\"n\">askai</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">enums</span><span class=\"o\">.</span><span class=\"n\">acc_color</span><span class=\"o\">.</span><span class=\"n\">AccColor</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.model.action_plan", "modulename": "main.askai.core.model.action_plan", "kind": "module", "doc": "<p>@project: HsPyLib-AskAI\n@package: askai.core.model.action_plan\n   @file: action_plan.py\n@created: Fri, 19 Apr 2024\n @author: <B>H</B>ugo <B>S</B>aporetti <B>J</B>unior\n   @site: <a href=\"https://github.com/yorevs/askai\">https://github.com/yorevs/askai</a>\n@license: MIT - Please refer to <a href=\"https://opensource.org/licenses/MIT\">https://opensource.org/licenses/MIT</a></p>\n\n<p>Copyright (c) 2024, AskAI</p>\n"}, {"fullname": "main.askai.core.model.action_plan.ActionPlan", "modulename": "main.askai.core.model.action_plan", "qualname": "ActionPlan", "kind": "class", "doc": "<p>Represents and tracks the action plan for a router.\nThis class is used to keep track of the sequence of actions or steps to be executed by the router.</p>\n"}, {"fullname": "main.askai.core.model.action_plan.ActionPlan.__init__", "modulename": "main.askai.core.model.action_plan", "qualname": "ActionPlan.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">question</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">speak</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">primary_goal</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">is_direct</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">sub_goals</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">types</span><span class=\"o\">.</span><span class=\"n\">SimpleNamespace</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">factory</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">tasks</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">types</span><span class=\"o\">.</span><span class=\"n\">SimpleNamespace</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">factory</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">model</span><span class=\"p\">:</span> <span class=\"n\">askai</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">model_result</span><span class=\"o\">.</span><span class=\"n\">ModelResult</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">factory</span><span class=\"o\">&gt;</span></span>)</span>"}, {"fullname": "main.askai.core.model.action_plan.ActionPlan.question", "modulename": "main.askai.core.model.action_plan", "qualname": "ActionPlan.question", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "None"}, {"fullname": "main.askai.core.model.action_plan.ActionPlan.speak", "modulename": "main.askai.core.model.action_plan", "qualname": "ActionPlan.speak", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "None"}, {"fullname": "main.askai.core.model.action_plan.ActionPlan.primary_goal", "modulename": "main.askai.core.model.action_plan", "qualname": "ActionPlan.primary_goal", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "None"}, {"fullname": "main.askai.core.model.action_plan.ActionPlan.is_direct", "modulename": "main.askai.core.model.action_plan", "qualname": "ActionPlan.is_direct", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": "False"}, {"fullname": "main.askai.core.model.action_plan.ActionPlan.sub_goals", "modulename": "main.askai.core.model.action_plan", "qualname": "ActionPlan.sub_goals", "kind": "variable", "doc": "<p></p>\n", "annotation": ": list[types.SimpleNamespace]"}, {"fullname": "main.askai.core.model.action_plan.ActionPlan.tasks", "modulename": "main.askai.core.model.action_plan", "qualname": "ActionPlan.tasks", "kind": "variable", "doc": "<p></p>\n", "annotation": ": list[types.SimpleNamespace]"}, {"fullname": "main.askai.core.model.action_plan.ActionPlan.model", "modulename": "main.askai.core.model.action_plan", "qualname": "ActionPlan.model", "kind": "variable", "doc": "<p></p>\n", "annotation": ": askai.core.model.model_result.ModelResult"}, {"fullname": "main.askai.core.model.action_plan.ActionPlan.create", "modulename": "main.askai.core.model.action_plan", "qualname": "ActionPlan.create", "kind": "function", "doc": "<p>Create an ActionPlan based on the provided question, AI message, and result model.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>question</strong>:  The original question or command that was sent to the AI.</li>\n<li><strong>message</strong>:  The AIMessage object containing the AI's response and metadata.</li>\n<li><strong>model</strong>:  The result model.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>An instance of ActionPlan created from the provided inputs.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">question</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">message</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">model</span><span class=\"p\">:</span> <span class=\"n\">askai</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">model_result</span><span class=\"o\">.</span><span class=\"n\">ModelResult</span></span><span class=\"return-annotation\">) -> <span class=\"n\">main</span><span class=\"o\">.</span><span class=\"n\">askai</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">action_plan</span><span class=\"o\">.</span><span class=\"n\">ActionPlan</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.model.ai_reply", "modulename": "main.askai.core.model.ai_reply", "kind": "module", "doc": "<p>@project: HsPyLib-AskAI\n@package: askai.core.engine.model\n   @file: ai_reply.py\n@created: Fri, 12 Jan 2024\n @author: <B>H</B>ugo <B>S</B>aporetti <B>J</B>unior\n   @site: <a href=\"https://github.com/yorevs/askai\">https://github.com/yorevs/askai</a>\n@license: MIT - Please refer to <a href=\"https://opensource.org/licenses/MIT\">https://opensource.org/licenses/MIT</a></p>\n\n<p>Copyright (c) 2024, AskAI</p>\n"}, {"fullname": "main.askai.core.model.ai_reply.AIReply", "modulename": "main.askai.core.model.ai_reply", "qualname": "AIReply", "kind": "class", "doc": "<p>Data class that represents AI replies.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>message</strong>:  The reply message.</li>\n<li><strong>is_success</strong>:  Indicates whether the reply is successful.</li>\n<li><strong>is_debug</strong>:  Indicates whether the reply is for debugging.</li>\n<li><strong>verbosity</strong>:  The verbosity level of the reply.</li>\n<li><strong>is_speakable</strong>:  Indicates whether the reply is speakable.</li>\n</ul>\n"}, {"fullname": "main.askai.core.model.ai_reply.AIReply.__init__", "modulename": "main.askai.core.model.ai_reply", "qualname": "AIReply.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">message</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">is_success</span><span class=\"p\">:</span> <span class=\"nb\">bool</span>,</span><span class=\"param\">\t<span class=\"n\">is_debug</span><span class=\"p\">:</span> <span class=\"nb\">bool</span>,</span><span class=\"param\">\t<span class=\"n\">verbosity</span><span class=\"p\">:</span> <span class=\"n\">askai</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">enums</span><span class=\"o\">.</span><span class=\"n\">verbosity</span><span class=\"o\">.</span><span class=\"n\">Verbosity</span>,</span><span class=\"param\">\t<span class=\"n\">is_speakable</span><span class=\"p\">:</span> <span class=\"nb\">bool</span></span>)</span>"}, {"fullname": "main.askai.core.model.ai_reply.AIReply.message", "modulename": "main.askai.core.model.ai_reply", "qualname": "AIReply.message", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "main.askai.core.model.ai_reply.AIReply.is_success", "modulename": "main.askai.core.model.ai_reply", "qualname": "AIReply.is_success", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "main.askai.core.model.ai_reply.AIReply.is_debug", "modulename": "main.askai.core.model.ai_reply", "qualname": "AIReply.is_debug", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "main.askai.core.model.ai_reply.AIReply.verbosity", "modulename": "main.askai.core.model.ai_reply", "qualname": "AIReply.verbosity", "kind": "variable", "doc": "<p></p>\n", "annotation": ": askai.core.enums.verbosity.Verbosity"}, {"fullname": "main.askai.core.model.ai_reply.AIReply.is_speakable", "modulename": "main.askai.core.model.ai_reply", "qualname": "AIReply.is_speakable", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "main.askai.core.model.ai_reply.AIReply.info", "modulename": "main.askai.core.model.ai_reply", "qualname": "AIReply.info", "kind": "function", "doc": "<p>Creates an info reply.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>message</strong>:  The reply message.</li>\n<li><strong>verbosity</strong>:  The verbosity level of the reply.</li>\n<li><strong>speakable</strong>:  Indicates whether the reply is speakable.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>An AIReply instance with info settings.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">message</span><span class=\"p\">:</span> <span class=\"o\">~</span><span class=\"n\">AnyStr</span>,</span><span class=\"param\">\t<span class=\"n\">verbosity</span><span class=\"p\">:</span> <span class=\"n\">askai</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">enums</span><span class=\"o\">.</span><span class=\"n\">verbosity</span><span class=\"o\">.</span><span class=\"n\">Verbosity</span> <span class=\"o\">=</span> <span class=\"n\">NORMAL</span>,</span><span class=\"param\">\t<span class=\"n\">speakable</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"n\">main</span><span class=\"o\">.</span><span class=\"n\">askai</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">ai_reply</span><span class=\"o\">.</span><span class=\"n\">AIReply</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.model.ai_reply.AIReply.detailed", "modulename": "main.askai.core.model.ai_reply", "qualname": "AIReply.detailed", "kind": "function", "doc": "<p>Creates a detailed verbosity reply.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>message</strong>:  The reply message.</li>\n<li><strong>speakable</strong>:  Indicates whether the reply is speakable.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>An AIReply instance with detailed settings.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">message</span><span class=\"p\">:</span> <span class=\"o\">~</span><span class=\"n\">AnyStr</span>,</span><span class=\"param\">\t<span class=\"n\">speakable</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">main</span><span class=\"o\">.</span><span class=\"n\">askai</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">ai_reply</span><span class=\"o\">.</span><span class=\"n\">AIReply</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.model.ai_reply.AIReply.full", "modulename": "main.askai.core.model.ai_reply", "qualname": "AIReply.full", "kind": "function", "doc": "<p>Creates a full verbose reply.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>message</strong>:  The reply message.</li>\n<li><strong>speakable</strong>:  Indicates whether the reply is speakable.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>An AIReply instance with full settings.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">message</span><span class=\"p\">:</span> <span class=\"o\">~</span><span class=\"n\">AnyStr</span>,</span><span class=\"param\">\t<span class=\"n\">speakable</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">main</span><span class=\"o\">.</span><span class=\"n\">askai</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">ai_reply</span><span class=\"o\">.</span><span class=\"n\">AIReply</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.model.ai_reply.AIReply.error", "modulename": "main.askai.core.model.ai_reply", "qualname": "AIReply.error", "kind": "function", "doc": "<p>Creates an error reply.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>message</strong>:  The reply message.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>An AIReply instance with error settings.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">message</span><span class=\"p\">:</span> <span class=\"o\">~</span><span class=\"n\">AnyStr</span></span><span class=\"return-annotation\">) -> <span class=\"n\">main</span><span class=\"o\">.</span><span class=\"n\">askai</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">ai_reply</span><span class=\"o\">.</span><span class=\"n\">AIReply</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.model.ai_reply.AIReply.debug", "modulename": "main.askai.core.model.ai_reply", "qualname": "AIReply.debug", "kind": "function", "doc": "<p>Creates a debug reply.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>message</strong>:  The reply message.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>An AIReply instance with debug settings.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">message</span><span class=\"p\">:</span> <span class=\"o\">~</span><span class=\"n\">AnyStr</span></span><span class=\"return-annotation\">) -> <span class=\"n\">main</span><span class=\"o\">.</span><span class=\"n\">askai</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">ai_reply</span><span class=\"o\">.</span><span class=\"n\">AIReply</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.model.ai_reply.AIReply.mute", "modulename": "main.askai.core.model.ai_reply", "qualname": "AIReply.mute", "kind": "function", "doc": "<p>Creates a mute reply.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>message</strong>:  The reply message.</li>\n<li><strong>verbosity</strong>:  The verbosity level of the reply.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>An AIReply instance with mute settings.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">message</span><span class=\"p\">:</span> <span class=\"o\">~</span><span class=\"n\">AnyStr</span>,</span><span class=\"param\">\t<span class=\"n\">verbosity</span><span class=\"p\">:</span> <span class=\"n\">askai</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">enums</span><span class=\"o\">.</span><span class=\"n\">verbosity</span><span class=\"o\">.</span><span class=\"n\">Verbosity</span> <span class=\"o\">=</span> <span class=\"n\">NORMAL</span></span><span class=\"return-annotation\">) -> <span class=\"n\">main</span><span class=\"o\">.</span><span class=\"n\">askai</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">ai_reply</span><span class=\"o\">.</span><span class=\"n\">AIReply</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.model.ai_reply.AIReply.is_error", "modulename": "main.askai.core.model.ai_reply", "qualname": "AIReply.is_error", "kind": "variable", "doc": "<p>Checks if the reply indicates an error.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>True if the reply is not successful, otherwise False.</p>\n</blockquote>\n", "annotation": ": bool"}, {"fullname": "main.askai.core.model.ai_reply.AIReply.match", "modulename": "main.askai.core.model.ai_reply", "qualname": "AIReply.match", "kind": "function", "doc": "<p>Checks if the current verbosity level is less than or equal to the given level.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>threshold</strong>:  The verbosity threshold to compare against.</li>\n<li><strong>is_debug</strong>: </li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>True if the current level is less than or equal to the given level, otherwise False.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">threshold</span><span class=\"p\">:</span> <span class=\"n\">askai</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">enums</span><span class=\"o\">.</span><span class=\"n\">verbosity</span><span class=\"o\">.</span><span class=\"n\">Verbosity</span> <span class=\"o\">=</span> <span class=\"n\">NORMAL</span>,</span><span class=\"param\">\t<span class=\"n\">is_debug</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.model.api_keys", "modulename": "main.askai.core.model.api_keys", "kind": "module", "doc": "<p>@project: HsPyLib-AskAI\n@package: askai.core.askai_configs\n   @file: askai_configs.py\n@created: Fri, 5 Jan 2024\n @author: <B>H</B>ugo <B>S</B>aporetti <B>J</B>unior\n   @site: <a href=\"https://github.com/yorevs/askai\">https://github.com/yorevs/askai</a>\n@license: MIT - Please refer to <a href=\"https://opensource.org/licenses/MIT\">https://opensource.org/licenses/MIT</a></p>\n\n<p>Copyright (c) 2024, AskAI</p>\n"}, {"fullname": "main.askai.core.model.api_keys.API_KEY_FILE", "modulename": "main.askai.core.model.api_keys", "qualname": "API_KEY_FILE", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "$HHS_ENV_FILE"}, {"fullname": "main.askai.core.model.api_keys.ApiKeys", "modulename": "main.askai.core.model.api_keys", "qualname": "ApiKeys", "kind": "class", "doc": "<p>A class to manage and handle the required API keys.\nThis class provides a structured way to store, access, and manage API keys necessary for various services.\nIt inherits from BaseSettings to facilitate environment-based configuration.</p>\n", "bases": "pydantic.v1.env_settings.BaseSettings"}, {"fullname": "main.askai.core.model.api_keys.ApiKeys.OPENAI_API_KEY", "modulename": "main.askai.core.model.api_keys", "qualname": "ApiKeys.OPENAI_API_KEY", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "main.askai.core.model.api_keys.ApiKeys.GOOGLE_API_KEY", "modulename": "main.askai.core.model.api_keys", "qualname": "ApiKeys.GOOGLE_API_KEY", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "main.askai.core.model.api_keys.ApiKeys.DEEPL_API_KEY", "modulename": "main.askai.core.model.api_keys", "qualname": "ApiKeys.DEEPL_API_KEY", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "main.askai.core.model.api_keys.ApiKeys.not_empty", "modulename": "main.askai.core.model.api_keys", "qualname": "ApiKeys.not_empty", "kind": "function", "doc": "<p>Pydantic validator to ensure that API key fields are not empty.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>value</strong>:  The value of the API key being validated.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The value if it is not empty.</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>:  If the value is empty or None.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"o\">~</span><span class=\"n\">AnyStr</span></span><span class=\"return-annotation\">) -> <span class=\"o\">~</span><span class=\"n\">AnyStr</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.model.api_keys.ApiKeys.has_key", "modulename": "main.askai.core.model.api_keys", "qualname": "ApiKeys.has_key", "kind": "function", "doc": "<p>Check if the specified API key exists and is not empty.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>key_name</strong>:  The name of the API key to check.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>True if the API key exists and is not empty, otherwise False.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">key_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.model.api_keys.ApiKeys.Config", "modulename": "main.askai.core.model.api_keys", "qualname": "ApiKeys.Config", "kind": "class", "doc": "<p>Configuration class for setting environment variables related to API keys.</p>\n"}, {"fullname": "main.askai.core.model.api_keys.ApiKeys.Config.env_file", "modulename": "main.askai.core.model.api_keys", "qualname": "ApiKeys.Config.env_file", "kind": "variable", "doc": "<p></p>\n", "default_value": "$HHS_ENV_FILE"}, {"fullname": "main.askai.core.model.api_keys.ApiKeys.Config.env_file_encoding", "modulename": "main.askai.core.model.api_keys", "qualname": "ApiKeys.Config.env_file_encoding", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;utf-8&#x27;"}, {"fullname": "main.askai.core.model.api_keys.ApiKeys.prompt", "modulename": "main.askai.core.model.api_keys", "qualname": "ApiKeys.prompt", "kind": "function", "doc": "<p>Prompt the user to input the required API keys.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>True if all required API keys are successfully provided, otherwise False.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.model.api_keys.ApiKeys.ensure", "modulename": "main.askai.core.model.api_keys", "qualname": "ApiKeys.ensure", "kind": "function", "doc": "<p>Ensure that the provided API key is valid for the required method.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>api_key</strong>:  The API key to check.</li>\n<li><strong>feature</strong>:  The feature for which the API key is required.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>MissingApiKeyError</strong>:  If the API key is not valid.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">api_key</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">feature</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.model.image_result", "modulename": "main.askai.core.model.image_result", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "main.askai.core.model.image_result.ImageResult", "modulename": "main.askai.core.model.image_result", "qualname": "ImageResult", "kind": "class", "doc": "<p>Information about an image. This class provides a schema for storing and validating image-related information\nusing Pydantic's data validation features.</p>\n", "bases": "pydantic.main.BaseModel"}, {"fullname": "main.askai.core.model.image_result.ImageResult.people_count", "modulename": "main.askai.core.model.image_result", "qualname": "ImageResult.people_count", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "main.askai.core.model.image_result.ImageResult.main_objects", "modulename": "main.askai.core.model.image_result", "qualname": "ImageResult.main_objects", "kind": "variable", "doc": "<p></p>\n", "annotation": ": list[str]"}, {"fullname": "main.askai.core.model.image_result.ImageResult.env_description", "modulename": "main.askai.core.model.image_result", "qualname": "ImageResult.env_description", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "main.askai.core.model.image_result.ImageResult.people_description", "modulename": "main.askai.core.model.image_result", "qualname": "ImageResult.people_description", "kind": "variable", "doc": "<p></p>\n", "annotation": ": list[str]"}, {"fullname": "main.askai.core.model.image_result.ImageResult.of", "modulename": "main.askai.core.model.image_result", "qualname": "ImageResult.of", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">image_caption</span><span class=\"p\">:</span> <span class=\"o\">~</span><span class=\"n\">AnyStr</span></span><span class=\"return-annotation\">) -> <span class=\"n\">main</span><span class=\"o\">.</span><span class=\"n\">askai</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">image_result</span><span class=\"o\">.</span><span class=\"n\">ImageResult</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.model.image_result.ImageResult.model_config", "modulename": "main.askai.core.model.image_result", "qualname": "ImageResult.model_config", "kind": "variable", "doc": "<p></p>\n", "default_value": "{}"}, {"fullname": "main.askai.core.model.image_result.ImageResult.model_fields", "modulename": "main.askai.core.model.image_result", "qualname": "ImageResult.model_fields", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;people_count&#x27;: FieldInfo(annotation=int, required=True, description=&#x27;Number of beings on the picture&#x27;), &#x27;main_objects&#x27;: FieldInfo(annotation=list[str], required=True, description=&#x27;List of the main objects on the picture&#x27;), &#x27;env_description&#x27;: FieldInfo(annotation=str, required=True, description=&#x27;Description of the atmosphere of the environment&#x27;), &#x27;people_description&#x27;: FieldInfo(annotation=list[str], required=True, description=&#x27;List of people description&#x27;)}"}, {"fullname": "main.askai.core.model.image_result.ImageResult.model_computed_fields", "modulename": "main.askai.core.model.image_result", "qualname": "ImageResult.model_computed_fields", "kind": "variable", "doc": "<p></p>\n", "default_value": "{}"}, {"fullname": "main.askai.core.model.model_result", "modulename": "main.askai.core.model.model_result", "kind": "module", "doc": "<p>@project: HsPyLib-AskAI\n@package: askai.core.model\n   @file: summary_result.py\n@created: Tue, 11 Mar 2024\n @author: <B>H</B>ugo <B>S</B>aporetti <B>J</B>unior\n   @site: <a href=\"https://github.com/yorevs/askai\">https://github.com/yorevs/askai</a>\n@license: MIT - Please refer to <a href=\"https://opensource.org/licenses/MIT\">https://opensource.org/licenses/MIT</a></p>\n\n<p>Copyright (c) 2024, AskAI</p>\n"}, {"fullname": "main.askai.core.model.model_result.ModelResult", "modulename": "main.askai.core.model.model_result", "qualname": "ModelResult", "kind": "class", "doc": "<p>Keep track of the model select responses.</p>\n"}, {"fullname": "main.askai.core.model.model_result.ModelResult.__init__", "modulename": "main.askai.core.model.model_result", "qualname": "ModelResult.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">mid</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">goal</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">reason</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "main.askai.core.model.model_result.ModelResult.mid", "modulename": "main.askai.core.model.model_result", "qualname": "ModelResult.mid", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "None"}, {"fullname": "main.askai.core.model.model_result.ModelResult.goal", "modulename": "main.askai.core.model.model_result", "qualname": "ModelResult.goal", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "None"}, {"fullname": "main.askai.core.model.model_result.ModelResult.reason", "modulename": "main.askai.core.model.model_result", "qualname": "ModelResult.reason", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "None"}, {"fullname": "main.askai.core.model.model_result.ModelResult.default", "modulename": "main.askai.core.model.model_result", "qualname": "ModelResult.default", "kind": "function", "doc": "<p>Track and store the responses from the selected model.\nThis class is used to encapsulate the model selection returned by the LLM, including any relevant data\nassociated with the model's response.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"n\">main</span><span class=\"o\">.</span><span class=\"n\">askai</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">model_result</span><span class=\"o\">.</span><span class=\"n\">ModelResult</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.model.search_result", "modulename": "main.askai.core.model.search_result", "kind": "module", "doc": "<p>@project: HsPyLib-AskAI\n@package: askai.core.model\n   @file: search_result.py\n@created: Sun, 12 Mar 2024\n @author: <B>H</B>ugo <B>S</B>aporetti <B>J</B>unior\n   @site: <a href=\"https://github.com/yorevs/askai\">https://github.com/yorevs/askai</a>\n@license: MIT - Please refer to <a href=\"https://opensource.org/licenses/MIT\">https://opensource.org/licenses/MIT</a></p>\n\n<p>Copyright (c) 2024, AskAI</p>\n"}, {"fullname": "main.askai.core.model.search_result.SearchResult", "modulename": "main.askai.core.model.search_result", "qualname": "SearchResult", "kind": "class", "doc": "<p>Track and store responses from internet searches.\nThis class encapsulates the results returned from an internet search, including any relevant data\nassociated with the search response.</p>\n"}, {"fullname": "main.askai.core.model.search_result.SearchResult.__init__", "modulename": "main.askai.core.model.search_result", "qualname": "SearchResult.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">question</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">engine</span><span class=\"p\">:</span> <span class=\"n\">Literal</span><span class=\"p\">[</span><span class=\"s1\">&#39;Google&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Bing&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">category</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">keywords</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">sites</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">filters</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">response</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">datetime</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;Thu 24 Oct 15:10 2024&#39;</span></span>)</span>"}, {"fullname": "main.askai.core.model.search_result.SearchResult.question", "modulename": "main.askai.core.model.search_result", "qualname": "SearchResult.question", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "None"}, {"fullname": "main.askai.core.model.search_result.SearchResult.engine", "modulename": "main.askai.core.model.search_result", "qualname": "SearchResult.engine", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Literal[&#x27;Google&#x27;, &#x27;Bing&#x27;]", "default_value": "None"}, {"fullname": "main.askai.core.model.search_result.SearchResult.category", "modulename": "main.askai.core.model.search_result", "qualname": "SearchResult.category", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "None"}, {"fullname": "main.askai.core.model.search_result.SearchResult.keywords", "modulename": "main.askai.core.model.search_result", "qualname": "SearchResult.keywords", "kind": "variable", "doc": "<p></p>\n", "annotation": ": list[str]", "default_value": "None"}, {"fullname": "main.askai.core.model.search_result.SearchResult.sites", "modulename": "main.askai.core.model.search_result", "qualname": "SearchResult.sites", "kind": "variable", "doc": "<p></p>\n", "annotation": ": list[str]", "default_value": "None"}, {"fullname": "main.askai.core.model.search_result.SearchResult.filters", "modulename": "main.askai.core.model.search_result", "qualname": "SearchResult.filters", "kind": "variable", "doc": "<p></p>\n", "annotation": ": list[str]", "default_value": "None"}, {"fullname": "main.askai.core.model.search_result.SearchResult.response", "modulename": "main.askai.core.model.search_result", "qualname": "SearchResult.response", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "None"}, {"fullname": "main.askai.core.model.search_result.SearchResult.datetime", "modulename": "main.askai.core.model.search_result", "qualname": "SearchResult.datetime", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;Thu 24 Oct 15:10 2024&#x27;"}, {"fullname": "main.askai.core.model.search_result.SearchResult.parse_response", "modulename": "main.askai.core.model.search_result", "qualname": "SearchResult.parse_response", "kind": "function", "doc": "<p>Parse the router's response and convert it into an ActionPlan.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>question</strong>:  The original question or command that was sent to the router.</li>\n<li><strong>response</strong>:  The router's response.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>An instance of ActionPlan created from the parsed response.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">cls</span>,</span><span class=\"param\">\t<span class=\"n\">question</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">response</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">main</span><span class=\"o\">.</span><span class=\"n\">askai</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">search_result</span><span class=\"o\">.</span><span class=\"n\">SearchResult</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.model.search_result.SearchResult.build", "modulename": "main.askai.core.model.search_result", "qualname": "SearchResult.build", "kind": "function", "doc": "<p>TODO</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.model.summary_result", "modulename": "main.askai.core.model.summary_result", "kind": "module", "doc": "<p>@project: HsPyLib-AskAI\n@package: askai.core.model\n   @file: summary_result.py\n@created: Sun, 10 Mar 2024\n @author: <B>H</B>ugo <B>S</B>aporetti <B>J</B>unior\n   @site: <a href=\"https://github.com/yorevs/askai\">https://github.com/yorevs/askai</a>\n@license: MIT - Please refer to <a href=\"https://opensource.org/licenses/MIT\">https://opensource.org/licenses/MIT</a></p>\n\n<p>Copyright (c) 2024, AskAI</p>\n"}, {"fullname": "main.askai.core.model.summary_result.SummaryResult", "modulename": "main.askai.core.model.summary_result", "qualname": "SummaryResult", "kind": "class", "doc": "<p>Track and store the responses from summarization tasks. This class encapsulates the results of text\nsummarization, including the summarized content and any relevant data associated with the summarization\nprocess.</p>\n"}, {"fullname": "main.askai.core.model.summary_result.SummaryResult.__init__", "modulename": "main.askai.core.model.summary_result", "qualname": "SummaryResult.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">folder</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">glob</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">question</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">answer</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "main.askai.core.model.summary_result.SummaryResult.folder", "modulename": "main.askai.core.model.summary_result", "qualname": "SummaryResult.folder", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "None"}, {"fullname": "main.askai.core.model.summary_result.SummaryResult.glob", "modulename": "main.askai.core.model.summary_result", "qualname": "SummaryResult.glob", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "None"}, {"fullname": "main.askai.core.model.summary_result.SummaryResult.question", "modulename": "main.askai.core.model.summary_result", "qualname": "SummaryResult.question", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "None"}, {"fullname": "main.askai.core.model.summary_result.SummaryResult.answer", "modulename": "main.askai.core.model.summary_result", "qualname": "SummaryResult.answer", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "None"}, {"fullname": "main.askai.core.processors", "modulename": "main.askai.core.processors", "kind": "module", "doc": "<p>Package initialization.</p>\n"}, {"fullname": "main.askai.core.processors.ai_processor", "modulename": "main.askai.core.processors.ai_processor", "kind": "module", "doc": "<p>@project: HsPyLib-AskAI\n@package: askai.features.router\n   @file: ai_engine.py\n@created: Fri, 5 May 2024\n @author: <B>H</B>ugo <B>S</B>aporetti <B>J</B>unior\n   @site: <a href=\"https://github.com/yorevs/askai\">https://github.com/yorevs/askai</a>\n@license: MIT - Please refer to <a href=\"https://opensource.org/licenses/MIT\">https://opensource.org/licenses/MIT</a></p>\n\n<p>Copyright (c) 2024, AskAI</p>\n"}, {"fullname": "main.askai.core.processors.ai_processor.AIProcessor", "modulename": "main.askai.core.processors.ai_processor", "qualname": "AIProcessor", "kind": "class", "doc": "<p>Interface for AI processors, also known as routing modes. This protocol defines the required methods and\nbehaviors that AI processors must implement to handle specific routing tasks.</p>\n", "bases": "typing.Protocol"}, {"fullname": "main.askai.core.processors.ai_processor.AIProcessor.__init__", "modulename": "main.askai.core.processors.ai_processor", "qualname": "AIProcessor.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, {"fullname": "main.askai.core.processors.ai_processor.AIProcessor.process", "modulename": "main.askai.core.processors.ai_processor", "qualname": "AIProcessor.process", "kind": "function", "doc": "<p>Process a user query and generate a response.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>question</strong>:  The user's query to be processed.</li>\n<li><strong>kwargs</strong>:  Additional arguments that may be used in the processing.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The generated response as a string, or None if no response is generated.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">question</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.processors.chat", "modulename": "main.askai.core.processors.chat", "kind": "module", "doc": "<p>@project: taius-coder\n@package: askai.core.processors.chat\n   @file: chat.py\n@created: Mon, 23 Sep 2024\n @author: <B>H</B>ugo <B>S</B>aporetti <B>J</B>unior\"\n   @site: <a href=\"https://github.com/yorevs/taius-coder\">https://github.com/yorevs/taius-coder</a>\n@license: MIT - Please refer to <a href=\"https://opensource.org/licenses/MIT\">https://opensource.org/licenses/MIT</a></p>\n\n<p>Copyright 2024, HSPyLib team</p>\n"}, {"fullname": "main.askai.core.processors.chat.ChatProcessor", "modulename": "main.askai.core.processors.chat", "qualname": "ChatProcessor", "kind": "class", "doc": "<p>TODO</p>\n", "bases": "typing.Type"}, {"fullname": "main.askai.core.processors.chat.ChatProcessor.__init__", "modulename": "main.askai.core.processors.chat", "qualname": "ChatProcessor.__init__", "kind": "function", "doc": "<p>Invoke the class constructor or return the instance if it exists.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, {"fullname": "main.askai.core.processors.chat.ChatProcessor.INSTANCE", "modulename": "main.askai.core.processors.chat", "qualname": "ChatProcessor.INSTANCE", "kind": "variable", "doc": "<p></p>\n", "annotation": ": main.askai.core.processors.chat.ChatProcessor"}, {"fullname": "main.askai.core.processors.chat.ChatProcessor.template", "modulename": "main.askai.core.processors.chat", "qualname": "ChatProcessor.template", "kind": "function", "doc": "<p>Retrieve the processor Template.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">prompt_str</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"o\">*</span><span class=\"n\">inputs</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">) -> <span class=\"n\">langchain_core</span><span class=\"o\">.</span><span class=\"n\">prompts</span><span class=\"o\">.</span><span class=\"n\">chat</span><span class=\"o\">.</span><span class=\"n\">ChatPromptTemplate</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.processors.chat.ChatProcessor.process", "modulename": "main.askai.core.processors.chat", "qualname": "ChatProcessor.process", "kind": "function", "doc": "<p>Process the user question to retrieve the final response.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>question</strong>:  The user question to process.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The final response after processing the question.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">question</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.processors.qna", "modulename": "main.askai.core.processors.qna", "kind": "module", "doc": "<p>@project: HsPyLib-AskAI\n@package: askai.core.processors.qna\n   @file: qna.py\n@created: Fri, 5 May 2024\n @author: <B>H</B>ugo <B>S</B>aporetti <B>J</B>unior\n   @site: <a href=\"https://github.com/yorevs/askai\">https://github.com/yorevs/askai</a>\n@license: MIT - Please refer to <a href=\"https://opensource.org/licenses/MIT\">https://opensource.org/licenses/MIT</a></p>\n\n<p>Copyright (c) 2024, AskAI</p>\n"}, {"fullname": "main.askai.core.processors.qna.QnA", "modulename": "main.askai.core.processors.qna", "qualname": "QnA", "kind": "class", "doc": "<p>Processor to provide a questions and answers session about a summarized context.</p>\n", "bases": "typing.Type"}, {"fullname": "main.askai.core.processors.qna.QnA.__init__", "modulename": "main.askai.core.processors.qna", "qualname": "QnA.__init__", "kind": "function", "doc": "<p>Invoke the class constructor or return the instance if it exists.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, {"fullname": "main.askai.core.processors.qna.QnA.INSTANCE", "modulename": "main.askai.core.processors.qna", "qualname": "QnA.INSTANCE", "kind": "variable", "doc": "<p></p>\n", "annotation": ": main.askai.core.processors.qna.QnA"}, {"fullname": "main.askai.core.processors.qna.QnA.process", "modulename": "main.askai.core.processors.qna", "qualname": "QnA.process", "kind": "function", "doc": "<p>Process the user question against a summarized context to retrieve answers.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>question</strong>:  The user question to process.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">question</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">_</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.processors.qstring", "modulename": "main.askai.core.processors.qstring", "kind": "module", "doc": "<p>@project: HsPyLib-AskAI\n@package: askai.core.processors.qstring\n   @file: qstring.py\n@created: Fri, 5 May 2024\n @author: <B>H</B>ugo <B>S</B>aporetti <B>J</B>unior\n   @site: <a href=\"https://github.com/yorevs/askai\">https://github.com/yorevs/askai</a>\n@license: MIT - Please refer to <a href=\"https://opensource.org/licenses/MIT\">https://opensource.org/licenses/MIT</a></p>\n\n<p>Copyright (c) 2024, AskAI</p>\n"}, {"fullname": "main.askai.core.processors.qstring.NonInteractive", "modulename": "main.askai.core.processors.qstring", "qualname": "NonInteractive", "kind": "class", "doc": "<p>Processor to provide a answers from custom prompts (non-interactive).</p>\n", "bases": "typing.Type"}, {"fullname": "main.askai.core.processors.qstring.NonInteractive.__init__", "modulename": "main.askai.core.processors.qstring", "qualname": "NonInteractive.__init__", "kind": "function", "doc": "<p>Invoke the class constructor or return the instance if it exists.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, {"fullname": "main.askai.core.processors.qstring.NonInteractive.INSTANCE", "modulename": "main.askai.core.processors.qstring", "qualname": "NonInteractive.INSTANCE", "kind": "variable", "doc": "<p></p>\n", "annotation": ": main.askai.core.processors.qstring.NonInteractive"}, {"fullname": "main.askai.core.processors.qstring.NonInteractive.DEFAULT_PROMPT", "modulename": "main.askai.core.processors.qstring", "qualname": "NonInteractive.DEFAULT_PROMPT", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;/Users/hjunior/GIT-Repository/GitHub/askai/src/main/askai/resources/prompts/taius/taius-non-interactive&#x27;"}, {"fullname": "main.askai.core.processors.qstring.NonInteractive.DEFAULT_CONTEXT", "modulename": "main.askai.core.processors.qstring", "qualname": "NonInteractive.DEFAULT_CONTEXT", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;No context has been provided&#x27;"}, {"fullname": "main.askai.core.processors.qstring.NonInteractive.DEFAULT_TEMPERATURE", "modulename": "main.askai.core.processors.qstring", "qualname": "NonInteractive.DEFAULT_TEMPERATURE", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int", "default_value": "0.7"}, {"fullname": "main.askai.core.processors.qstring.NonInteractive.process", "modulename": "main.askai.core.processors.qstring", "qualname": "NonInteractive.process", "kind": "function", "doc": "<p>Process the user question to retrieve the final response.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>question</strong>:  The user question to process.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">question</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.processors.rag", "modulename": "main.askai.core.processors.rag", "kind": "module", "doc": "<p>@project: HsPyLib-AskAI\n@package: askai.core.processors.rag\n   @file: rag.py\n@created: Fri, 5 May 2024\n @author: <B>H</B>ugo <B>S</B>aporetti <B>J</B>unior\n   @site: <a href=\"https://github.com/yorevs/askai\">https://github.com/yorevs/askai</a>\n@license: MIT - Please refer to <a href=\"https://opensource.org/licenses/MIT\">https://opensource.org/licenses/MIT</a></p>\n\n<p>Copyright (c) 2024, AskAI</p>\n"}, {"fullname": "main.askai.core.processors.rag.Rag", "modulename": "main.askai.core.processors.rag", "qualname": "Rag", "kind": "class", "doc": "<p>Processor to provide a answers from a RAG datasource.</p>\n", "bases": "typing.Type"}, {"fullname": "main.askai.core.processors.rag.Rag.__init__", "modulename": "main.askai.core.processors.rag", "qualname": "Rag.__init__", "kind": "function", "doc": "<p>Invoke the class constructor or return the instance if it exists.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, {"fullname": "main.askai.core.processors.rag.Rag.INSTANCE", "modulename": "main.askai.core.processors.rag", "qualname": "Rag.INSTANCE", "kind": "variable", "doc": "<p></p>\n", "annotation": ": main.askai.core.processors.rag.Rag"}, {"fullname": "main.askai.core.processors.rag.Rag.rag_template", "modulename": "main.askai.core.processors.rag", "qualname": "Rag.rag_template", "kind": "variable", "doc": "<p></p>\n", "annotation": ": langchain_core.prompts.base.BasePromptTemplate"}, {"fullname": "main.askai.core.processors.rag.Rag.persist_dir", "modulename": "main.askai.core.processors.rag", "qualname": "Rag.persist_dir", "kind": "function", "doc": "<p>TODO</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">rag_dir</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">pathlib</span><span class=\"o\">.</span><span class=\"n\">Path</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">file_glob</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">pathlib</span><span class=\"o\">.</span><span class=\"n\">Path</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pathlib</span><span class=\"o\">.</span><span class=\"n\">Path</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.processors.rag.Rag.process", "modulename": "main.askai.core.processors.rag", "qualname": "Rag.process", "kind": "function", "doc": "<p>Process the user question to retrieve the final response.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>question</strong>:  The user question to process.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The final response after processing the question.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">question</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">_</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.processors.rag.Rag.generate", "modulename": "main.askai.core.processors.rag", "qualname": "Rag.generate", "kind": "function", "doc": "<p>Generates RAG data from the specified directory.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>rag_dir</strong>:  The directory containing the files for RAG data generation</li>\n<li><strong>file_glob</strong>:  The files from which to generate the RAG database.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>None</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">rag_dir</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">pathlib</span><span class=\"o\">.</span><span class=\"n\">Path</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">PosixPath</span><span class=\"p\">(</span><span class=\"s1\">&#39;/Users/hjunior/.config/hhs/askai/rag&#39;</span><span class=\"p\">)</span>,</span><span class=\"param\">\t<span class=\"n\">file_glob</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">pathlib</span><span class=\"o\">.</span><span class=\"n\">Path</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;**/*.md&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.processors.splitter", "modulename": "main.askai.core.processors.splitter", "kind": "module", "doc": "<p>Package initialization.</p>\n"}, {"fullname": "main.askai.core.processors.splitter.splitter_actions", "modulename": "main.askai.core.processors.splitter.splitter_actions", "kind": "module", "doc": "<p>@project: HsPyLib-AskAI\n@package: askai.core.processors.splitter.splitter_actions\n   @file: splitter_actions.py\n@created: Mon, 21 Oct 2024\n @author: <B>H</B>ugo <B>S</B>aporetti <B>J</B>unior\n   @site: <a href=\"https://github.com/yorevs/askai\">https://github.com/yorevs/askai</a>\n@license: MIT - Please refer to <a href=\"https://opensource.org/licenses/MIT\">https://opensource.org/licenses/MIT</a></p>\n\n<p>Copyright (c) 2024, AskAI</p>\n"}, {"fullname": "main.askai.core.processors.splitter.splitter_actions.SplitterActions", "modulename": "main.askai.core.processors.splitter.splitter_actions", "qualname": "SplitterActions", "kind": "class", "doc": "<p>TODO</p>\n", "bases": "typing.Type"}, {"fullname": "main.askai.core.processors.splitter.splitter_actions.SplitterActions.__init__", "modulename": "main.askai.core.processors.splitter.splitter_actions", "qualname": "SplitterActions.__init__", "kind": "function", "doc": "<p>Invoke the class constructor or return the instance if it exists.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, {"fullname": "main.askai.core.processors.splitter.splitter_actions.SplitterActions.INSTANCE", "modulename": "main.askai.core.processors.splitter.splitter_actions", "qualname": "SplitterActions.INSTANCE", "kind": "variable", "doc": "<p></p>\n", "annotation": ": main.askai.core.processors.splitter.splitter_actions.SplitterActions"}, {"fullname": "main.askai.core.processors.splitter.splitter_actions.SplitterActions.wrap_answer", "modulename": "main.askai.core.processors.splitter.splitter_actions", "qualname": "SplitterActions.wrap_answer", "kind": "function", "doc": "<p>Provide a final answer to the user by wrapping the AI response with additional context.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>question</strong>:  The user's question.</li>\n<li><strong>answer</strong>:  The AI's response to the question.</li>\n<li><strong>model_result</strong>:  The result from the selected routing model (default is ModelResult.default()).</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A formatted string containing the final answer.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">question</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">answer</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">model_result</span><span class=\"p\">:</span> <span class=\"n\">askai</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">model_result</span><span class=\"o\">.</span><span class=\"n\">ModelResult</span> <span class=\"o\">=</span> <span class=\"n\">ModelResult</span><span class=\"p\">(</span><span class=\"n\">mid</span><span class=\"o\">=</span><span class=\"s1\">&#39;ASK_000&#39;</span><span class=\"p\">,</span> <span class=\"n\">goal</span><span class=\"o\">=</span><span class=\"s1\">&#39;Default model&#39;</span><span class=\"p\">,</span> <span class=\"n\">reason</span><span class=\"o\">=</span><span class=\"s1\">&#39;Provide the answer as received by the AI&#39;</span><span class=\"p\">)</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.processors.splitter.splitter_actions.SplitterActions.refine_answer", "modulename": "main.askai.core.processors.splitter.splitter_actions", "qualname": "SplitterActions.refine_answer", "kind": "function", "doc": "<p>TODO</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>question</strong>:  The user's question.</li>\n<li><strong>answer</strong>:  The AI's response to the question.</li>\n<li><strong>acc_response</strong>:  The final accuracy response, if available.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">question</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">answer</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">acc_response</span><span class=\"p\">:</span> <span class=\"n\">askai</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">acc_response</span><span class=\"o\">.</span><span class=\"n\">AccResponse</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.processors.splitter.splitter_actions.SplitterActions.process_action", "modulename": "main.askai.core.processors.splitter.splitter_actions", "qualname": "SplitterActions.process_action", "kind": "function", "doc": "<p>TODO</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">action</span><span class=\"p\">:</span> <span class=\"n\">types</span><span class=\"o\">.</span><span class=\"n\">SimpleNamespace</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.processors.splitter.splitter_actions.SplitterActions.splitter_template", "modulename": "main.askai.core.processors.splitter.splitter_actions", "qualname": "SplitterActions.splitter_template", "kind": "function", "doc": "<p>Retrieve the processor Template.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">query</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">langchain_core</span><span class=\"o\">.</span><span class=\"n\">prompts</span><span class=\"o\">.</span><span class=\"n\">chat</span><span class=\"o\">.</span><span class=\"n\">ChatPromptTemplate</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.processors.splitter.splitter_actions.SplitterActions.split", "modulename": "main.askai.core.processors.splitter.splitter_actions", "qualname": "SplitterActions.split", "kind": "function", "doc": "<p>Invoke the LLM to split the tasks and create an action plan.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">question</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">model</span><span class=\"p\">:</span> <span class=\"n\">askai</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">model_result</span><span class=\"o\">.</span><span class=\"n\">ModelResult</span> <span class=\"o\">=</span> <span class=\"n\">ModelResult</span><span class=\"p\">(</span><span class=\"n\">mid</span><span class=\"o\">=</span><span class=\"s1\">&#39;ASK_000&#39;</span><span class=\"p\">,</span> <span class=\"n\">goal</span><span class=\"o\">=</span><span class=\"s1\">&#39;Default model&#39;</span><span class=\"p\">,</span> <span class=\"n\">reason</span><span class=\"o\">=</span><span class=\"s1\">&#39;Provide the answer as received by the AI&#39;</span><span class=\"p\">)</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">askai</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">action_plan</span><span class=\"o\">.</span><span class=\"n\">ActionPlan</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.processors.splitter.splitter_executor", "modulename": "main.askai.core.processors.splitter.splitter_executor", "kind": "module", "doc": "<p>@project: HsPyLib-AskAI\n@package: askai.core.processors.splitter.splitter_executor\n   @file: splitter_executor.py\n@created: Mon, 21 Oct 2024\n @author: <B>H</B>ugo <B>S</B>aporetti <B>J</B>unior\n   @site: <a href=\"https://github.com/yorevs/askai\">https://github.com/yorevs/askai</a>\n@license: MIT - Please refer to <a href=\"https://opensource.org/licenses/MIT\">https://opensource.org/licenses/MIT</a></p>\n\n<p>Copyright (c) 2024, AskAI</p>\n"}, {"fullname": "main.askai.core.processors.splitter.splitter_executor.SplitterExecutor", "modulename": "main.askai.core.processors.splitter.splitter_executor", "qualname": "SplitterExecutor", "kind": "class", "doc": "<p>Responsible for executing a TaskSplitter pipeline.</p>\n", "bases": "threading.Thread"}, {"fullname": "main.askai.core.processors.splitter.splitter_executor.SplitterExecutor.__init__", "modulename": "main.askai.core.processors.splitter.splitter_executor", "qualname": "SplitterExecutor.__init__", "kind": "function", "doc": "<p>This constructor should always be called with keyword arguments. Arguments are:</p>\n\n<p><em>group</em> should be None; reserved for future extension when a ThreadGroup\nclass is implemented.</p>\n\n<p><em>target</em> is the callable object to be invoked by the run()\nmethod. Defaults to None, meaning nothing is called.</p>\n\n<p><em>name</em> is the thread name. By default, a unique name is constructed of\nthe form \"Thread-N\" where N is a small decimal number.</p>\n\n<p><em>args</em> is a list or tuple of arguments for the target invocation. Defaults to ().</p>\n\n<p><em>kwargs</em> is a dictionary of keyword arguments for the target\ninvocation. Defaults to {}.</p>\n\n<p>If a subclass overrides the constructor, it must make sure to invoke\nthe base class constructor (Thread.__init__()) before doing anything\nelse to the thread.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">query</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span>)</span>"}, {"fullname": "main.askai.core.processors.splitter.splitter_executor.SplitterExecutor.pipeline", "modulename": "main.askai.core.processors.splitter.splitter_executor", "qualname": "SplitterExecutor.pipeline", "kind": "variable", "doc": "<p></p>\n", "annotation": ": askai.core.processors.splitter.splitter_pipeline.SplitterPipeline"}, {"fullname": "main.askai.core.processors.splitter.splitter_executor.SplitterExecutor.display", "modulename": "main.askai.core.processors.splitter.splitter_executor", "qualname": "SplitterExecutor.display", "kind": "function", "doc": "<p>TODO</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">message</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.processors.splitter.splitter_executor.SplitterExecutor.run", "modulename": "main.askai.core.processors.splitter.splitter_executor", "qualname": "SplitterExecutor.run", "kind": "function", "doc": "<p>Method representing the thread's activity.</p>\n\n<p>You may override this method in a subclass. The standard run() method\ninvokes the callable object passed to the object's constructor as the\ntarget argument, if any, with sequential and keyword arguments taken\nfrom the args and kwargs arguments, respectively.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.processors.splitter.splitter_pipeline", "modulename": "main.askai.core.processors.splitter.splitter_pipeline", "kind": "module", "doc": "<p>@project: HsPyLib-AskAI\n@package: askai.core.processors.splitter.splitter_pipeline\n   @file: ai_engine.py\n@created: Mon, 21 Oct 2024\n @author: <B>H</B>ugo <B>S</B>aporetti <B>J</B>unior\n   @site: <a href=\"https://github.com/yorevs/askai\">https://github.com/yorevs/askai</a>\n@license: MIT - Please refer to <a href=\"https://opensource.org/licenses/MIT\">https://opensource.org/licenses/MIT</a></p>\n\n<p>Copyright (c) 2024, AskAI</p>\n"}, {"fullname": "main.askai.core.processors.splitter.splitter_pipeline.SplitterPipeline", "modulename": "main.askai.core.processors.splitter.splitter_pipeline", "qualname": "SplitterPipeline", "kind": "class", "doc": "<p>TODO</p>\n"}, {"fullname": "main.askai.core.processors.splitter.splitter_pipeline.SplitterPipeline.__init__", "modulename": "main.askai.core.processors.splitter.splitter_pipeline", "qualname": "SplitterPipeline.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">question</span><span class=\"p\">:</span> <span class=\"o\">~</span><span class=\"n\">AnyStr</span></span>)</span>"}, {"fullname": "main.askai.core.processors.splitter.splitter_pipeline.SplitterPipeline.state", "modulename": "main.askai.core.processors.splitter.splitter_pipeline", "qualname": "SplitterPipeline.state", "kind": "variable", "doc": "<p></p>\n", "annotation": ": askai.core.processors.splitter.splitter_states.States"}, {"fullname": "main.askai.core.processors.splitter.splitter_pipeline.SplitterPipeline.FAKE_SLEEP", "modulename": "main.askai.core.processors.splitter.splitter_pipeline", "qualname": "SplitterPipeline.FAKE_SLEEP", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float", "default_value": "0.3"}, {"fullname": "main.askai.core.processors.splitter.splitter_pipeline.SplitterPipeline.previous", "modulename": "main.askai.core.processors.splitter.splitter_pipeline", "qualname": "SplitterPipeline.previous", "kind": "variable", "doc": "<p></p>\n", "annotation": ": askai.core.processors.splitter.splitter_states.States"}, {"fullname": "main.askai.core.processors.splitter.splitter_pipeline.SplitterPipeline.iteractions", "modulename": "main.askai.core.processors.splitter.splitter_pipeline", "qualname": "SplitterPipeline.iteractions", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "main.askai.core.processors.splitter.splitter_pipeline.SplitterPipeline.failures", "modulename": "main.askai.core.processors.splitter.splitter_pipeline", "qualname": "SplitterPipeline.failures", "kind": "variable", "doc": "<p></p>\n", "annotation": ": dict[str, int]"}, {"fullname": "main.askai.core.processors.splitter.splitter_pipeline.SplitterPipeline.result", "modulename": "main.askai.core.processors.splitter.splitter_pipeline", "qualname": "SplitterPipeline.result", "kind": "variable", "doc": "<p></p>\n", "annotation": ": askai.core.processors.splitter.splitter_result.SplitterResult"}, {"fullname": "main.askai.core.processors.splitter.splitter_pipeline.SplitterPipeline.responses", "modulename": "main.askai.core.processors.splitter.splitter_pipeline", "qualname": "SplitterPipeline.responses", "kind": "variable", "doc": "<p></p>\n", "annotation": ": list[askai.core.processors.splitter.splitter_result.PipelineResponse]"}, {"fullname": "main.askai.core.processors.splitter.splitter_pipeline.SplitterPipeline.question", "modulename": "main.askai.core.processors.splitter.splitter_pipeline", "qualname": "SplitterPipeline.question", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "main.askai.core.processors.splitter.splitter_pipeline.SplitterPipeline.last_query", "modulename": "main.askai.core.processors.splitter.splitter_pipeline", "qualname": "SplitterPipeline.last_query", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]"}, {"fullname": "main.askai.core.processors.splitter.splitter_pipeline.SplitterPipeline.last_answer", "modulename": "main.askai.core.processors.splitter.splitter_pipeline", "qualname": "SplitterPipeline.last_answer", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]"}, {"fullname": "main.askai.core.processors.splitter.splitter_pipeline.SplitterPipeline.last_accuracy", "modulename": "main.askai.core.processors.splitter.splitter_pipeline", "qualname": "SplitterPipeline.last_accuracy", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[askai.core.model.acc_response.AccResponse]"}, {"fullname": "main.askai.core.processors.splitter.splitter_pipeline.SplitterPipeline.plan", "modulename": "main.askai.core.processors.splitter.splitter_pipeline", "qualname": "SplitterPipeline.plan", "kind": "variable", "doc": "<p></p>\n", "annotation": ": askai.core.model.action_plan.ActionPlan"}, {"fullname": "main.askai.core.processors.splitter.splitter_pipeline.SplitterPipeline.model", "modulename": "main.askai.core.processors.splitter.splitter_pipeline", "qualname": "SplitterPipeline.model", "kind": "variable", "doc": "<p></p>\n", "annotation": ": askai.core.model.model_result.ModelResult"}, {"fullname": "main.askai.core.processors.splitter.splitter_pipeline.SplitterPipeline.final_answer", "modulename": "main.askai.core.processors.splitter.splitter_pipeline", "qualname": "SplitterPipeline.final_answer", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "main.askai.core.processors.splitter.splitter_pipeline.SplitterPipeline.track_previous", "modulename": "main.askai.core.processors.splitter.splitter_pipeline", "qualname": "SplitterPipeline.track_previous", "kind": "function", "doc": "<p>TODO</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.processors.splitter.splitter_pipeline.SplitterPipeline.has_next", "modulename": "main.askai.core.processors.splitter.splitter_pipeline", "qualname": "SplitterPipeline.has_next", "kind": "function", "doc": "<p>TODO</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.processors.splitter.splitter_pipeline.SplitterPipeline.is_direct", "modulename": "main.askai.core.processors.splitter.splitter_pipeline", "qualname": "SplitterPipeline.is_direct", "kind": "function", "doc": "<p>TODO</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.processors.splitter.splitter_pipeline.SplitterPipeline.st_startup", "modulename": "main.askai.core.processors.splitter.splitter_pipeline", "qualname": "SplitterPipeline.st_startup", "kind": "function", "doc": "<p>TODO</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.processors.splitter.splitter_pipeline.SplitterPipeline.st_model_select", "modulename": "main.askai.core.processors.splitter.splitter_pipeline", "qualname": "SplitterPipeline.st_model_select", "kind": "function", "doc": "<p>TODO</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.processors.splitter.splitter_pipeline.SplitterPipeline.st_task_split", "modulename": "main.askai.core.processors.splitter.splitter_pipeline", "qualname": "SplitterPipeline.st_task_split", "kind": "function", "doc": "<p>TODO</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.processors.splitter.splitter_pipeline.SplitterPipeline.st_execute_task", "modulename": "main.askai.core.processors.splitter.splitter_pipeline", "qualname": "SplitterPipeline.st_execute_task", "kind": "function", "doc": "<p>TODO</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.processors.splitter.splitter_pipeline.SplitterPipeline.st_accuracy_check", "modulename": "main.askai.core.processors.splitter.splitter_pipeline", "qualname": "SplitterPipeline.st_accuracy_check", "kind": "function", "doc": "<p>TODO</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">askai</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">enums</span><span class=\"o\">.</span><span class=\"n\">acc_color</span><span class=\"o\">.</span><span class=\"n\">AccColor</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.processors.splitter.splitter_pipeline.SplitterPipeline.st_refine_answer", "modulename": "main.askai.core.processors.splitter.splitter_pipeline", "qualname": "SplitterPipeline.st_refine_answer", "kind": "function", "doc": "<p>TODO</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.processors.splitter.splitter_pipeline.SplitterPipeline.st_final_answer", "modulename": "main.askai.core.processors.splitter.splitter_pipeline", "qualname": "SplitterPipeline.st_final_answer", "kind": "function", "doc": "<p>TODO</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.processors.splitter.splitter_result", "modulename": "main.askai.core.processors.splitter.splitter_result", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "main.askai.core.processors.splitter.splitter_result.PipelineResponse", "modulename": "main.askai.core.processors.splitter.splitter_result", "qualname": "PipelineResponse", "kind": "class", "doc": "<p>TODO</p>\n"}, {"fullname": "main.askai.core.processors.splitter.splitter_result.PipelineResponse.__init__", "modulename": "main.askai.core.processors.splitter.splitter_result", "qualname": "PipelineResponse.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">query</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">answer</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">accuracy</span><span class=\"p\">:</span> <span class=\"n\">askai</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">acc_response</span><span class=\"o\">.</span><span class=\"n\">AccResponse</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "main.askai.core.processors.splitter.splitter_result.PipelineResponse.query", "modulename": "main.askai.core.processors.splitter.splitter_result", "qualname": "PipelineResponse.query", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "main.askai.core.processors.splitter.splitter_result.PipelineResponse.answer", "modulename": "main.askai.core.processors.splitter.splitter_result", "qualname": "PipelineResponse.answer", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str | None", "default_value": "None"}, {"fullname": "main.askai.core.processors.splitter.splitter_result.PipelineResponse.accuracy", "modulename": "main.askai.core.processors.splitter.splitter_result", "qualname": "PipelineResponse.accuracy", "kind": "variable", "doc": "<p></p>\n", "annotation": ": askai.core.model.acc_response.AccResponse | None", "default_value": "None"}, {"fullname": "main.askai.core.processors.splitter.splitter_result.SplitterResult", "modulename": "main.askai.core.processors.splitter.splitter_result", "qualname": "SplitterResult", "kind": "class", "doc": "<p>TODO</p>\n"}, {"fullname": "main.askai.core.processors.splitter.splitter_result.SplitterResult.__init__", "modulename": "main.askai.core.processors.splitter.splitter_result", "qualname": "SplitterResult.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">question</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">responses</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">main</span><span class=\"o\">.</span><span class=\"n\">askai</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">processors</span><span class=\"o\">.</span><span class=\"n\">splitter</span><span class=\"o\">.</span><span class=\"n\">splitter_result</span><span class=\"o\">.</span><span class=\"n\">PipelineResponse</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">factory</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">plan</span><span class=\"p\">:</span> <span class=\"n\">askai</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">action_plan</span><span class=\"o\">.</span><span class=\"n\">ActionPlan</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">model</span><span class=\"p\">:</span> <span class=\"n\">askai</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">model_result</span><span class=\"o\">.</span><span class=\"n\">ModelResult</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "main.askai.core.processors.splitter.splitter_result.SplitterResult.question", "modulename": "main.askai.core.processors.splitter.splitter_result", "qualname": "SplitterResult.question", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "main.askai.core.processors.splitter.splitter_result.SplitterResult.responses", "modulename": "main.askai.core.processors.splitter.splitter_result", "qualname": "SplitterResult.responses", "kind": "variable", "doc": "<p></p>\n", "annotation": ": list[main.askai.core.processors.splitter.splitter_result.PipelineResponse]"}, {"fullname": "main.askai.core.processors.splitter.splitter_result.SplitterResult.plan", "modulename": "main.askai.core.processors.splitter.splitter_result", "qualname": "SplitterResult.plan", "kind": "variable", "doc": "<p></p>\n", "annotation": ": askai.core.model.action_plan.ActionPlan | None", "default_value": "None"}, {"fullname": "main.askai.core.processors.splitter.splitter_result.SplitterResult.model", "modulename": "main.askai.core.processors.splitter.splitter_result", "qualname": "SplitterResult.model", "kind": "variable", "doc": "<p></p>\n", "annotation": ": askai.core.model.model_result.ModelResult | None", "default_value": "None"}, {"fullname": "main.askai.core.processors.splitter.splitter_result.SplitterResult.final_response", "modulename": "main.askai.core.processors.splitter.splitter_result", "qualname": "SplitterResult.final_response", "kind": "function", "doc": "<p>TODO</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">acc_threshold</span><span class=\"p\">:</span> <span class=\"n\">askai</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">enums</span><span class=\"o\">.</span><span class=\"n\">acc_color</span><span class=\"o\">.</span><span class=\"n\">AccColor</span> <span class=\"o\">=</span> <span class=\"n\">MODERATE</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.processors.splitter.splitter_states", "modulename": "main.askai.core.processors.splitter.splitter_states", "kind": "module", "doc": "<p>@project: HsPyLib-AskAI\n@package: askai.core.processors.splitter.splitter_states\n   @file: splitter_states.py\n@created: Mon, 21 Oct 2024\n @author: <B>H</B>ugo <B>S</B>aporetti <B>J</B>unior\n   @site: <a href=\"https://github.com/yorevs/askai\">https://github.com/yorevs/askai</a>\n@license: MIT - Please refer to <a href=\"https://opensource.org/licenses/MIT\">https://opensource.org/licenses/MIT</a></p>\n\n<p>Copyright (c) 2024, AskAI</p>\n"}, {"fullname": "main.askai.core.processors.splitter.splitter_states.States", "modulename": "main.askai.core.processors.splitter.splitter_states", "qualname": "States", "kind": "class", "doc": "<p>Enumeration of possible task splitter states.</p>\n", "bases": "hspylib.core.enums.enumeration.Enumeration"}, {"fullname": "main.askai.core.processors.splitter.splitter_states.States.NOT_STARTED", "modulename": "main.askai.core.processors.splitter.splitter_states", "qualname": "States.NOT_STARTED", "kind": "variable", "doc": "<p></p>\n", "default_value": "NOT_STARTED"}, {"fullname": "main.askai.core.processors.splitter.splitter_states.States.STARTUP", "modulename": "main.askai.core.processors.splitter.splitter_states", "qualname": "States.STARTUP", "kind": "variable", "doc": "<p></p>\n", "default_value": "STARTUP"}, {"fullname": "main.askai.core.processors.splitter.splitter_states.States.MODEL_SELECT", "modulename": "main.askai.core.processors.splitter.splitter_states", "qualname": "States.MODEL_SELECT", "kind": "variable", "doc": "<p></p>\n", "default_value": "MODEL_SELECT"}, {"fullname": "main.askai.core.processors.splitter.splitter_states.States.TASK_SPLIT", "modulename": "main.askai.core.processors.splitter.splitter_states", "qualname": "States.TASK_SPLIT", "kind": "variable", "doc": "<p></p>\n", "default_value": "TASK_SPLIT"}, {"fullname": "main.askai.core.processors.splitter.splitter_states.States.ACC_CHECK", "modulename": "main.askai.core.processors.splitter.splitter_states", "qualname": "States.ACC_CHECK", "kind": "variable", "doc": "<p></p>\n", "default_value": "ACC_CHECK"}, {"fullname": "main.askai.core.processors.splitter.splitter_states.States.EXECUTE_TASK", "modulename": "main.askai.core.processors.splitter.splitter_states", "qualname": "States.EXECUTE_TASK", "kind": "variable", "doc": "<p></p>\n", "default_value": "EXECUTE_TASK"}, {"fullname": "main.askai.core.processors.splitter.splitter_states.States.REFINE_ANSWER", "modulename": "main.askai.core.processors.splitter.splitter_states", "qualname": "States.REFINE_ANSWER", "kind": "variable", "doc": "<p></p>\n", "default_value": "REFINE_ANSWER"}, {"fullname": "main.askai.core.processors.splitter.splitter_states.States.WRAP_ANSWER", "modulename": "main.askai.core.processors.splitter.splitter_states", "qualname": "States.WRAP_ANSWER", "kind": "variable", "doc": "<p></p>\n", "default_value": "WRAP_ANSWER"}, {"fullname": "main.askai.core.processors.splitter.splitter_states.States.COMPLETE", "modulename": "main.askai.core.processors.splitter.splitter_states", "qualname": "States.COMPLETE", "kind": "variable", "doc": "<p></p>\n", "default_value": "COMPLETE"}, {"fullname": "main.askai.core.processors.splitter.splitter_transitions", "modulename": "main.askai.core.processors.splitter.splitter_transitions", "kind": "module", "doc": "<p>@project: HsPyLib-AskAI\n@package: askai.core.processors.splitter.splitter_transitions\n   @file: splitter_transitions.py\n@created: Mon, 21 Oct 2024\n @author: <B>H</B>ugo <B>S</B>aporetti <B>J</B>unior\n   @site: <a href=\"https://github.com/yorevs/askai\">https://github.com/yorevs/askai</a>\n@license: MIT - Please refer to <a href=\"https://opensource.org/licenses/MIT\">https://opensource.org/licenses/MIT</a></p>\n\n<p>Copyright (c) 2024, AskAI</p>\n"}, {"fullname": "main.askai.core.processors.splitter.splitter_transitions.Transition", "modulename": "main.askai.core.processors.splitter.splitter_transitions", "qualname": "Transition", "kind": "variable", "doc": "<p></p>\n", "annotation": ": TypeAlias", "default_value": "dict[str, str | askai.core.processors.splitter.splitter_states.States]"}, {"fullname": "main.askai.core.processors.splitter.splitter_transitions.TRANSITIONS", "modulename": "main.askai.core.processors.splitter.splitter_transitions", "qualname": "TRANSITIONS", "kind": "variable", "doc": "<p></p>\n", "default_value": "[{&#x27;trigger&#x27;: &#x27;ev_pipeline_started&#x27;, &#x27;source&#x27;: STARTUP, &#x27;dest&#x27;: MODEL_SELECT}, {&#x27;trigger&#x27;: &#x27;ev_model_selected&#x27;, &#x27;source&#x27;: MODEL_SELECT, &#x27;dest&#x27;: TASK_SPLIT}, {&#x27;trigger&#x27;: &#x27;ev_direct_answer&#x27;, &#x27;source&#x27;: TASK_SPLIT, &#x27;dest&#x27;: ACC_CHECK}, {&#x27;trigger&#x27;: &#x27;ev_plan_created&#x27;, &#x27;source&#x27;: TASK_SPLIT, &#x27;dest&#x27;: EXECUTE_TASK}, {&#x27;trigger&#x27;: &#x27;ev_accuracy_check&#x27;, &#x27;source&#x27;: ACC_CHECK, &#x27;dest&#x27;: EXECUTE_TASK}, {&#x27;trigger&#x27;: &#x27;ev_task_executed&#x27;, &#x27;source&#x27;: EXECUTE_TASK, &#x27;dest&#x27;: ACC_CHECK}, {&#x27;trigger&#x27;: &#x27;ev_accuracy_passed&#x27;, &#x27;source&#x27;: ACC_CHECK, &#x27;dest&#x27;: EXECUTE_TASK, &#x27;conditions&#x27;: [&#x27;has_next&#x27;]}, {&#x27;trigger&#x27;: &#x27;ev_accuracy_passed&#x27;, &#x27;source&#x27;: ACC_CHECK, &#x27;dest&#x27;: WRAP_ANSWER, &#x27;unless&#x27;: [&#x27;has_next&#x27;]}, {&#x27;trigger&#x27;: &#x27;ev_accuracy_failed&#x27;, &#x27;source&#x27;: ACC_CHECK, &#x27;dest&#x27;: EXECUTE_TASK}, {&#x27;trigger&#x27;: &#x27;ev_accuracy_failed&#x27;, &#x27;source&#x27;: ACC_CHECK, &#x27;dest&#x27;: TASK_SPLIT, &#x27;unless&#x27;: [&#x27;has_next&#x27;]}, {&#x27;trigger&#x27;: &#x27;ev_refine_required&#x27;, &#x27;source&#x27;: ACC_CHECK, &#x27;dest&#x27;: EXECUTE_TASK, &#x27;conditions&#x27;: [&#x27;has_next&#x27;]}, {&#x27;trigger&#x27;: &#x27;ev_refine_required&#x27;, &#x27;source&#x27;: ACC_CHECK, &#x27;dest&#x27;: REFINE_ANSWER, &#x27;unless&#x27;: [&#x27;has_next&#x27;]}, {&#x27;trigger&#x27;: &#x27;ev_answer_refined&#x27;, &#x27;source&#x27;: REFINE_ANSWER, &#x27;dest&#x27;: WRAP_ANSWER}, {&#x27;trigger&#x27;: &#x27;ev_final_answer&#x27;, &#x27;source&#x27;: WRAP_ANSWER, &#x27;dest&#x27;: COMPLETE}, {&#x27;trigger&#x27;: &#x27;ev_task_complete&#x27;, &#x27;source&#x27;: TASK_SPLIT, &#x27;dest&#x27;: COMPLETE}]"}, {"fullname": "main.askai.core.processors.task_splitter", "modulename": "main.askai.core.processors.task_splitter", "kind": "module", "doc": "<p>@project: HsPyLib-AskAI\n@package: askai.core.router.router\n   @file: task_splitter.py\n@created: Mon, 01 Apr 2024\n @author: <B>H</B>ugo <B>S</B>aporetti <B>J</B>unior\n   @site: <a href=\"https://github.com/yorevs/askai\">https://github.com/yorevs/askai</a>\n@license: MIT - Please refer to <a href=\"https://opensource.org/licenses/MIT\">https://opensource.org/licenses/MIT</a></p>\n\n<p>Copyright (c) 2024, AskAI</p>\n"}, {"fullname": "main.askai.core.processors.task_splitter.AgentResponse", "modulename": "main.askai.core.processors.task_splitter", "qualname": "AgentResponse", "kind": "variable", "doc": "<p></p>\n", "annotation": ": TypeAlias", "default_value": "dict[str, typing.Any]"}, {"fullname": "main.askai.core.processors.task_splitter.TaskSplitter", "modulename": "main.askai.core.processors.task_splitter", "qualname": "TaskSplitter", "kind": "class", "doc": "<p>Processor to provide a divide and conquer set of tasks to fulfill an objective. This is responsible for the\norchestration and execution of the smaller tasks.</p>\n", "bases": "typing.Type"}, {"fullname": "main.askai.core.processors.task_splitter.TaskSplitter.__init__", "modulename": "main.askai.core.processors.task_splitter", "qualname": "TaskSplitter.__init__", "kind": "function", "doc": "<p>Invoke the class constructor or return the instance if it exists.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, {"fullname": "main.askai.core.processors.task_splitter.TaskSplitter.INSTANCE", "modulename": "main.askai.core.processors.task_splitter", "qualname": "TaskSplitter.INSTANCE", "kind": "variable", "doc": "<p></p>\n", "annotation": ": main.askai.core.processors.task_splitter.TaskSplitter"}, {"fullname": "main.askai.core.processors.task_splitter.TaskSplitter.RETRIABLE_ERRORS", "modulename": "main.askai.core.processors.task_splitter", "qualname": "TaskSplitter.RETRIABLE_ERRORS", "kind": "variable", "doc": "<p></p>\n", "annotation": ": tuple[typing.Type[Exception], ...]", "default_value": "(&lt;class &#x27;askai.exception.exceptions.InaccurateResponse&#x27;&gt;, &lt;class &#x27;hspylib.core.exception.exceptions.InvalidArgumentError&#x27;&gt;, &lt;class &#x27;pydantic_core._pydantic_core.ValidationError&#x27;&gt;)"}, {"fullname": "main.askai.core.processors.task_splitter.TaskSplitter.process", "modulename": "main.askai.core.processors.task_splitter", "qualname": "TaskSplitter.process", "kind": "function", "doc": "<p>Process the user question by splitting complex tasks into smaller single actionable tasks.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>question</strong>:  The user question to process.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">question</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">_</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.router", "modulename": "main.askai.core.router", "kind": "module", "doc": "<p>Package initialization.</p>\n"}, {"fullname": "main.askai.core.router.agent_tools", "modulename": "main.askai.core.router.agent_tools", "kind": "module", "doc": "<p>@project: HsPyLib-AskAI\n@package: askai.core.router\n   @file: agent_tools.py\n@created: Mon, 01 Apr 2024\n @author: <B>H</B>ugo <B>S</B>aporetti <B>J</B>unior\n   @site: <a href=\"https://github.com/yorevs/askai\">https://github.com/yorevs/askai</a>\n@license: MIT - Please refer to <a href=\"https://opensource.org/licenses/MIT\">https://opensource.org/licenses/MIT</a></p>\n\n<p>Copyright (c) 2024, AskAI</p>\n"}, {"fullname": "main.askai.core.router.agent_tools.AgentTools", "modulename": "main.askai.core.router.agent_tools", "qualname": "AgentTools", "kind": "class", "doc": "<p>This class serves as the toolkit for AskAI task agents, providing essential tools and functionalities required\nfor their tasks.</p>\n", "bases": "typing.Type"}, {"fullname": "main.askai.core.router.agent_tools.AgentTools.__init__", "modulename": "main.askai.core.router.agent_tools", "qualname": "AgentTools.__init__", "kind": "function", "doc": "<p>Invoke the class constructor or return the instance if it exists.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, {"fullname": "main.askai.core.router.agent_tools.AgentTools.INSTANCE", "modulename": "main.askai.core.router.agent_tools", "qualname": "AgentTools.INSTANCE", "kind": "variable", "doc": "<p></p>\n", "annotation": ": main.askai.core.router.agent_tools.AgentTools"}, {"fullname": "main.askai.core.router.agent_tools.AgentTools.RESERVED", "modulename": "main.askai.core.router.agent_tools", "qualname": "AgentTools.RESERVED", "kind": "variable", "doc": "<p></p>\n", "annotation": ": list[str]", "default_value": "[&#x27;tools&#x27;]"}, {"fullname": "main.askai.core.router.agent_tools.AgentTools.tools", "modulename": "main.askai.core.router.agent_tools", "qualname": "AgentTools.tools", "kind": "function", "doc": "<p>Return a cached list of LangChain base tools.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A list of BaseTool's instances available for use.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">langchain_core</span><span class=\"o\">.</span><span class=\"n\">tools</span><span class=\"o\">.</span><span class=\"n\">base</span><span class=\"o\">.</span><span class=\"n\">BaseTool</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.router.agent_tools.AgentTools.available_tools", "modulename": "main.askai.core.router.agent_tools", "qualname": "AgentTools.available_tools", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "main.askai.core.router.agent_tools.AgentTools.browse", "modulename": "main.askai.core.router.agent_tools", "qualname": "AgentTools.browse", "kind": "function", "doc": "<p>Use this tool to browse the internet for the latest news and current events, particularly when up-to-date\ninformation is needed quickly. This tool is especially effective for accessing the most recent data available\nonline.\nUsage: <code>browse(search_query)</code></p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>search_query</strong>:  The user search query as a string. It's important to keep the user keywords as is.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A string containing the results of the web search, or None if no relevant results are found.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">search_query</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.router.agent_tools.AgentTools.open_url", "modulename": "main.askai.core.router.agent_tools", "qualname": "AgentTools.open_url", "kind": "function", "doc": "<p>Use this tool to open the browser landing at a specific website, specified by the given URL. This is not\nuseful for searching the web.\nUsage: <code>open_url(url)</code></p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>url</strong>:  The URL to be opened.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A string telling whether the URL was successfully opened or not.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">url</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.router.agent_tools.AgentTools.query_output", "modulename": "main.askai.core.router.agent_tools", "qualname": "AgentTools.query_output", "kind": "function", "doc": "<p>Use this tool to analyze textual content, and to identify files, folders, and applications. This\ntool is NOT designed to directly read or extract file or folder contents.\nUsage: <code>query_output(output_query)</code></p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>output_query</strong>:  The query regarding the output. Use \"Identify <file types, names, or textual content>\".</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A string containing the results of the analysis based on the query.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">output_query</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.router.agent_tools.AgentTools.image_captioner", "modulename": "main.askai.core.router.agent_tools", "qualname": "AgentTools.image_captioner", "kind": "function", "doc": "<p>Use this tool to generate a textual description of visual content, such as image files.\nUsage: <code>image_captioner(image_path)</code></p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>image_path</strong>:  The absolute path of the image file to be analyzed.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A string containing the generated caption describing the image.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">image_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.router.agent_tools.AgentTools.webcam_capturer", "modulename": "main.askai.core.router.agent_tools", "qualname": "AgentTools.webcam_capturer", "kind": "function", "doc": "<p>Capture a photo using the webcam, and save it locally. This tool is useful for taking photos, detect people's\nfaces, and, describing what is in front of the webcam.\nUsage: <code>webcam_capturer(photo_name, detect_faces)</code></p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>photo_name</strong>:  The name of the photo file (without the extension). If None, a default name will be used.</li>\n<li><strong>detect_faces</strong>:  Whether to detect and describe all faces in the photo (default is False).</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The file path of the saved JPEG image.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">photo_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">detect_faces</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.router.agent_tools.AgentTools.webcam_identifier", "modulename": "main.askai.core.router.agent_tools", "qualname": "AgentTools.webcam_identifier", "kind": "function", "doc": "<p>Identify the person in front of the webcam using a pre-stored set of faces and provide a description. This\ntool is useful for recognizing individuals and generating descriptions based on pre-stored facial data.\nUsage: <code>webcam_identifier()</code></p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A string containing the identification and description of the person.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.router.agent_tools.AgentTools.generate_content", "modulename": "main.askai.core.router.agent_tools", "qualname": "AgentTools.generate_content", "kind": "function", "doc": "<p>Use this tool to generate various types of content, such as code, text, images, etc. This tool processes\ndescriptive instructions to create the specified content type and can optionally save it to a file.\nUsage: <code>generate_content(instructions, mime_type, filepath)</code></p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>instructions</strong>:  Descriptive instructions on how to create the content (not the content itself).</li>\n<li><strong>mime_type</strong>:  The MIME type representing the type of content to generate.</li>\n<li><strong>filepath</strong>:  The optional file path where the generated content will be saved.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The generated content as a string.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">instructions</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">mime_type</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">filepath</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">pathlib</span><span class=\"o\">.</span><span class=\"n\">Path</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.router.agent_tools.AgentTools.save_content", "modulename": "main.askai.core.router.agent_tools", "qualname": "AgentTools.save_content", "kind": "function", "doc": "<p>Save previously generated content to disk, such as programs, scripts, text, images, etc. This tool is used\nto persist content that was generated using the <code>generate_content</code> tool.\nUsage: <code>save_content(filepath)</code></p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>filepath</strong>:  The path where you want to save the content.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The absolute path name of the saved file.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">filepath</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">pathlib</span><span class=\"o\">.</span><span class=\"n\">Path</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.router.agent_tools.AgentTools.direct_answer", "modulename": "main.askai.core.router.agent_tools", "qualname": "AgentTools.direct_answer", "kind": "function", "doc": "<p>Provide and display text as a direct answer to the user. This tool is used to present one or more pieces of\ntext directly to the user.\nUsage: <code>direct_answer(text, ...repeat N times)</code></p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>texts</strong>:  A list of texts or a single text string to be displayed.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A string containing all provided texts concatenated together.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">texts</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.router.agent_tools.AgentTools.list_tool", "modulename": "main.askai.core.router.agent_tools", "qualname": "AgentTools.list_tool", "kind": "function", "doc": "<p>Access and list the contents of a specified folder. This tool is used to retrieve the contents of a folder,\noptionally filtering the results based on specified criteria.\nUsage: <code>list_tool(folder, filters)</code></p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>folder</strong>:  The absolute path of the folder whose contents you wish to list or access.</li>\n<li><strong>filters: Optional parameter</strong>:  A comma-separated list of file globs to filter results (e.g., \"<em>.</em>, *.txt\").</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A string listing the contents of the folder, filtered by the provided criteria if applicable.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">folder</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">filters</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.router.agent_tools.AgentTools.open_tool", "modulename": "main.askai.core.router.agent_tools", "qualname": "AgentTools.open_tool", "kind": "function", "doc": "<p>Open and display the content of files, or playback media files, and also execute applications. This tool is\nused to open a file, folder, or application, read its contents, or play back media files.\nUsage: <code>open_tool(path_name)</code></p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>path_name</strong>:  The absolute path of the file, folder, or application to be opened.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The output generated by the open command, such as file content or playback status.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">path_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.router.agent_tools.AgentTools.summarize", "modulename": "main.askai.core.router.agent_tools", "qualname": "AgentTools.summarize", "kind": "function", "doc": "<p>Summarize the contents of files and folders based on user requests. This tool should be used only when the\nuser explicitly requests a summary of files and folders, not for summarizing textual content.\nUsage: <code>summarize(folder, glob)</code></p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>folder</strong>:  The base path of the folder containing the files to be summarized.</li>\n<li><strong>glob</strong>:  The glob expression to specify which files should be included in the summary.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A string containing the summary of the specified files and folders.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">folder</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">glob</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.router.agent_tools.AgentTools.terminal", "modulename": "main.askai.core.router.agent_tools", "qualname": "AgentTools.terminal", "kind": "function", "doc": "<p>Execute terminal commands or process user-provided commands using the specified shell. This tool is used to\nrun commands in a terminal environment based on the provided shell type.\nUsage: <code>terminal(shell_type, command)</code></p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>shell_type</strong>:  The type of shell to use (e.g., bash, zsh, powershell, etc.).</li>\n<li><strong>command</strong>:  The command or set of commands to execute in the terminal.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The output of the executed terminal command(s) as a string.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">shell_type</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">command</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.router.agent_tools.AgentTools.shutdown", "modulename": "main.askai.core.router.agent_tools", "qualname": "AgentTools.shutdown", "kind": "function", "doc": "<p>Conclude the interaction based on the user's intent to end the session (e.g., bye, exit). This tool is used\nto gracefully shut down the interaction when the user indicates a desire to terminate the session.\nUsage: <code>shutdown(reason)</code></p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>reason</strong>:  The reason for terminating the session.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">reason</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.router.evaluation", "modulename": "main.askai.core.router.evaluation", "kind": "module", "doc": "<p>@project: HsPyLib-AskAI\n@package: askai.core.router.evaluation\n   @file: analysis.py\n@created: Fri, 03 Apr 2024\n @author: <B>H</B>ugo <B>S</B>aporetti <B>J</B>unior\n   @site: <a href=\"https://github.com/yorevs/askai\">https://github.com/yorevs/askai</a>\n@license: MIT - Please refer to <a href=\"https://opensource.org/licenses/MIT\">https://opensource.org/licenses/MIT</a></p>\n\n<p>Copyright (c) 2024, AskAI</p>\n"}, {"fullname": "main.askai.core.router.evaluation.EVALUATION_GUIDE", "modulename": "main.askai.core.router.evaluation", "qualname": "EVALUATION_GUIDE", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;**Accuracy Evaluation Guidelines:**\\n\\n1. Analyze past responses to ensure accuracy.\\n2. Regularly self-critique overall responses.\\n3. Reflect on past strategies to refine your approach.\\n4. Experiment with different methods or solutions.&#x27;"}, {"fullname": "main.askai.core.router.evaluation.RAG", "modulename": "main.askai.core.router.evaluation", "qualname": "RAG", "kind": "variable", "doc": "<p></p>\n", "annotation": ": askai.core.component.rag_provider.RAGProvider", "default_value": "&lt;askai.core.component.rag_provider.RAGProvider object&gt;"}, {"fullname": "main.askai.core.router.evaluation.eval_response", "modulename": "main.askai.core.router.evaluation", "qualname": "eval_response", "kind": "function", "doc": "<p>Check whether the AI's response to the question meets the required accuracy.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>question</strong>:  The user's question.</li>\n<li><strong>ai_response</strong>:  The AI's response to be analyzed for accuracy.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The accuracy classification of the AI's response as an AccResponse enum value.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">question</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">ai_response</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">askai</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">acc_response</span><span class=\"o\">.</span><span class=\"n\">AccResponse</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.router.evaluation.resolve_x_refs", "modulename": "main.askai.core.router.evaluation", "qualname": "resolve_x_refs", "kind": "function", "doc": "<p>Replace all cross-references with their actual values.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>ref_name</strong>:  The name of the cross-reference or variable to resolve.</li>\n<li><strong>context</strong>:  The context in which to analyze and resolve the references (optional).</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The string with all cross-references replaced by their corresponding values.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">ref_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">context</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.router.model_selector", "modulename": "main.askai.core.router.model_selector", "kind": "module", "doc": "<p>@project: HsPyLib-AskAI\n@package: askai.core.router.model_selector\n   @file: model_selector.py\n@created: Tue, 24 Jun 2024\n @author: <B>H</B>ugo <B>S</B>aporetti <B>J</B>unior\n   @site: <a href=\"https://github.com/yorevs/askai\">https://github.com/yorevs/askai</a>\n@license: MIT - Please refer to <a href=\"https://opensource.org/licenses/MIT\">https://opensource.org/licenses/MIT</a></p>\n\n<p>Copyright (c) 2024, AskAI</p>\n"}, {"fullname": "main.askai.core.router.model_selector.ModelSelector", "modulename": "main.askai.core.router.model_selector", "qualname": "ModelSelector", "kind": "class", "doc": "<p>Utility class to query the LLM for selecting the appropriate model to process user requests. This class\nfacilitates the selection of the most suitable model based on the nature of the user's query, ensuring optimal\nprocessing and response generation.</p>\n", "bases": "typing.Type"}, {"fullname": "main.askai.core.router.model_selector.ModelSelector.__init__", "modulename": "main.askai.core.router.model_selector", "qualname": "ModelSelector.__init__", "kind": "function", "doc": "<p>Invoke the class constructor or return the instance if it exists.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, {"fullname": "main.askai.core.router.model_selector.ModelSelector.INSTANCE", "modulename": "main.askai.core.router.model_selector", "qualname": "ModelSelector.INSTANCE", "kind": "variable", "doc": "<p></p>\n", "annotation": ": main.askai.core.router.model_selector.ModelSelector", "default_value": "&lt;main.askai.core.router.model_selector.ModelSelector object&gt;"}, {"fullname": "main.askai.core.router.model_selector.ModelSelector.model_template", "modulename": "main.askai.core.router.model_selector", "qualname": "ModelSelector.model_template", "kind": "variable", "doc": "<p>Retrieve the Routing Model Template.</p>\n", "annotation": ": langchain_core.prompts.prompt.PromptTemplate"}, {"fullname": "main.askai.core.router.model_selector.ModelSelector.select_model", "modulename": "main.askai.core.router.model_selector", "qualname": "ModelSelector.select_model", "kind": "function", "doc": "<p>Select the appropriate response model based on the given human question.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>question</strong>:  The user's query used to determine the most suitable model.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>An instance of ModelResult representing the selected model.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">question</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">askai</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">model_result</span><span class=\"o\">.</span><span class=\"n\">ModelResult</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.router.model_selector.selector", "modulename": "main.askai.core.router.model_selector", "qualname": "selector", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;main.askai.core.router.model_selector.ModelSelector object&gt;"}, {"fullname": "main.askai.core.router.task_agent", "modulename": "main.askai.core.router.task_agent", "kind": "module", "doc": "<p>@project: HsPyLib-AskAI\n@package: askai.core.router.task_agent\n   @file: task_agent.py\n@created: Tue, 24 Jun 2024\n @author: <B>H</B>ugo <B>S</B>aporetti <B>J</B>unior\n   @site: <a href=\"https://github.com/yorevs/askai\">https://github.com/yorevs/askai</a>\n@license: MIT - Please refer to <a href=\"https://opensource.org/licenses/MIT\">https://opensource.org/licenses/MIT</a></p>\n\n<p>Copyright (c) 2024, AskAI</p>\n"}, {"fullname": "main.askai.core.router.task_agent.TaskAgent", "modulename": "main.askai.core.router.task_agent", "qualname": "TaskAgent", "kind": "class", "doc": "<p>A LangChain agent responsible for executing router tasks using the available tools. This agent manages and\nperforms tasks by leveraging various tools, ensuring efficient and accurate task execution in the routing process.</p>\n", "bases": "typing.Type"}, {"fullname": "main.askai.core.router.task_agent.TaskAgent.__init__", "modulename": "main.askai.core.router.task_agent", "qualname": "TaskAgent.__init__", "kind": "function", "doc": "<p>Invoke the class constructor or return the instance if it exists.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, {"fullname": "main.askai.core.router.task_agent.TaskAgent.INSTANCE", "modulename": "main.askai.core.router.task_agent", "qualname": "TaskAgent.INSTANCE", "kind": "variable", "doc": "<p></p>\n", "annotation": ": main.askai.core.router.task_agent.TaskAgent"}, {"fullname": "main.askai.core.router.task_agent.TaskAgent.agent_template", "modulename": "main.askai.core.router.task_agent", "qualname": "TaskAgent.agent_template", "kind": "variable", "doc": "<p>Retrieve the Structured Agent Template for use in the chat agent. This template is used to structure the\ninteractions of the chat agent.\nReference: <a href=\"https://smith.langchain.com/hub/hwchase17/structured-chat-agent\">https://smith.langchain.com/hub/hwchase17/structured-chat-agent</a></p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>An instance of ChatPromptTemplate representing the structured agent template.</p>\n</blockquote>\n", "annotation": ": langchain_core.prompts.chat.ChatPromptTemplate"}, {"fullname": "main.askai.core.router.task_agent.TaskAgent.invoke", "modulename": "main.askai.core.router.task_agent", "qualname": "TaskAgent.invoke", "kind": "function", "doc": "<p>Invoke the agent to respond to the given query using the specified action plan.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>task</strong>:  The AI task that outlines the steps to generate the response.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The agent's response as a string.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">task</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.router.tools", "modulename": "main.askai.core.router.tools", "kind": "module", "doc": "<p>Package initialization.</p>\n"}, {"fullname": "main.askai.core.router.tools.analysis", "modulename": "main.askai.core.router.tools.analysis", "kind": "module", "doc": "<p>@project: HsPyLib-AskAI\n@package: askai.core.router.tools.analysis\n   @file: analysis.py\n@created: Mon, 01 Apr 2024\n @author: <B>H</B>ugo <B>S</B>aporetti <B>J</B>unior\n   @site: <a href=\"https://github.com/yorevs/askai\">https://github.com/yorevs/askai</a>\n@license: MIT - Please refer to <a href=\"https://opensource.org/licenses/MIT\">https://opensource.org/licenses/MIT</a></p>\n\n<p>Copyright (c) 2024, AskAI</p>\n"}, {"fullname": "main.askai.core.router.tools.analysis.query_output", "modulename": "main.askai.core.router.tools.analysis", "qualname": "query_output", "kind": "function", "doc": "<p>Handle 'Text analysis', invoking: analyze(question: str). Analyze the context and answer the question.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>query</strong>:  The question about the content to be analyzed.</li>\n<li><strong>context</strong>:  The context of the question.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">query</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">context</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.router.tools.browser", "modulename": "main.askai.core.router.tools.browser", "kind": "module", "doc": "<p>@project: HsPyLib-AskAI\n@package: askai.core.router.tools.browser\n   @file: browser.py\n@created: Mon, 01 Apr 2024\n @author: <B>H</B>ugo <B>S</B>aporetti <B>J</B>unior\n   @site: <a href=\"https://github.com/yorevs/askai\">https://github.com/yorevs/askai</a>\n@license: MIT - Please refer to <a href=\"https://opensource.org/licenses/MIT\">https://opensource.org/licenses/MIT</a></p>\n\n<p>Copyright (c) 2024, AskAI</p>\n"}, {"fullname": "main.askai.core.router.tools.browser.open_url", "modulename": "main.askai.core.router.tools.browser", "qualname": "open_url", "kind": "function", "doc": "<p>Opens a URL specified by the given path name.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>url</strong>:  The URL to be opened.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A string telling whether the URL was successfully opened or not.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">url</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.router.tools.browser.browse", "modulename": "main.askai.core.router.tools.browser", "qualname": "browse", "kind": "function", "doc": "<p>Fetch the information from the Internet.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>query</strong>:  The search query.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">query</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.router.tools.general", "modulename": "main.askai.core.router.tools.general", "kind": "module", "doc": "<p>@project: HsPyLib-AskAI\n@package: askai.core.router.tools.general\n   @file: general.py\n@created: Mon, 01 Apr 2024\n @author: <B>H</B>ugo <B>S</B>aporetti <B>J</B>unior\n   @site: <a href=\"https://github.com/yorevs/askai\">https://github.com/yorevs/askai</a>\n@license: MIT - Please refer to <a href=\"https://opensource.org/licenses/MIT\">https://opensource.org/licenses/MIT</a></p>\n\n<p>Copyright (c) 2024, AskAI</p>\n"}, {"fullname": "main.askai.core.router.tools.general.display_tool", "modulename": "main.askai.core.router.tools.general", "qualname": "display_tool", "kind": "function", "doc": "<p>Display the given texts using markdown.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>texts</strong>:  The list of texts to be displayed.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">texts</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.router.tools.general.final_answer", "modulename": "main.askai.core.router.tools.general", "qualname": "final_answer", "kind": "function", "doc": "<p>Provide the final response to the user.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>persona_prompt</strong>:  The persona prompt to be used.</li>\n<li><strong>input_variables</strong>:  The prompt input variables.</li>\n<li><strong>prompt_args</strong>:  The prompt input arguments.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">persona_prompt</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">input_variables</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">prompt_args</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.router.tools.generation", "modulename": "main.askai.core.router.tools.generation", "kind": "module", "doc": "<p>@project: HsPyLib-AskAI\n@package: askai.core.router.tools.generation\n   @file: generation.py\n@created: Mon, 01 Apr 2024\n @author: <B>H</B>ugo <B>S</B>aporetti <B>J</B>unior\n   @site: <a href=\"https://github.com/yorevs/askai\">https://github.com/yorevs/askai</a>\n@license: MIT - Please refer to <a href=\"https://opensource.org/licenses/MIT\">https://opensource.org/licenses/MIT</a></p>\n\n<p>Copyright (c) 2024, AskAI</p>\n"}, {"fullname": "main.askai.core.router.tools.generation.generate_content", "modulename": "main.askai.core.router.tools.generation", "qualname": "generate_content", "kind": "function", "doc": "<p>Generate content using the AI. It's a general function now, but it can be specialized afterwards.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>instructions</strong>:  The instructions for generating the content.</li>\n<li><strong>mime_type</strong>:  The generated content type (use MIME types).</li>\n<li><strong>filepath</strong>:  Optional file path for saving the content.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">instructions</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">mime_type</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">filepath</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">pathlib</span><span class=\"o\">.</span><span class=\"n\">Path</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.router.tools.generation.save_content", "modulename": "main.askai.core.router.tools.generation", "qualname": "save_content", "kind": "function", "doc": "<p>Save any generated context into a file.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>filepath</strong>:  The path where you want to save the content.</li>\n<li><strong>content</strong>:  Optional content to be saved. If not provided, it will get from the last generated context.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">filepath</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">pathlib</span><span class=\"o\">.</span><span class=\"n\">Path</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">content</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"o\">~</span><span class=\"n\">AnyStr</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.router.tools.summarization", "modulename": "main.askai.core.router.tools.summarization", "kind": "module", "doc": "<p>@project: HsPyLib-AskAI\n@package: askai.core.router.tools.summarization\n   @file: summarization.py\n@created: Mon, 01 Apr 2024\n @author: <B>H</B>ugo <B>S</B>aporetti <B>J</B>unior\n   @site: <a href=\"https://github.com/yorevs/askai\">https://github.com/yorevs/askai</a>\n@license: MIT - Please refer to <a href=\"https://opensource.org/licenses/MIT\">https://opensource.org/licenses/MIT</a></p>\n\n<p>Copyright (c) 2024, AskAI</p>\n"}, {"fullname": "main.askai.core.router.tools.summarization.summarize", "modulename": "main.askai.core.router.tools.summarization", "qualname": "summarize", "kind": "function", "doc": "<p>Summarize files and folders.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>base_folder</strong>:  The base folder to be summarized.</li>\n<li><strong>glob</strong>:  The glob to match the files to be summarized.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">base_folder</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">glob</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.router.tools.terminal", "modulename": "main.askai.core.router.tools.terminal", "kind": "module", "doc": "<p>@project: HsPyLib-AskAI\n@package: askai.core.router.tools.terminal\n   @file: terminal.py\n@created: Mon, 01 Apr 2024\n @author: <B>H</B>ugo <B>S</B>aporetti <B>J</B>unior\n   @site: <a href=\"https://github.com/yorevs/askai\">https://github.com/yorevs/askai</a>\n@license: MIT - Please refer to <a href=\"https://opensource.org/licenses/MIT\">https://opensource.org/licenses/MIT</a></p>\n\n<p>Copyright (c) 2024, AskAI</p>\n"}, {"fullname": "main.askai.core.router.tools.terminal.list_contents", "modulename": "main.askai.core.router.tools.terminal", "qualname": "list_contents", "kind": "function", "doc": "<p>List the contents of a folder.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>folder</strong>:  The folder to list contents from.</li>\n<li><strong>filters</strong>:  The optional listing filters (file glob).</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A list of the contents in the folder that match the filters.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">folder</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">filters</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.router.tools.terminal.open_command", "modulename": "main.askai.core.router.tools.terminal", "qualname": "open_command", "kind": "function", "doc": "<p>Open the specified path, regardless if it's a file, folder or application.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>path_name</strong>:  The file path to open.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A string telling whether the path was successfully opened or not.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">path_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.router.tools.terminal.execute_command", "modulename": "main.askai.core.router.tools.terminal", "qualname": "execute_command", "kind": "function", "doc": "<p>Execute a terminal command using the specified shell.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>shell</strong>:  The shell type to be used.</li>\n<li><strong>command_line</strong>:  The command line to be executed.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The output of the executed command.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">shell</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">command_line</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.router.tools.terminal.execute_bash", "modulename": "main.askai.core.router.tools.terminal", "qualname": "execute_bash", "kind": "function", "doc": "<p>Execute the provided command line using bash.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>command_line</strong>:  The command line to be executed in bash.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A tuple containing a boolean indicating success or failure and the output or error message.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">command_line</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.router.tools.vision", "modulename": "main.askai.core.router.tools.vision", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "main.askai.core.router.tools.vision.HFModel", "modulename": "main.askai.core.router.tools.vision", "qualname": "HFModel", "kind": "class", "doc": "<p>Available Hugging Face models</p>\n", "bases": "hspylib.core.enums.enumeration.Enumeration"}, {"fullname": "main.askai.core.router.tools.vision.HFModel.SF_BLIP_BASE", "modulename": "main.askai.core.router.tools.vision", "qualname": "HFModel.SF_BLIP_BASE", "kind": "variable", "doc": "<p></p>\n", "default_value": "SF_BLIP_BASE"}, {"fullname": "main.askai.core.router.tools.vision.HFModel.SF_BLIP_LARGE", "modulename": "main.askai.core.router.tools.vision", "qualname": "HFModel.SF_BLIP_LARGE", "kind": "variable", "doc": "<p></p>\n", "default_value": "SF_BLIP_LARGE"}, {"fullname": "main.askai.core.router.tools.vision.HFModel.default", "modulename": "main.askai.core.router.tools.vision", "qualname": "HFModel.default", "kind": "function", "doc": "<p>Return the default HF model.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"n\">main</span><span class=\"o\">.</span><span class=\"n\">askai</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">router</span><span class=\"o\">.</span><span class=\"n\">tools</span><span class=\"o\">.</span><span class=\"n\">vision</span><span class=\"o\">.</span><span class=\"n\">HFModel</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.router.tools.vision.offline_captioner", "modulename": "main.askai.core.router.tools.vision", "qualname": "offline_captioner", "kind": "function", "doc": "<p>This tool is used to describe an image.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>path_name</strong>:  The path of the image to describe.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">path_name</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">pathlib</span><span class=\"o\">.</span><span class=\"n\">Path</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.router.tools.vision.image_captioner", "modulename": "main.askai.core.router.tools.vision", "qualname": "image_captioner", "kind": "function", "doc": "<p>This tool is used to describe an image.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>path_name</strong>:  The path of the image to describe.</li>\n<li><strong>load_dir</strong>:  Optional directory path for loading related resources.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A string containing the description of the image, or None if the description could not be generated.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">path_name</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">pathlib</span><span class=\"o\">.</span><span class=\"n\">Path</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">load_dir</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">pathlib</span><span class=\"o\">.</span><span class=\"n\">Path</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.router.tools.vision.parse_caption", "modulename": "main.askai.core.router.tools.vision", "qualname": "parse_caption", "kind": "function", "doc": "<p>Parse the given image caption.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>image_caption</strong>:  The caption to parse.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The parsed caption as a string.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">image_caption</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.router.tools.vision.take_screenshot", "modulename": "main.askai.core.router.tools.vision", "qualname": "take_screenshot", "kind": "function", "doc": "<p>Takes a screenshot and saves it to the specified path.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>path_name</strong>:  The path where the screenshot will be saved.</li>\n<li><strong>load_dir</strong>:  Optional directory to save the screenshot.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The path to the saved screenshot.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">path_name</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">pathlib</span><span class=\"o\">.</span><span class=\"n\">Path</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">load_dir</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">pathlib</span><span class=\"o\">.</span><span class=\"n\">Path</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.router.tools.webcam", "modulename": "main.askai.core.router.tools.webcam", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "main.askai.core.router.tools.webcam.webcam_capturer", "modulename": "main.askai.core.router.tools.webcam", "qualname": "webcam_capturer", "kind": "function", "doc": "<p>Capture a photo using the webcam and save it locally. Optionally detect faces in the photo.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>photo_name</strong>:  The name of the photo file. If None, a default name will be used.</li>\n<li><strong>detect_faces</strong>:  Whether to detect faces in the photo.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The file path of the saved photo.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">photo_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">detect_faces</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.router.tools.webcam.webcam_identifier", "modulename": "main.askai.core.router.tools.webcam", "qualname": "webcam_identifier", "kind": "function", "doc": "<p>Identifies the person in front of the webcam and provides a description of them.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>max_distance</strong>:  The maximum distance for identifying the person based on image similarity.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A description of the identified person.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">max_distance</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mf\">0.7</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.support", "modulename": "main.askai.core.support", "kind": "module", "doc": "<p>Package initialization.</p>\n"}, {"fullname": "main.askai.core.support.chat_context", "modulename": "main.askai.core.support.chat_context", "kind": "module", "doc": "<p>@project: HsPyLib-AskAI\n@package: askai.core.support.chat_context\n   @file: chat_context.py\n@created: Fri, 28 Feb 2024\n @author: <B>H</B>ugo <B>S</B>aporetti <B>J</B>unior\n   @site: <a href=\"https://github.com/yorevs/askai\">https://github.com/yorevs/askai</a>\n@license: MIT - Please refer to <a href=\"https://opensource.org/licenses/MIT\">https://opensource.org/licenses/MIT</a></p>\n\n<p>Copyright (c) 2024, AskAI</p>\n"}, {"fullname": "main.askai.core.support.chat_context.ChatRoles", "modulename": "main.askai.core.support.chat_context", "qualname": "ChatRoles", "kind": "variable", "doc": "<p></p>\n", "annotation": ": TypeAlias", "default_value": "Literal[&#x27;system&#x27;, &#x27;human&#x27;, &#x27;assistant&#x27;]"}, {"fullname": "main.askai.core.support.chat_context.ContextRaw", "modulename": "main.askai.core.support.chat_context", "qualname": "ContextRaw", "kind": "variable", "doc": "<p></p>\n", "annotation": ": TypeAlias", "default_value": "list[dict[str, str]]"}, {"fullname": "main.askai.core.support.chat_context.LangChainContext", "modulename": "main.askai.core.support.chat_context", "qualname": "LangChainContext", "kind": "variable", "doc": "<p></p>\n", "annotation": ": TypeAlias", "default_value": "list[tuple[str, str]]"}, {"fullname": "main.askai.core.support.chat_context.ContextEntry", "modulename": "main.askai.core.support.chat_context", "qualname": "ContextEntry", "kind": "class", "doc": "<p>ContextEntry(role, content)</p>\n", "bases": "builtins.tuple"}, {"fullname": "main.askai.core.support.chat_context.ContextEntry.__init__", "modulename": "main.askai.core.support.chat_context", "qualname": "ContextEntry.__init__", "kind": "function", "doc": "<p>Create new instance of ContextEntry(role, content)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">role</span>, </span><span class=\"param\"><span class=\"n\">content</span></span>)</span>"}, {"fullname": "main.askai.core.support.chat_context.ContextEntry.role", "modulename": "main.askai.core.support.chat_context", "qualname": "ContextEntry.role", "kind": "variable", "doc": "<p>Alias for field number 0</p>\n"}, {"fullname": "main.askai.core.support.chat_context.ContextEntry.content", "modulename": "main.askai.core.support.chat_context", "qualname": "ContextEntry.content", "kind": "variable", "doc": "<p>Alias for field number 1</p>\n"}, {"fullname": "main.askai.core.support.chat_context.ChatContext", "modulename": "main.askai.core.support.chat_context", "qualname": "ChatContext", "kind": "class", "doc": "<p>Provide a chat context helper for AI engines.</p>\n"}, {"fullname": "main.askai.core.support.chat_context.ChatContext.__init__", "modulename": "main.askai.core.support.chat_context", "qualname": "ChatContext.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">token_limit</span><span class=\"p\">:</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"n\">max_context_size</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span>)</span>"}, {"fullname": "main.askai.core.support.chat_context.ChatContext.LANGCHAIN_ROLE_MAP", "modulename": "main.askai.core.support.chat_context", "qualname": "ChatContext.LANGCHAIN_ROLE_MAP", "kind": "variable", "doc": "<p></p>\n", "annotation": ": dict", "default_value": "{&#x27;human&#x27;: &lt;class &#x27;langchain_core.messages.human.HumanMessage&#x27;&gt;, &#x27;system&#x27;: &lt;class &#x27;langchain_core.messages.system.SystemMessage&#x27;&gt;, &#x27;assistant&#x27;: &lt;class &#x27;langchain_core.messages.ai.AIMessage&#x27;&gt;}"}, {"fullname": "main.askai.core.support.chat_context.ChatContext.of", "modulename": "main.askai.core.support.chat_context", "qualname": "ChatContext.of", "kind": "function", "doc": "<p>Create a chat context from a list of context entries formatted as <ROLE: MSG>.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>context</strong>:  The initial list of chat context entries.</li>\n<li><strong>token_limit</strong>:  The maximum number of tokens allowed by the active engine's model.</li>\n<li><strong>max_context_size</strong>:  The maximum allowable size of the context (window size).</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A ChatContext instance created from the provided parameters.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">context</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">token_limit</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">max_context_size</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">main</span><span class=\"o\">.</span><span class=\"n\">askai</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">support</span><span class=\"o\">.</span><span class=\"n\">chat_context</span><span class=\"o\">.</span><span class=\"n\">ChatContext</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.support.chat_context.ChatContext.keys", "modulename": "main.askai.core.support.chat_context", "qualname": "ChatContext.keys", "kind": "variable", "doc": "<p></p>\n", "annotation": ": list[~AnyStr]"}, {"fullname": "main.askai.core.support.chat_context.ChatContext.max_context_size", "modulename": "main.askai.core.support.chat_context", "qualname": "ChatContext.max_context_size", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "main.askai.core.support.chat_context.ChatContext.token_limit", "modulename": "main.askai.core.support.chat_context", "qualname": "ChatContext.token_limit", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "main.askai.core.support.chat_context.ChatContext.push", "modulename": "main.askai.core.support.chat_context", "qualname": "ChatContext.push", "kind": "function", "doc": "<p>Push a context message to the chat with the specified role.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>key</strong>:  The identifier for the context message.</li>\n<li><strong>content</strong>:  The content of the message to push.</li>\n<li><strong>role</strong>:  The role associated with the message (default is \"human\").</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The updated chat context.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">content</span><span class=\"p\">:</span> <span class=\"n\">Any</span>,</span><span class=\"param\">\t<span class=\"n\">role</span><span class=\"p\">:</span> <span class=\"n\">Literal</span><span class=\"p\">[</span><span class=\"s1\">&#39;system&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;human&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;assistant&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;human&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.support.chat_context.ChatContext.get", "modulename": "main.askai.core.support.chat_context", "qualname": "ChatContext.get", "kind": "function", "doc": "<p>Retrieve a context message identified by the specified key.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>key</strong>:  The identifier for the context message.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The context message associated with the key.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.support.chat_context.ChatContext.set", "modulename": "main.askai.core.support.chat_context", "qualname": "ChatContext.set", "kind": "function", "doc": "<p>Set the context message in the chat with the specified role.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>key</strong>:  The identifier for the context message.</li>\n<li><strong>content</strong>:  The content of the message to set.</li>\n<li><strong>role</strong>:  The role associated with the message (default is \"human\").</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The updated chat context.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">content</span><span class=\"p\">:</span> <span class=\"n\">Any</span>,</span><span class=\"param\">\t<span class=\"n\">role</span><span class=\"p\">:</span> <span class=\"n\">Literal</span><span class=\"p\">[</span><span class=\"s1\">&#39;system&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;human&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;assistant&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;human&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.support.chat_context.ChatContext.remove", "modulename": "main.askai.core.support.chat_context", "qualname": "ChatContext.remove", "kind": "function", "doc": "<p>Remove a context message from the chat at the specified index.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>key</strong>:  The identifier for the context message list.</li>\n<li><strong>index</strong>:  The position of the message to remove within the list.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The removed message if successful, otherwise None.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">index</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.support.chat_context.ChatContext.length", "modulename": "main.askai.core.support.chat_context", "qualname": "ChatContext.length", "kind": "function", "doc": "<p>Return the length of the context identified by the specified key.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>key</strong>:  The identifier for the context.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The length of the context (e.g., number of content entries).</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.support.chat_context.ChatContext.join", "modulename": "main.askai.core.support.chat_context", "qualname": "ChatContext.join", "kind": "function", "doc": "<p>Join multiple contexts identified by the specified keys.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>keys</strong>:  The identifiers for the contexts to join.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The combined chat context.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">keys</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.support.chat_context.ChatContext.flat", "modulename": "main.askai.core.support.chat_context", "qualname": "ChatContext.flat", "kind": "function", "doc": "<p>Flatten multiple contexts identified by the specified keys into a single chat history.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>keys</strong>:  The identifiers for the contexts to flatten.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The flattened chat message history.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"o\">*</span><span class=\"n\">keys</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">langchain_core</span><span class=\"o\">.</span><span class=\"n\">chat_history</span><span class=\"o\">.</span><span class=\"n\">InMemoryChatMessageHistory</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.support.chat_context.ChatContext.clear", "modulename": "main.askai.core.support.chat_context", "qualname": "ChatContext.clear", "kind": "function", "doc": "<p>Clear all chat contexts specified by the provided keys.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>keys</strong>:  The identifiers for the contexts to clear.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The number of contexts that were cleared.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">keys</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.support.chat_context.ChatContext.forget", "modulename": "main.askai.core.support.chat_context", "qualname": "ChatContext.forget", "kind": "function", "doc": "<p>Forget all entries pushed to the chat context for the specified keys.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>keys</strong>:  The identifiers for the contexts to forget.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">keys</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.support.chat_context.ChatContext.size", "modulename": "main.askai.core.support.chat_context", "qualname": "ChatContext.size", "kind": "function", "doc": "<p>Return the number of entries in the context specified by the given key.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>key</strong>:  The identifier for the context.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The number of entries in the context.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.support.chat_context.ChatContext.save", "modulename": "main.askai.core.support.chat_context", "qualname": "ChatContext.save", "kind": "function", "doc": "<p>Save the current context window to the cache.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.support.langchain_support", "modulename": "main.askai.core.support.langchain_support", "kind": "module", "doc": "<p>@project: HsPyLib-AskAI\n@package: askai.core.support.langchain_support\n   @file: langchain_support.py\n@created: Fri, 28 Feb 2024\n @author: <B>H</B>ugo <B>S</B>aporetti <B>J</B>unior\n   @site: <a href=\"https://github.com/yorevs/askai\">https://github.com/yorevs/askai</a>\n@license: MIT - Please refer to <a href=\"https://opensource.org/licenses/MIT\">https://opensource.org/licenses/MIT</a></p>\n\n<p>Copyright (c) 2024, AskAI</p>\n"}, {"fullname": "main.askai.core.support.langchain_support.LangChainSupport", "modulename": "main.askai.core.support.langchain_support", "qualname": "LangChainSupport", "kind": "class", "doc": "<p>Helper class to support the use of langchain framework.</p>\n", "bases": "typing.Type"}, {"fullname": "main.askai.core.support.langchain_support.LangChainSupport.__init__", "modulename": "main.askai.core.support.langchain_support", "qualname": "LangChainSupport.__init__", "kind": "function", "doc": "<p>Invoke the class constructor or return the instance if it exists.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, {"fullname": "main.askai.core.support.langchain_support.LangChainSupport.INSTANCE", "modulename": "main.askai.core.support.langchain_support", "qualname": "LangChainSupport.INSTANCE", "kind": "variable", "doc": "<p></p>\n", "annotation": ": main.askai.core.support.langchain_support.LangChainSupport"}, {"fullname": "main.askai.core.support.langchain_support.LangChainSupport.create_model", "modulename": "main.askai.core.support.langchain_support", "qualname": "LangChainSupport.create_model", "kind": "function", "doc": "<p>Create a LangChain LLM model instance using the current AI engine.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>temperature</strong>:  The temperature setting for the LLM model, which controls the randomness of the output.</li>\n<li><strong>top_p</strong>:  The top-p setting for the LLM model, which controls the diversity of the output by limiting the\ncumulative probability of token selection.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>An instance of the LLM model.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">temperature</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.0</span>,</span><span class=\"param\">\t<span class=\"n\">top_p</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.0</span></span><span class=\"return-annotation\">) -> <span class=\"n\">langchain_core</span><span class=\"o\">.</span><span class=\"n\">language_models</span><span class=\"o\">.</span><span class=\"n\">llms</span><span class=\"o\">.</span><span class=\"n\">BaseLLM</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.support.langchain_support.LangChainSupport.create_chat_model", "modulename": "main.askai.core.support.langchain_support", "qualname": "LangChainSupport.create_chat_model", "kind": "function", "doc": "<p>Create a LangChain LLM chat model instance using the current AI engine.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>temperature</strong>:  The temperature setting for the LLM chat model, which controls the randomness of the\nresponses.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>An instance of the LLM chat model.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">temperature</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.0</span></span><span class=\"return-annotation\">) -> <span class=\"n\">langchain_core</span><span class=\"o\">.</span><span class=\"n\">language_models</span><span class=\"o\">.</span><span class=\"n\">chat_models</span><span class=\"o\">.</span><span class=\"n\">BaseChatModel</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.support.langchain_support.LangChainSupport.create_embeddings", "modulename": "main.askai.core.support.langchain_support", "qualname": "LangChainSupport.create_embeddings", "kind": "function", "doc": "<p>Create a LangChain LLM embeddings model instance using the current AI engine.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>model</strong>:  The name of the embeddings model to use (default is \"text-embedding-3-small\").</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>An instance of the embeddings model.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">model</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;text-embedding-3-small&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"n\">langchain_core</span><span class=\"o\">.</span><span class=\"n\">embeddings</span><span class=\"o\">.</span><span class=\"n\">embeddings</span><span class=\"o\">.</span><span class=\"n\">Embeddings</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.support.llm_parser", "modulename": "main.askai.core.support.llm_parser", "kind": "module", "doc": "<p>@project: HsPyLib-AskAI\n@package: askai.core.support.utilities\n   @file: utilities.py\n@created: Wed, 10 Jan 2024\n @author: <B>H</B>ugo <B>S</B>aporetti <B>J</B>unior\n   @site: <a href=\"https://github.com/yorevs/askai\">https://github.com/yorevs/askai</a>\n@license: MIT - Please refer to <a href=\"https://opensource.org/licenses/MIT\">https://opensource.org/licenses/MIT</a></p>\n\n<p>Copyright (c) 2024, AskAI</p>\n"}, {"fullname": "main.askai.core.support.llm_parser.ensure_parseable", "modulename": "main.askai.core.support.llm_parser", "qualname": "ensure_parseable", "kind": "function", "doc": "<p>Ensures the given content is a parseable JSON array by adjusting it if necessary.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>content</strong>:  A string containing the content to be parsed.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A JSON array string if the content is parseable; otherwise, None.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">content</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.support.llm_parser.parse_field", "modulename": "main.askai.core.support.llm_parser", "qualname": "parse_field", "kind": "function", "doc": "<p>Parse the LLM response and extract a specified field.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>field_name</strong>:  The name of the field to be extracted.</li>\n<li><strong>text</strong>:  The text from which to extract the field.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The extracted field value, or None if not found.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">field_name</span><span class=\"p\">:</span> <span class=\"o\">~</span><span class=\"n\">AnyStr</span>, </span><span class=\"param\"><span class=\"n\">text</span><span class=\"p\">:</span> <span class=\"o\">~</span><span class=\"n\">AnyStr</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"o\">~</span><span class=\"n\">T</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.support.llm_parser.parse_word", "modulename": "main.askai.core.support.llm_parser", "qualname": "parse_word", "kind": "function", "doc": "<p>Parse the LLM response and extract a specified word attribute.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>word</strong>:  The word attribute to extract from the text.</li>\n<li><strong>text</strong>:  The text from which to extract the word attribute.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The extracted word attribute if found; otherwise, None.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">word</span><span class=\"p\">:</span> <span class=\"o\">~</span><span class=\"n\">AnyStr</span>, </span><span class=\"param\"><span class=\"n\">text</span><span class=\"p\">:</span> <span class=\"o\">~</span><span class=\"n\">AnyStr</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"o\">~</span><span class=\"n\">T</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.support.llm_parser.parse_list", "modulename": "main.askai.core.support.llm_parser", "qualname": "parse_list", "kind": "function", "doc": "<p>Parse the LLM response and extract a specified list.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>field_name</strong>:  The name of the field to extract from the text.</li>\n<li><strong>text</strong>:  The text response from the LLM to parse.</li>\n<li><strong>is_dict</strong>:  Whether list list contains dicts or strings.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A list of SimpleNamespace objects or strings.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">field_name</span><span class=\"p\">:</span> <span class=\"o\">~</span><span class=\"n\">AnyStr</span>,</span><span class=\"param\">\t<span class=\"n\">text</span><span class=\"p\">:</span> <span class=\"o\">~</span><span class=\"n\">AnyStr</span>,</span><span class=\"param\">\t<span class=\"n\">is_dict</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">types</span><span class=\"o\">.</span><span class=\"n\">SimpleNamespace</span><span class=\"p\">,</span> <span class=\"o\">~</span><span class=\"n\">AnyStr</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.support.os_utils", "modulename": "main.askai.core.support.os_utils", "kind": "module", "doc": "<p>@project: HsPyLib-AskAI\n@package: askai.core.model\n   @file: os_utils.py\n@created: Thu, 29 Feb 2024\n @author: <B>H</B>ugo <B>S</B>aporetti <B>J</B>unior\n   @site: <a href=\"https://github.com/yorevs/askai\">https://github.com/yorevs/askai</a>\n@license: MIT - Please refer to <a href=\"https://opensource.org/licenses/MIT\">https://opensource.org/licenses/MIT</a></p>\n\n<p>Copyright (c) 2024, AskAI</p>\n"}, {"fullname": "main.askai.core.support.os_utils.SupportedPlatforms", "modulename": "main.askai.core.support.os_utils", "qualname": "SupportedPlatforms", "kind": "variable", "doc": "<p></p>\n", "annotation": ": TypeAlias", "default_value": "Optional[Literal[&#x27;linux&#x27;, &#x27;windows&#x27;, &#x27;darwin&#x27;]]"}, {"fullname": "main.askai.core.support.os_utils.SupportedShells", "modulename": "main.askai.core.support.os_utils", "qualname": "SupportedShells", "kind": "variable", "doc": "<p></p>\n", "annotation": ": TypeAlias", "default_value": "Optional[Literal[&#x27;bash&#x27;, &#x27;csh&#x27;, &#x27;dash&#x27;, &#x27;ksh&#x27;, &#x27;tcsh&#x27;, &#x27;zsh&#x27;, &#x27;sh&#x27;]]"}, {"fullname": "main.askai.core.support.os_utils.get_os", "modulename": "main.askai.core.support.os_utils", "qualname": "get_os", "kind": "function", "doc": "<p>Retrieve the current operating system platform.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The current operating system as a <code>SupportedPlatforms</code> literal value.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Literal</span><span class=\"p\">[</span><span class=\"s1\">&#39;linux&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;windows&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;darwin&#39;</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.support.os_utils.get_shell", "modulename": "main.askai.core.support.os_utils", "qualname": "get_shell", "kind": "function", "doc": "<p>Retrieve the current shell being used.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The current shell as a <code>SupportedShells</code> literal value.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Literal</span><span class=\"p\">[</span><span class=\"s1\">&#39;bash&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;csh&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;dash&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;ksh&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;tcsh&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;zsh&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;sh&#39;</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.support.os_utils.get_user", "modulename": "main.askai.core.support.os_utils", "qualname": "get_user", "kind": "function", "doc": "<p>Retrieve the current user's username.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The username of the current user as a string. Returns \"user\" if the username is not found.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.support.presets", "modulename": "main.askai.core.support.presets", "kind": "module", "doc": "<p>@project: HsPyLib-AskAI\n@package: askai.core.support\n   @file: presets.py\n@created: Tue, 16 Jan 2024\n @author: <B>H</B>ugo <B>S</B>aporetti <B>J</B>unior\n   @site: <a href=\"https://github.com/yorevs/askai\">https://github.com/yorevs/askai</a>\n@license: MIT - Please refer to <a href=\"https://opensource.org/licenses/MIT\">https://opensource.org/licenses/MIT</a></p>\n\n<p>Copyright (c) 2024, AskAI</p>\n"}, {"fullname": "main.askai.core.support.presets.Presets", "modulename": "main.askai.core.support.presets", "qualname": "Presets", "kind": "class", "doc": "<p>Provides text streaming presets according to the language used.</p>\n"}, {"fullname": "main.askai.core.support.presets.Presets.__init__", "modulename": "main.askai.core.support.presets", "qualname": "Presets.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">lang</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">words_per_breath</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">base_speed</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">words_interval</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">breath_interval</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">number_interval</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">comma_interval</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">punct_interval</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">enum_interval</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">period_interval</span><span class=\"p\">:</span> <span class=\"nb\">float</span></span>)</span>"}, {"fullname": "main.askai.core.support.presets.Presets.get", "modulename": "main.askai.core.support.presets", "qualname": "Presets.get", "kind": "function", "doc": "<p>Retrieve the text-to-speech preset based on the specified parameters.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>lang</strong>:  The language code for the preset (default is \"en\" -> English).</li>\n<li><strong>tempo</strong>:  The tempo of the speech, where 1 is the default speed (natural).</li>\n<li><strong>base_interval</strong>:  The base interval between speech units (default is 0.010).</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>An instance of the Presets class configured with the specified parameters.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">cls</span>,</span><span class=\"param\">\t<span class=\"n\">lang</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;en&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">tempo</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">base_interval</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.01</span></span><span class=\"return-annotation\">) -> <span class=\"n\">main</span><span class=\"o\">.</span><span class=\"n\">askai</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">support</span><span class=\"o\">.</span><span class=\"n\">presets</span><span class=\"o\">.</span><span class=\"n\">Presets</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.support.presets.Presets.words_per_breath", "modulename": "main.askai.core.support.presets", "qualname": "Presets.words_per_breath", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "main.askai.core.support.presets.Presets.base_speed", "modulename": "main.askai.core.support.presets", "qualname": "Presets.base_speed", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "main.askai.core.support.presets.Presets.words_interval", "modulename": "main.askai.core.support.presets", "qualname": "Presets.words_interval", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "main.askai.core.support.presets.Presets.breath_interval", "modulename": "main.askai.core.support.presets", "qualname": "Presets.breath_interval", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "main.askai.core.support.presets.Presets.number_interval", "modulename": "main.askai.core.support.presets", "qualname": "Presets.number_interval", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "main.askai.core.support.presets.Presets.comma_interval", "modulename": "main.askai.core.support.presets", "qualname": "Presets.comma_interval", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "main.askai.core.support.presets.Presets.punct_interval", "modulename": "main.askai.core.support.presets", "qualname": "Presets.punct_interval", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "main.askai.core.support.presets.Presets.enum_interval", "modulename": "main.askai.core.support.presets", "qualname": "Presets.enum_interval", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "main.askai.core.support.presets.Presets.period_interval", "modulename": "main.askai.core.support.presets", "qualname": "Presets.period_interval", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "main.askai.core.support.shared_instances", "modulename": "main.askai.core.support.shared_instances", "kind": "module", "doc": "<p>@project: \"askai\"\n@package: \"askai\".main.askai.core.support\n   @file: shared_instances.py\n@created: Tue, 23 Apr 2024\n @author: \"<B>H</B>ugo <B>S</B>aporetti <B>J</B>unior\n   @site: \"https://github.com/yorevs/askai\")\n@license: MIT - Please refer to <a href=\"https://opensource.org/licenses/MIT\">https://opensource.org/licenses/MIT</a></p>\n\n<p>Copyright (c) 2024, AskAI</p>\n"}, {"fullname": "main.askai.core.support.shared_instances.LOGGER_NAME", "modulename": "main.askai.core.support.shared_instances", "qualname": "LOGGER_NAME", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;Askai-Taius&#x27;"}, {"fullname": "main.askai.core.support.shared_instances.SharedInstances", "modulename": "main.askai.core.support.shared_instances", "qualname": "SharedInstances", "kind": "class", "doc": "<p>Provides access to shared instances.</p>\n", "bases": "typing.Type"}, {"fullname": "main.askai.core.support.shared_instances.SharedInstances.__init__", "modulename": "main.askai.core.support.shared_instances", "qualname": "SharedInstances.__init__", "kind": "function", "doc": "<p>Invoke the class constructor or return the instance if it exists.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, {"fullname": "main.askai.core.support.shared_instances.SharedInstances.INSTANCE", "modulename": "main.askai.core.support.shared_instances", "qualname": "SharedInstances.INSTANCE", "kind": "variable", "doc": "<p></p>\n", "annotation": ": main.askai.core.support.shared_instances.SharedInstances"}, {"fullname": "main.askai.core.support.shared_instances.SharedInstances.UNCERTAIN_ID", "modulename": "main.askai.core.support.shared_instances", "qualname": "SharedInstances.UNCERTAIN_ID", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;bde6f44d-c1a0-4b0c-bd74-8278e468e50c&#x27;"}, {"fullname": "main.askai.core.support.shared_instances.SharedInstances.context", "modulename": "main.askai.core.support.shared_instances", "qualname": "SharedInstances.context", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[askai.core.support.chat_context.ChatContext]"}, {"fullname": "main.askai.core.support.shared_instances.SharedInstances.engine", "modulename": "main.askai.core.support.shared_instances", "qualname": "SharedInstances.engine", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[askai.core.engine.ai_engine.AIEngine]"}, {"fullname": "main.askai.core.support.shared_instances.SharedInstances.mode", "modulename": "main.askai.core.support.shared_instances", "qualname": "SharedInstances.mode", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Any"}, {"fullname": "main.askai.core.support.shared_instances.SharedInstances.mode_icon", "modulename": "main.askai.core.support.shared_instances", "qualname": "SharedInstances.mode_icon", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.support.shared_instances.SharedInstances.nickname", "modulename": "main.askai.core.support.shared_instances", "qualname": "SharedInstances.nickname", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "main.askai.core.support.shared_instances.SharedInstances.username", "modulename": "main.askai.core.support.shared_instances", "qualname": "SharedInstances.username", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "main.askai.core.support.shared_instances.SharedInstances.nickname_md", "modulename": "main.askai.core.support.shared_instances", "qualname": "SharedInstances.nickname_md", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "main.askai.core.support.shared_instances.SharedInstances.username_md", "modulename": "main.askai.core.support.shared_instances", "qualname": "SharedInstances.username_md", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "main.askai.core.support.shared_instances.SharedInstances.idiom", "modulename": "main.askai.core.support.shared_instances", "qualname": "SharedInstances.idiom", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "main.askai.core.support.shared_instances.SharedInstances.memory", "modulename": "main.askai.core.support.shared_instances", "qualname": "SharedInstances.memory", "kind": "variable", "doc": "<p></p>\n", "annotation": ": langchain.memory.chat_memory.BaseChatMemory"}, {"fullname": "main.askai.core.support.shared_instances.SharedInstances.max_iteractions", "modulename": "main.askai.core.support.shared_instances", "qualname": "SharedInstances.max_iteractions", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "main.askai.core.support.shared_instances.SharedInstances.app_info", "modulename": "main.askai.core.support.shared_instances", "qualname": "SharedInstances.app_info", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "main.askai.core.support.shared_instances.SharedInstances.create_engine", "modulename": "main.askai.core.support.shared_instances", "qualname": "SharedInstances.create_engine", "kind": "function", "doc": "<p>Create or retrieve an AI engine instance based on the specified engine and model names.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>engine_name</strong>:  The name of the AI engine to create or retrieve.</li>\n<li><strong>model_name</strong>:  The name of the model to use with the AI engine.</li>\n<li><strong>mode</strong>:  The engine routing mode.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>An instance of the AIEngine configured with the specified engine and model.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">engine_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">model_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">mode</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">) -> <span class=\"n\">askai</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">engine</span><span class=\"o\">.</span><span class=\"n\">ai_engine</span><span class=\"o\">.</span><span class=\"n\">AIEngine</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.support.shared_instances.SharedInstances.create_context", "modulename": "main.askai.core.support.shared_instances", "qualname": "SharedInstances.create_context", "kind": "function", "doc": "<p>Create or retrieve a chat context with the specified token limit.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>token_limit</strong>:  The maximum number of tokens allowed in the chat context.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>An instance of the ChatContext configured with the specified token limit.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">token_limit</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">askai</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">support</span><span class=\"o\">.</span><span class=\"n\">chat_context</span><span class=\"o\">.</span><span class=\"n\">ChatContext</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.support.shared_instances.SharedInstances.create_memory", "modulename": "main.askai.core.support.shared_instances", "qualname": "SharedInstances.create_memory", "kind": "function", "doc": "<p>Create or retrieve the conversation window memory.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>memory_key</strong>:  The key used to identify the memory (default is \"chat_history\").</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>An instance of BaseChatMemory associated with the specified memory key.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">memory_key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;chat_history&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"n\">langchain</span><span class=\"o\">.</span><span class=\"n\">memory</span><span class=\"o\">.</span><span class=\"n\">chat_memory</span><span class=\"o\">.</span><span class=\"n\">BaseChatMemory</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.support.shared_instances.SharedInstances.input_text", "modulename": "main.askai.core.support.shared_instances", "qualname": "SharedInstances.input_text", "kind": "function", "doc": "<p>Prompt the user for input.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>input_prompt</strong>:  The text prompt to display to the user.</li>\n<li><strong>placeholder</strong>:  The placeholder text to display in the input field (optional).</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The user's input as a string, or None if no input is provided.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">input_prompt</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">placeholder</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.support.spinner", "modulename": "main.askai.core.support.spinner", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "main.askai.core.support.spinner.Spinner", "modulename": "main.askai.core.support.spinner", "qualname": "Spinner", "kind": "class", "doc": "<p>TODO</p>\n", "bases": "hspylib.core.enums.enumeration.Enumeration"}, {"fullname": "main.askai.core.support.spinner.Spinner.DEFAULT", "modulename": "main.askai.core.support.spinner", "qualname": "Spinner.DEFAULT", "kind": "variable", "doc": "<p></p>\n", "default_value": "DEFAULT"}, {"fullname": "main.askai.core.support.spinner.Spinner.ARROW_BAR", "modulename": "main.askai.core.support.spinner", "qualname": "Spinner.ARROW_BAR", "kind": "variable", "doc": "<p></p>\n", "default_value": "ARROW_BAR"}, {"fullname": "main.askai.core.support.spinner.Spinner.BAR", "modulename": "main.askai.core.support.spinner", "qualname": "Spinner.BAR", "kind": "variable", "doc": "<p></p>\n", "default_value": "BAR"}, {"fullname": "main.askai.core.support.spinner.Spinner.BOUNCE", "modulename": "main.askai.core.support.spinner", "qualname": "Spinner.BOUNCE", "kind": "variable", "doc": "<p></p>\n", "default_value": "BOUNCE"}, {"fullname": "main.askai.core.support.spinner.Spinner.BOX", "modulename": "main.askai.core.support.spinner", "qualname": "Spinner.BOX", "kind": "variable", "doc": "<p></p>\n", "default_value": "BOX"}, {"fullname": "main.askai.core.support.spinner.Spinner.BULLET", "modulename": "main.askai.core.support.spinner", "qualname": "Spinner.BULLET", "kind": "variable", "doc": "<p></p>\n", "default_value": "BULLET"}, {"fullname": "main.askai.core.support.spinner.Spinner.CIRCLE", "modulename": "main.askai.core.support.spinner", "qualname": "Spinner.CIRCLE", "kind": "variable", "doc": "<p></p>\n", "default_value": "CIRCLE"}, {"fullname": "main.askai.core.support.spinner.Spinner.COLIMA", "modulename": "main.askai.core.support.spinner", "qualname": "Spinner.COLIMA", "kind": "variable", "doc": "<p></p>\n", "default_value": "COLIMA"}, {"fullname": "main.askai.core.support.spinner.Spinner.HEXAGON", "modulename": "main.askai.core.support.spinner", "qualname": "Spinner.HEXAGON", "kind": "variable", "doc": "<p></p>\n", "default_value": "HEXAGON"}, {"fullname": "main.askai.core.support.spinner.Spinner.LINE_GROW", "modulename": "main.askai.core.support.spinner", "qualname": "Spinner.LINE_GROW", "kind": "variable", "doc": "<p></p>\n", "default_value": "LINE_GROW"}, {"fullname": "main.askai.core.support.spinner.Spinner.LINE_BOUNCE", "modulename": "main.askai.core.support.spinner", "qualname": "Spinner.LINE_BOUNCE", "kind": "variable", "doc": "<p></p>\n", "default_value": "LINE_BOUNCE"}, {"fullname": "main.askai.core.support.spinner.Spinner.STAR", "modulename": "main.askai.core.support.spinner", "qualname": "Spinner.STAR", "kind": "variable", "doc": "<p></p>\n", "default_value": "STAR"}, {"fullname": "main.askai.core.support.spinner.Spinner.started", "modulename": "main.askai.core.support.spinner", "qualname": "Spinner.started", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "main.askai.core.support.spinner.Spinner.run", "modulename": "main.askai.core.support.spinner", "qualname": "Spinner.run", "kind": "function", "doc": "<p>TODO</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">interval</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">prefix</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">suffix</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">color</span><span class=\"p\">:</span> <span class=\"n\">hspylib</span><span class=\"o\">.</span><span class=\"n\">modules</span><span class=\"o\">.</span><span class=\"n\">cli</span><span class=\"o\">.</span><span class=\"n\">vt100</span><span class=\"o\">.</span><span class=\"n\">vt_color</span><span class=\"o\">.</span><span class=\"n\">VtColor</span> <span class=\"o\">=</span> <span class=\"n\">WHITE</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.support.spinner.Spinner.start", "modulename": "main.askai.core.support.spinner", "qualname": "Spinner.start", "kind": "function", "doc": "<p>TODO</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.support.spinner.Spinner.stop", "modulename": "main.askai.core.support.spinner", "qualname": "Spinner.stop", "kind": "function", "doc": "<p>TODO</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.support.spinner.Spinner.wait", "modulename": "main.askai.core.support.spinner", "qualname": "Spinner.wait", "kind": "function", "doc": "<p>TODO</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.support.spinner.Spinner.interval", "modulename": "main.askai.core.support.spinner", "qualname": "Spinner.interval", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "main.askai.core.support.spinner.Spinner.symbols", "modulename": "main.askai.core.support.spinner", "qualname": "Spinner.symbols", "kind": "variable", "doc": "<p></p>\n", "annotation": ": list[str]"}, {"fullname": "main.askai.core.support.text_formatter", "modulename": "main.askai.core.support.text_formatter", "kind": "module", "doc": "<p>@project: HsPyLib-AskAI\n@package: askai.core.support.text_formatter\n   @file: text_formatter.py\n@created: Fri, 28 Feb 2024\n @author: <B>H</B>ugo <B>S</B>aporetti <B>J</B>unior\n   @site: <a href=\"https://github.com/yorevs/askai\">https://github.com/yorevs/askai</a>\n@license: MIT - Please refer to <a href=\"https://opensource.org/licenses/MIT\">https://opensource.org/licenses/MIT</a></p>\n\n<p>Copyright (c) 2024, AskAI</p>\n"}, {"fullname": "main.askai.core.support.text_formatter.TextFormatter", "modulename": "main.askai.core.support.text_formatter", "qualname": "TextFormatter", "kind": "class", "doc": "<p>A utility class for formatting text according to specified rules or styles.\nThis class provides various methods for transforming and formatting text,\nsuch as adjusting indentation, line breaks, or applying specific text styles.\nThe Singleton metaclass ensures that only one instance of this class exists throughout the application.</p>\n", "bases": "typing.Type"}, {"fullname": "main.askai.core.support.text_formatter.TextFormatter.__init__", "modulename": "main.askai.core.support.text_formatter", "qualname": "TextFormatter.__init__", "kind": "function", "doc": "<p>Invoke the class constructor or return the instance if it exists.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, {"fullname": "main.askai.core.support.text_formatter.TextFormatter.INSTANCE", "modulename": "main.askai.core.support.text_formatter", "qualname": "TextFormatter.INSTANCE", "kind": "variable", "doc": "<p></p>\n", "annotation": ": main.askai.core.support.text_formatter.TextFormatter"}, {"fullname": "main.askai.core.support.text_formatter.TextFormatter.RE_URL", "modulename": "main.askai.core.support.text_formatter", "qualname": "TextFormatter.RE_URL", "kind": "variable", "doc": "<p></p>\n", "default_value": "&quot;(https?:\\\\/\\\\/(?:www\\\\.|(?!www))[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\\\\.[^\\\\s&#x27;)]{2,}|www\\\\.[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\\\\.[^\\\\s&#x27;)]{2,}|https?:\\\\/\\\\/(?:www\\\\.|(?!www))[a-zA-Z0-9]+\\\\.[^\\\\s&#x27;)]{2,}|www\\\\.[a-zA-Z0-9]+\\\\.[^\\\\s&#x27;)]{2,})&quot;"}, {"fullname": "main.askai.core.support.text_formatter.TextFormatter.RE_MD_CODE_BLOCK", "modulename": "main.askai.core.support.text_formatter", "qualname": "TextFormatter.RE_MD_CODE_BLOCK", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;(```.+```)&#x27;"}, {"fullname": "main.askai.core.support.text_formatter.TextFormatter.CHAT_ICONS", "modulename": "main.askai.core.support.text_formatter", "qualname": "TextFormatter.CHAT_ICONS", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;\\uf119&#x27;: &#x27;%RED%\\uf119 Oops! %NC%&#x27;, &#x27;\\uf400&#x27;: &#x27;\\n&gt; \\uf400  *Tip:* &#x27;, &#x27;\\uf691&#x27;: &#x27;\\n&gt; \\uf691  *Analysis:* &#x27;, &#x27;\\uf006&#x27;: &#x27;\\n&gt; \\uf006  *Summary:* &#x27;, &#x27;\\uf6f6&#x27;: &#x27;\\n&gt; \\uf6f6  *Joke:* &#x27;, &#x27;\\uf6f2&#x27;: &#x27;\\n&gt; \\uf6f2  *Fun-Fact:* &#x27;, &#x27;\\uf421&#x27;: &#x27;\\n&gt; \\uf421  *Advice:* &#x27;, &#x27;\\ufb3d&#x27;: &#x27;\\n&gt; \\ufb3d  *Conclusion:* &#x27;}"}, {"fullname": "main.askai.core.support.text_formatter.TextFormatter.RE_TYPES", "modulename": "main.askai.core.support.text_formatter", "qualname": "TextFormatter.RE_TYPES", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;MD&#x27;: &#x27;(```.+```)&#x27;, &#x27;\\uf0c1&#x27;: &quot;(https?:\\\\/\\\\/(?:www\\\\.|(?!www))[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\\\\.[^\\\\s&#x27;)]{2,}|www\\\\.[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\\\\.[^\\\\s&#x27;)]{2,}|https?:\\\\/\\\\/(?:www\\\\.|(?!www))[a-zA-Z0-9]+\\\\.[^\\\\s&#x27;)]{2,}|www\\\\.[a-zA-Z0-9]+\\\\.[^\\\\s&#x27;)]{2,})&quot;, &#x27;\\uf119&#x27;: &#x27;^[\\\\s*_]*Errors?[_*-:\\\\s]+&#x27;, &#x27;\\uf400&#x27;: &#x27;[\\\\s*_]*Hints?( ([Aa]nd|&amp;) [Tt]ips?)?[_*-:\\\\s]+&#x27;, &#x27;\\uf691&#x27;: &#x27;[\\\\s*_]*Analysis[_*-:\\\\s]+&#x27;, &#x27;\\uf006&#x27;: &#x27;[\\\\s*_]*Summary[_*-:\\\\s]+&#x27;, &#x27;\\uf6f2&#x27;: &#x27;[\\\\s*_]*Fun[\\\\s-]+[Ff]acts?[_*-:\\\\s]+&#x27;, &#x27;\\uf6f6&#x27;: &#x27;[\\\\s*_]*(Jokes?(\\\\s+[Tt]ime)?)[_*-:\\\\s]+&#x27;, &#x27;\\uf421&#x27;: &#x27;[\\\\s*_]*Advice[_*-:\\\\s]+&#x27;, &#x27;\\ufb3d&#x27;: &#x27;[\\\\s*_]*Conclusion[_*-:\\\\s]+&#x27;}"}, {"fullname": "main.askai.core.support.text_formatter.TextFormatter.ensure_ln", "modulename": "main.askai.core.support.text_formatter", "qualname": "TextFormatter.ensure_ln", "kind": "function", "doc": "<p>Ensure the text starts and ends with a line separator.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>text</strong>:  The text to be formatted.</li>\n<li><strong>separator</strong>:  The line separator to use (default is the system's line separator).</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The formatted text with the specified line separator at the beginning and end.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">text</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">separator</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.support.text_formatter.TextFormatter.remove_markdown", "modulename": "main.askai.core.support.text_formatter", "qualname": "TextFormatter.remove_markdown", "kind": "function", "doc": "<p>Remove Markdown formatting from a string.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>text</strong>:  The input string potentially containing Markdown formatting.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The input string with Markdown formatting removed.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">text</span><span class=\"p\">:</span> <span class=\"o\">~</span><span class=\"n\">AnyStr</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.support.text_formatter.TextFormatter.strip_format", "modulename": "main.askai.core.support.text_formatter", "qualname": "TextFormatter.strip_format", "kind": "function", "doc": "<p>Remove the markdown formatting and ANSI escape codes from the text.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>text</strong>:  The input string containing markdown formatting and ANSI escape codes.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A string with the formatting removed.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">text</span><span class=\"p\">:</span> <span class=\"o\">~</span><span class=\"n\">AnyStr</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.support.text_formatter.TextFormatter.beautify", "modulename": "main.askai.core.support.text_formatter", "qualname": "TextFormatter.beautify", "kind": "function", "doc": "<p>Beautify the provided text with icons and other formatting enhancements.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>text</strong>:  The text to be beautified.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The beautified text as a string with applied icons and formatting improvements.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">text</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.support.text_formatter.TextFormatter.display_markdown", "modulename": "main.askai.core.support.text_formatter", "qualname": "TextFormatter.display_markdown", "kind": "function", "doc": "<p>Display a markdown-formatted text.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>text</strong>:  The markdown-formatted text to be displayed.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">text</span><span class=\"p\">:</span> <span class=\"o\">~</span><span class=\"n\">AnyStr</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.support.text_formatter.TextFormatter.display_text", "modulename": "main.askai.core.support.text_formatter", "qualname": "TextFormatter.display_text", "kind": "function", "doc": "<p>Display a VT100 formatted text.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>text</strong>:  The VT100 formatted text to be displayed.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">text</span><span class=\"p\">:</span> <span class=\"o\">~</span><span class=\"n\">AnyStr</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.support.text_formatter.TextFormatter.commander_print", "modulename": "main.askai.core.support.text_formatter", "qualname": "TextFormatter.commander_print", "kind": "function", "doc": "<p>Display an AskAI-commander formatted text.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>text</strong>:  The text to be displayed.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">text</span><span class=\"p\">:</span> <span class=\"o\">~</span><span class=\"n\">AnyStr</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.support.utilities", "modulename": "main.askai.core.support.utilities", "kind": "module", "doc": "<p>@project: HsPyLib-AskAI\n@package: askai.core.support.utilities\n   @file: utilities.py\n@created: Wed, 10 Jan 2024\n @author: <B>H</B>ugo <B>S</B>aporetti <B>J</B>unior\n   @site: <a href=\"https://github.com/yorevs/askai\">https://github.com/yorevs/askai</a>\n@license: MIT - Please refer to <a href=\"https://opensource.org/licenses/MIT\">https://opensource.org/licenses/MIT</a></p>\n\n<p>Copyright (c) 2024, AskAI</p>\n"}, {"fullname": "main.askai.core.support.utilities.read_stdin", "modulename": "main.askai.core.support.utilities", "qualname": "read_stdin", "kind": "function", "doc": "<p>Read input from the standard input (stdin).</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The input read from stdin as a string, or None if no input is provided.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.support.utilities.display_text", "modulename": "main.askai.core.support.utilities", "qualname": "display_text", "kind": "function", "doc": "<p>Display the provided text in a formatted way.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>text</strong>:  The text to be displayed.</li>\n<li><strong>prefix</strong>:  A prefix to prepend to the text (optional).</li>\n<li><strong>markdown</strong>:  Whether to render the text using markdown formatting (default is True).</li>\n<li><strong>erase_last</strong>:  Whether to erase the last displayed line before displaying the new text (default is False).</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">text</span><span class=\"p\">:</span> <span class=\"o\">~</span><span class=\"n\">AnyStr</span>,</span><span class=\"param\">\t<span class=\"n\">prefix</span><span class=\"p\">:</span> <span class=\"o\">~</span><span class=\"n\">AnyStr</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">markdown</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">erase_last</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.support.utilities.find_file", "modulename": "main.askai.core.support.utilities", "qualname": "find_file", "kind": "function", "doc": "<p>Find the specified file by name in the most common locations.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>filename</strong>:  The name or path of the file to find.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The full path to the file if found, otherwise None.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">filename</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">pathlib</span><span class=\"o\">.</span><span class=\"n\">Path</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">pathlib</span><span class=\"o\">.</span><span class=\"n\">Path</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.support.utilities.copy_file", "modulename": "main.askai.core.support.utilities", "qualname": "copy_file", "kind": "function", "doc": "<p>Copy the specified file to the given destination path.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>srcfile</strong>:  The path of the source file to be copied.</li>\n<li><strong>destfile</strong>:  The destination path where the file should be copied.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The path of the copied file as a string.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">srcfile</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">pathlib</span><span class=\"o\">.</span><span class=\"n\">Path</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">destfile</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">pathlib</span><span class=\"o\">.</span><span class=\"n\">Path</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.support.utilities.build_img_path", "modulename": "main.askai.core.support.utilities", "qualname": "build_img_path", "kind": "function", "doc": "<p>Construct the full path for an image file based on the base directory, filename, and suffix.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>base_dir</strong>:  The base directory where the image file is located.</li>\n<li><strong>filename</strong>:  The name of the image file (without the suffix).</li>\n<li><strong>suffix</strong>:  The suffix or extension to append to the filename (e.g., \".jpg\", \".png\").</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The full path to the image file as a string, or None if the path cannot be constructed.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">base_dir</span><span class=\"p\">:</span> <span class=\"n\">pathlib</span><span class=\"o\">.</span><span class=\"n\">Path</span>, </span><span class=\"param\"><span class=\"n\">filename</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">suffix</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.support.utilities.join_path", "modulename": "main.askai.core.support.utilities", "qualname": "join_path", "kind": "function", "doc": "<p>Join the the given path name with the specified directory name.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>dir_name</strong>:  The new directory name to replace the existing one.</li>\n<li><strong>path_name</strong>:  The original path where the directory will be replaced.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The modified path with the new directory name.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">dir_name</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">pathlib</span><span class=\"o\">.</span><span class=\"n\">Path</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">path_name</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">pathlib</span><span class=\"o\">.</span><span class=\"n\">Path</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.support.utilities.read_resource", "modulename": "main.askai.core.support.utilities", "qualname": "read_resource", "kind": "function", "doc": "<p>Read the resource file specified by the filename and return its content.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>base_dir</strong>:  The base directory, relative to the resources folder.</li>\n<li><strong>filename</strong>:  The name of the file to read.</li>\n<li><strong>file_ext</strong>:  The file extension of the file (default is \".txt\").</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The content of the file as a string.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">base_dir</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">pathlib</span><span class=\"o\">.</span><span class=\"n\">Path</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">filename</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">pathlib</span><span class=\"o\">.</span><span class=\"n\">Path</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">file_ext</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;.txt&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.support.utilities.read_file", "modulename": "main.askai.core.support.utilities", "qualname": "read_file", "kind": "function", "doc": "<p>Reads the contents of a file from the specified directory.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>load_dir</strong>:  The directory where the file is located.</li>\n<li><strong>path_name</strong>:  The path name of the file to read.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The contents of the file as a string, or None if the file cannot be read.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">load_dir</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">pathlib</span><span class=\"o\">.</span><span class=\"n\">Path</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">path_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.support.utilities.encode_image", "modulename": "main.askai.core.support.utilities", "qualname": "encode_image", "kind": "function", "doc": "<p>Encode an image file to a base64 string.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>file_path</strong>:  Path to the image file to be encoded.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>Base64 encoded string of the image file.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">file_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.support.utilities.extract_path", "modulename": "main.askai.core.support.utilities", "qualname": "extract_path", "kind": "function", "doc": "<p>Extract the first identifiable path from the provided command line text.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>command_line</strong>:  The command line text from which to extract the path.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The first identified path as a string, or None if no path could be extracted.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">command_line</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.support.utilities.extract_codeblock", "modulename": "main.askai.core.support.utilities", "qualname": "extract_codeblock", "kind": "function", "doc": "<p>Extract the programming language and actual code from a markdown multi-line code block.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>text</strong>:  The markdown-formatted text containing the code block.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A tuple where the first element is the programming language (or None if not specified),\n           and the second element is the extracted code as a string.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">text</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.support.utilities.media_type_of", "modulename": "main.askai.core.support.utilities", "qualname": "media_type_of", "kind": "function", "doc": "<p>Return the media type of the specified file, or None if the type could not be determined.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>pathname</strong>:  The file path to check.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A tuple representing the media type (e.g., (\"text/plain\")), or None if guessing was not possible.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">pathname</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.core.support.utilities.seconds", "modulename": "main.askai.core.support.utilities", "qualname": "seconds", "kind": "function", "doc": "<p>Convert milliseconds to seconds.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>millis</strong>:  The time in milliseconds.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The equivalent time in seconds as a float.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">millis</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">float</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.exception", "modulename": "main.askai.exception", "kind": "module", "doc": "<p>Package initialization.</p>\n"}, {"fullname": "main.askai.exception.exceptions", "modulename": "main.askai.exception.exceptions", "kind": "module", "doc": "<p>@project: HsPyLib-CFMan\n@package: askai.exception.exceptions\n   @file: exceptions.py\n@created: Fri, 12 May 2024\n @author: <B>H</B>ugo <B>S</B>aporetti <B>J</B>unior\n   @site: <a href=\"https://github.com/yorevs/askai\">https://github.com/yorevs/askai</a>\n@license: MIT - Please refer to <a href=\"https://opensource.org/licenses/MIT\">https://opensource.org/licenses/MIT</a></p>\n\n<p>Copyright (c) 2024, AskAI</p>\n"}, {"fullname": "main.askai.exception.exceptions.NoSuchEngineError", "modulename": "main.askai.exception.exceptions", "qualname": "NoSuchEngineError", "kind": "class", "doc": "<p>Raised when the provided engine does not exist</p>\n", "bases": "hspylib.core.exception.exceptions.HSBaseException"}, {"fullname": "main.askai.exception.exceptions.InvalidRecognitionApiError", "modulename": "main.askai.exception.exceptions", "qualname": "InvalidRecognitionApiError", "kind": "class", "doc": "<p>Raised when an invalid recognition API callback is provided.</p>\n", "bases": "hspylib.core.exception.exceptions.HSBaseException"}, {"fullname": "main.askai.exception.exceptions.IntelligibleAudioError", "modulename": "main.askai.exception.exceptions", "qualname": "IntelligibleAudioError", "kind": "class", "doc": "<p>Raised when an the provided audio was not recognized by the API.</p>\n", "bases": "hspylib.core.exception.exceptions.HSBaseException"}, {"fullname": "main.askai.exception.exceptions.RecognitionApiRequestError", "modulename": "main.askai.exception.exceptions", "qualname": "RecognitionApiRequestError", "kind": "class", "doc": "<p>Raised when an there was an error calling the recognition API.</p>\n", "bases": "hspylib.core.exception.exceptions.HSBaseException"}, {"fullname": "main.askai.exception.exceptions.TranslationPackageError", "modulename": "main.askai.exception.exceptions", "qualname": "TranslationPackageError", "kind": "class", "doc": "<p>Raised when an there was an error installing an Argos translation package.</p>\n", "bases": "hspylib.core.exception.exceptions.HSBaseException"}, {"fullname": "main.askai.exception.exceptions.TokenLengthExceeded", "modulename": "main.askai.exception.exceptions", "qualname": "TokenLengthExceeded", "kind": "class", "doc": "<p>Raised when the token is too big to fit the token context window.</p>\n", "bases": "hspylib.core.exception.exceptions.HSBaseException"}, {"fullname": "main.askai.exception.exceptions.InvalidInputDevice", "modulename": "main.askai.exception.exceptions", "qualname": "InvalidInputDevice", "kind": "class", "doc": "<p>Raised when an invalid recording input device is used.</p>\n", "bases": "hspylib.core.exception.exceptions.HSBaseException"}, {"fullname": "main.askai.exception.exceptions.DocumentsNotFound", "modulename": "main.askai.exception.exceptions", "qualname": "DocumentsNotFound", "kind": "class", "doc": "<p>Raised when no documents are found for summarization.</p>\n", "bases": "hspylib.core.exception.exceptions.HSBaseException"}, {"fullname": "main.askai.exception.exceptions.InaccurateResponse", "modulename": "main.askai.exception.exceptions", "qualname": "InaccurateResponse", "kind": "class", "doc": "<p>Raised when detected an inaccurate response form the AI.</p>\n", "bases": "hspylib.core.exception.exceptions.HSBaseException"}, {"fullname": "main.askai.exception.exceptions.MaxInteractionsReached", "modulename": "main.askai.exception.exceptions", "qualname": "MaxInteractionsReached", "kind": "class", "doc": "<p>Raised when the number of executed actions exceeded the limit.</p>\n", "bases": "hspylib.core.exception.exceptions.HSBaseException"}, {"fullname": "main.askai.exception.exceptions.ImpossibleQuery", "modulename": "main.askai.exception.exceptions", "qualname": "ImpossibleQuery", "kind": "class", "doc": "<p>Raised when tracing or executing an action plan is/was not possible.</p>\n", "bases": "hspylib.core.exception.exceptions.HSBaseException"}, {"fullname": "main.askai.exception.exceptions.TerminatingQuery", "modulename": "main.askai.exception.exceptions", "qualname": "TerminatingQuery", "kind": "class", "doc": "<p>Raised when received a terminating question.</p>\n", "bases": "hspylib.core.exception.exceptions.HSBaseException"}, {"fullname": "main.askai.exception.exceptions.InvalidStructuredResponse", "modulename": "main.askai.exception.exceptions", "qualname": "InvalidStructuredResponse", "kind": "class", "doc": "<p>Raised when received an invalid structured response.</p>\n", "bases": "hspylib.core.exception.exceptions.HSBaseException"}, {"fullname": "main.askai.exception.exceptions.MissingApiKeyError", "modulename": "main.askai.exception.exceptions", "qualname": "MissingApiKeyError", "kind": "class", "doc": "<p>Raised when received an invalid structured response.</p>\n", "bases": "hspylib.core.exception.exceptions.HSBaseException"}, {"fullname": "main.askai.exception.exceptions.WebCamInitializationFailure", "modulename": "main.askai.exception.exceptions", "qualname": "WebCamInitializationFailure", "kind": "class", "doc": "<p>Raised when failed to initialize the computer Webcam.</p>\n", "bases": "hspylib.core.exception.exceptions.HSBaseException"}, {"fullname": "main.askai.exception.exceptions.CameraAccessFailure", "modulename": "main.askai.exception.exceptions", "qualname": "CameraAccessFailure", "kind": "class", "doc": "<p>Raised when failed to operate with the computer Webcam.</p>\n", "bases": "hspylib.core.exception.exceptions.HSBaseException"}, {"fullname": "main.askai.exception.exceptions.InterruptionRequest", "modulename": "main.askai.exception.exceptions", "qualname": "InterruptionRequest", "kind": "class", "doc": "<p>Raised when the AI flags to interrupt the execution of the action plan.</p>\n", "bases": "hspylib.core.exception.exceptions.HSBaseException"}, {"fullname": "main.askai.language", "modulename": "main.askai.language", "kind": "module", "doc": "<p>Package initialization.</p>\n"}, {"fullname": "main.askai.language.ai_translator", "modulename": "main.askai.language.ai_translator", "kind": "module", "doc": "<p>@project: HsPyLib-AskAI\n@package: askai.language.argos_translator\n   @file: translator.py\n@created: Fri, 5 Jan 2024\n @author: <B>H</B>ugo <B>S</B>aporetti <B>J</B>unior\n   @site: <a href=\"https://github.com/yorevs/askai\">https://github.com/yorevs/askai</a>\n@license: MIT - Please refer to <a href=\"https://opensource.org/licenses/MIT\">https://opensource.org/licenses/MIT</a></p>\n\n<p>Copyright (c) 2024, AskAI</p>\n"}, {"fullname": "main.askai.language.ai_translator.AITranslator", "modulename": "main.askai.language.ai_translator", "qualname": "AITranslator", "kind": "class", "doc": "<p>Provides a base class for multilingual offline translation engines. Various implementations can be used.</p>\n", "bases": "typing.Protocol"}, {"fullname": "main.askai.language.ai_translator.AITranslator.__init__", "modulename": "main.askai.language.ai_translator", "qualname": "AITranslator.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">source_lang</span><span class=\"p\">:</span> <span class=\"n\">askai</span><span class=\"o\">.</span><span class=\"n\">language</span><span class=\"o\">.</span><span class=\"n\">language</span><span class=\"o\">.</span><span class=\"n\">Language</span>,</span><span class=\"param\">\t<span class=\"n\">target_lang</span><span class=\"p\">:</span> <span class=\"n\">askai</span><span class=\"o\">.</span><span class=\"n\">language</span><span class=\"o\">.</span><span class=\"n\">language</span><span class=\"o\">.</span><span class=\"n\">Language</span></span>)</span>"}, {"fullname": "main.askai.language.ai_translator.AITranslator.translate", "modulename": "main.askai.language.ai_translator", "qualname": "AITranslator.translate", "kind": "function", "doc": "<p>Translate text from the source language to the target language.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>text</strong>:  Text to translate.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The translated text.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">text</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.language.ai_translator.AITranslator.name", "modulename": "main.askai.language.ai_translator", "qualname": "AITranslator.name", "kind": "function", "doc": "<p>Return the translator name or model.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The name or model of the translator.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.language.language", "modulename": "main.askai.language.language", "kind": "module", "doc": "<p>@project: HsPyLib-AskAI\n@package: askai.language.language\n   @file: language.py\n@created: Fri, 5 Jan 2024\n @author: <B>H</B>ugo <B>S</B>aporetti <B>J</B>unior\n   @site: <a href=\"https://github.com/yorevs/askai\">https://github.com/yorevs/askai</a>\n@license: MIT - Please refer to <a href=\"https://opensource.org/licenses/MIT\">https://opensource.org/licenses/MIT</a></p>\n\n<p>Copyright (c) 2024, AskAI</p>\n"}, {"fullname": "main.askai.language.language.AnyLocale", "modulename": "main.askai.language.language", "qualname": "AnyLocale", "kind": "variable", "doc": "<p></p>\n", "annotation": ": TypeAlias", "default_value": "str | tuple[str | None, ...]"}, {"fullname": "main.askai.language.language.Language", "modulename": "main.askai.language.language", "qualname": "Language", "kind": "class", "doc": "<p>Enumeration to wrap all standard languages.\nReference: <a href=\"https://docs.oracle.com/cd/E23824_01/html/E26033/glset.html\">https://docs.oracle.com/cd/E23824_01/html/E26033/glset.html</a></p>\n", "bases": "hspylib.core.enums.enumeration.Enumeration"}, {"fullname": "main.askai.language.language.Language.AF_ZA", "modulename": "main.askai.language.language", "qualname": "Language.AF_ZA", "kind": "variable", "doc": "<p></p>\n", "default_value": "Afrikaans"}, {"fullname": "main.askai.language.language.Language.AR_AE", "modulename": "main.askai.language.language", "qualname": "Language.AR_AE", "kind": "variable", "doc": "<p></p>\n", "default_value": "Arabic"}, {"fullname": "main.askai.language.language.Language.AR_BH", "modulename": "main.askai.language.language", "qualname": "Language.AR_BH", "kind": "variable", "doc": "<p></p>\n", "default_value": "Arabic"}, {"fullname": "main.askai.language.language.Language.AR_DZ", "modulename": "main.askai.language.language", "qualname": "Language.AR_DZ", "kind": "variable", "doc": "<p></p>\n", "default_value": "Arabic"}, {"fullname": "main.askai.language.language.Language.AR_EG", "modulename": "main.askai.language.language", "qualname": "Language.AR_EG", "kind": "variable", "doc": "<p></p>\n", "default_value": "Arabic"}, {"fullname": "main.askai.language.language.Language.AR_IQ", "modulename": "main.askai.language.language", "qualname": "Language.AR_IQ", "kind": "variable", "doc": "<p></p>\n", "default_value": "Arabic"}, {"fullname": "main.askai.language.language.Language.AR_JO", "modulename": "main.askai.language.language", "qualname": "Language.AR_JO", "kind": "variable", "doc": "<p></p>\n", "default_value": "Arabic"}, {"fullname": "main.askai.language.language.Language.AR_KW", "modulename": "main.askai.language.language", "qualname": "Language.AR_KW", "kind": "variable", "doc": "<p></p>\n", "default_value": "Arabic"}, {"fullname": "main.askai.language.language.Language.AR_LY", "modulename": "main.askai.language.language", "qualname": "Language.AR_LY", "kind": "variable", "doc": "<p></p>\n", "default_value": "Arabic"}, {"fullname": "main.askai.language.language.Language.AR_MA", "modulename": "main.askai.language.language", "qualname": "Language.AR_MA", "kind": "variable", "doc": "<p></p>\n", "default_value": "Arabic"}, {"fullname": "main.askai.language.language.Language.AR_OM", "modulename": "main.askai.language.language", "qualname": "Language.AR_OM", "kind": "variable", "doc": "<p></p>\n", "default_value": "Arabic"}, {"fullname": "main.askai.language.language.Language.AR_QA", "modulename": "main.askai.language.language", "qualname": "Language.AR_QA", "kind": "variable", "doc": "<p></p>\n", "default_value": "Arabic"}, {"fullname": "main.askai.language.language.Language.AR_SA", "modulename": "main.askai.language.language", "qualname": "Language.AR_SA", "kind": "variable", "doc": "<p></p>\n", "default_value": "Arabic"}, {"fullname": "main.askai.language.language.Language.AR_TN", "modulename": "main.askai.language.language", "qualname": "Language.AR_TN", "kind": "variable", "doc": "<p></p>\n", "default_value": "Arabic"}, {"fullname": "main.askai.language.language.Language.AR_YE", "modulename": "main.askai.language.language", "qualname": "Language.AR_YE", "kind": "variable", "doc": "<p></p>\n", "default_value": "Arabic"}, {"fullname": "main.askai.language.language.Language.AS_IN", "modulename": "main.askai.language.language", "qualname": "Language.AS_IN", "kind": "variable", "doc": "<p></p>\n", "default_value": "Assamese"}, {"fullname": "main.askai.language.language.Language.AZ_AZ", "modulename": "main.askai.language.language", "qualname": "Language.AZ_AZ", "kind": "variable", "doc": "<p></p>\n", "default_value": "Azerbaijani"}, {"fullname": "main.askai.language.language.Language.BE_BY", "modulename": "main.askai.language.language", "qualname": "Language.BE_BY", "kind": "variable", "doc": "<p></p>\n", "default_value": "Belarusian"}, {"fullname": "main.askai.language.language.Language.BG_BG", "modulename": "main.askai.language.language", "qualname": "Language.BG_BG", "kind": "variable", "doc": "<p></p>\n", "default_value": "Bulgarian"}, {"fullname": "main.askai.language.language.Language.BN_IN", "modulename": "main.askai.language.language", "qualname": "Language.BN_IN", "kind": "variable", "doc": "<p></p>\n", "default_value": "Bengali"}, {"fullname": "main.askai.language.language.Language.BS_BA", "modulename": "main.askai.language.language", "qualname": "Language.BS_BA", "kind": "variable", "doc": "<p></p>\n", "default_value": "Bosnian"}, {"fullname": "main.askai.language.language.Language.CA_ES", "modulename": "main.askai.language.language", "qualname": "Language.CA_ES", "kind": "variable", "doc": "<p></p>\n", "default_value": "Catalan"}, {"fullname": "main.askai.language.language.Language.CS_CZ", "modulename": "main.askai.language.language", "qualname": "Language.CS_CZ", "kind": "variable", "doc": "<p></p>\n", "default_value": "Czech"}, {"fullname": "main.askai.language.language.Language.DA_DK", "modulename": "main.askai.language.language", "qualname": "Language.DA_DK", "kind": "variable", "doc": "<p></p>\n", "default_value": "Danish"}, {"fullname": "main.askai.language.language.Language.DE_AT", "modulename": "main.askai.language.language", "qualname": "Language.DE_AT", "kind": "variable", "doc": "<p></p>\n", "default_value": "German"}, {"fullname": "main.askai.language.language.Language.DE_BE", "modulename": "main.askai.language.language", "qualname": "Language.DE_BE", "kind": "variable", "doc": "<p></p>\n", "default_value": "German"}, {"fullname": "main.askai.language.language.Language.DE_CH", "modulename": "main.askai.language.language", "qualname": "Language.DE_CH", "kind": "variable", "doc": "<p></p>\n", "default_value": "German"}, {"fullname": "main.askai.language.language.Language.DE_DE", "modulename": "main.askai.language.language", "qualname": "Language.DE_DE", "kind": "variable", "doc": "<p></p>\n", "default_value": "German"}, {"fullname": "main.askai.language.language.Language.DE_LI", "modulename": "main.askai.language.language", "qualname": "Language.DE_LI", "kind": "variable", "doc": "<p></p>\n", "default_value": "German"}, {"fullname": "main.askai.language.language.Language.DE_LU", "modulename": "main.askai.language.language", "qualname": "Language.DE_LU", "kind": "variable", "doc": "<p></p>\n", "default_value": "German"}, {"fullname": "main.askai.language.language.Language.EL_CY", "modulename": "main.askai.language.language", "qualname": "Language.EL_CY", "kind": "variable", "doc": "<p></p>\n", "default_value": "Greek"}, {"fullname": "main.askai.language.language.Language.EL_GR", "modulename": "main.askai.language.language", "qualname": "Language.EL_GR", "kind": "variable", "doc": "<p></p>\n", "default_value": "Greek"}, {"fullname": "main.askai.language.language.Language.EN_AU", "modulename": "main.askai.language.language", "qualname": "Language.EN_AU", "kind": "variable", "doc": "<p></p>\n", "default_value": "English"}, {"fullname": "main.askai.language.language.Language.EN_BW", "modulename": "main.askai.language.language", "qualname": "Language.EN_BW", "kind": "variable", "doc": "<p></p>\n", "default_value": "English"}, {"fullname": "main.askai.language.language.Language.EN_CA", "modulename": "main.askai.language.language", "qualname": "Language.EN_CA", "kind": "variable", "doc": "<p></p>\n", "default_value": "English"}, {"fullname": "main.askai.language.language.Language.EN_GB", "modulename": "main.askai.language.language", "qualname": "Language.EN_GB", "kind": "variable", "doc": "<p></p>\n", "default_value": "English"}, {"fullname": "main.askai.language.language.Language.EN_HK", "modulename": "main.askai.language.language", "qualname": "Language.EN_HK", "kind": "variable", "doc": "<p></p>\n", "default_value": "English"}, {"fullname": "main.askai.language.language.Language.EN_IE", "modulename": "main.askai.language.language", "qualname": "Language.EN_IE", "kind": "variable", "doc": "<p></p>\n", "default_value": "English"}, {"fullname": "main.askai.language.language.Language.EN_IN", "modulename": "main.askai.language.language", "qualname": "Language.EN_IN", "kind": "variable", "doc": "<p></p>\n", "default_value": "English"}, {"fullname": "main.askai.language.language.Language.EN_MT", "modulename": "main.askai.language.language", "qualname": "Language.EN_MT", "kind": "variable", "doc": "<p></p>\n", "default_value": "English"}, {"fullname": "main.askai.language.language.Language.EN_NZ", "modulename": "main.askai.language.language", "qualname": "Language.EN_NZ", "kind": "variable", "doc": "<p></p>\n", "default_value": "English"}, {"fullname": "main.askai.language.language.Language.EN_PH", "modulename": "main.askai.language.language", "qualname": "Language.EN_PH", "kind": "variable", "doc": "<p></p>\n", "default_value": "English"}, {"fullname": "main.askai.language.language.Language.EN_SG", "modulename": "main.askai.language.language", "qualname": "Language.EN_SG", "kind": "variable", "doc": "<p></p>\n", "default_value": "English"}, {"fullname": "main.askai.language.language.Language.EN_US", "modulename": "main.askai.language.language", "qualname": "Language.EN_US", "kind": "variable", "doc": "<p></p>\n", "default_value": "English"}, {"fullname": "main.askai.language.language.Language.EN_ZW", "modulename": "main.askai.language.language", "qualname": "Language.EN_ZW", "kind": "variable", "doc": "<p></p>\n", "default_value": "English"}, {"fullname": "main.askai.language.language.Language.ES_AR", "modulename": "main.askai.language.language", "qualname": "Language.ES_AR", "kind": "variable", "doc": "<p></p>\n", "default_value": "Spanish"}, {"fullname": "main.askai.language.language.Language.ES_BO", "modulename": "main.askai.language.language", "qualname": "Language.ES_BO", "kind": "variable", "doc": "<p></p>\n", "default_value": "Spanish"}, {"fullname": "main.askai.language.language.Language.ES_CL", "modulename": "main.askai.language.language", "qualname": "Language.ES_CL", "kind": "variable", "doc": "<p></p>\n", "default_value": "Spanish"}, {"fullname": "main.askai.language.language.Language.ES_CO", "modulename": "main.askai.language.language", "qualname": "Language.ES_CO", "kind": "variable", "doc": "<p></p>\n", "default_value": "Spanish"}, {"fullname": "main.askai.language.language.Language.ES_CR", "modulename": "main.askai.language.language", "qualname": "Language.ES_CR", "kind": "variable", "doc": "<p></p>\n", "default_value": "Spanish"}, {"fullname": "main.askai.language.language.Language.ES_DO", "modulename": "main.askai.language.language", "qualname": "Language.ES_DO", "kind": "variable", "doc": "<p></p>\n", "default_value": "Spanish"}, {"fullname": "main.askai.language.language.Language.ES_EC", "modulename": "main.askai.language.language", "qualname": "Language.ES_EC", "kind": "variable", "doc": "<p></p>\n", "default_value": "Spanish"}, {"fullname": "main.askai.language.language.Language.ES_ES", "modulename": "main.askai.language.language", "qualname": "Language.ES_ES", "kind": "variable", "doc": "<p></p>\n", "default_value": "Spanish"}, {"fullname": "main.askai.language.language.Language.ES_GT", "modulename": "main.askai.language.language", "qualname": "Language.ES_GT", "kind": "variable", "doc": "<p></p>\n", "default_value": "Spanish"}, {"fullname": "main.askai.language.language.Language.ES_HN", "modulename": "main.askai.language.language", "qualname": "Language.ES_HN", "kind": "variable", "doc": "<p></p>\n", "default_value": "Spanish"}, {"fullname": "main.askai.language.language.Language.ES_MX", "modulename": "main.askai.language.language", "qualname": "Language.ES_MX", "kind": "variable", "doc": "<p></p>\n", "default_value": "Spanish"}, {"fullname": "main.askai.language.language.Language.ES_NI", "modulename": "main.askai.language.language", "qualname": "Language.ES_NI", "kind": "variable", "doc": "<p></p>\n", "default_value": "Spanish"}, {"fullname": "main.askai.language.language.Language.ES_PA", "modulename": "main.askai.language.language", "qualname": "Language.ES_PA", "kind": "variable", "doc": "<p></p>\n", "default_value": "Spanish"}, {"fullname": "main.askai.language.language.Language.ES_PE", "modulename": "main.askai.language.language", "qualname": "Language.ES_PE", "kind": "variable", "doc": "<p></p>\n", "default_value": "Spanish"}, {"fullname": "main.askai.language.language.Language.ES_PR", "modulename": "main.askai.language.language", "qualname": "Language.ES_PR", "kind": "variable", "doc": "<p></p>\n", "default_value": "Spanish"}, {"fullname": "main.askai.language.language.Language.ES_PY", "modulename": "main.askai.language.language", "qualname": "Language.ES_PY", "kind": "variable", "doc": "<p></p>\n", "default_value": "Spanish"}, {"fullname": "main.askai.language.language.Language.ES_SV", "modulename": "main.askai.language.language", "qualname": "Language.ES_SV", "kind": "variable", "doc": "<p></p>\n", "default_value": "Spanish"}, {"fullname": "main.askai.language.language.Language.ES_US", "modulename": "main.askai.language.language", "qualname": "Language.ES_US", "kind": "variable", "doc": "<p></p>\n", "default_value": "Spanish"}, {"fullname": "main.askai.language.language.Language.ES_UY", "modulename": "main.askai.language.language", "qualname": "Language.ES_UY", "kind": "variable", "doc": "<p></p>\n", "default_value": "Spanish"}, {"fullname": "main.askai.language.language.Language.ES_VE", "modulename": "main.askai.language.language", "qualname": "Language.ES_VE", "kind": "variable", "doc": "<p></p>\n", "default_value": "Spanish"}, {"fullname": "main.askai.language.language.Language.ET_EE", "modulename": "main.askai.language.language", "qualname": "Language.ET_EE", "kind": "variable", "doc": "<p></p>\n", "default_value": "Estonian"}, {"fullname": "main.askai.language.language.Language.FI_FI", "modulename": "main.askai.language.language", "qualname": "Language.FI_FI", "kind": "variable", "doc": "<p></p>\n", "default_value": "Finnish"}, {"fullname": "main.askai.language.language.Language.FR_BE", "modulename": "main.askai.language.language", "qualname": "Language.FR_BE", "kind": "variable", "doc": "<p></p>\n", "default_value": "French"}, {"fullname": "main.askai.language.language.Language.FR_CA", "modulename": "main.askai.language.language", "qualname": "Language.FR_CA", "kind": "variable", "doc": "<p></p>\n", "default_value": "French"}, {"fullname": "main.askai.language.language.Language.FR_CH", "modulename": "main.askai.language.language", "qualname": "Language.FR_CH", "kind": "variable", "doc": "<p></p>\n", "default_value": "French"}, {"fullname": "main.askai.language.language.Language.FR_FR", "modulename": "main.askai.language.language", "qualname": "Language.FR_FR", "kind": "variable", "doc": "<p></p>\n", "default_value": "French"}, {"fullname": "main.askai.language.language.Language.FR_LU", "modulename": "main.askai.language.language", "qualname": "Language.FR_LU", "kind": "variable", "doc": "<p></p>\n", "default_value": "French"}, {"fullname": "main.askai.language.language.Language.GU_IN", "modulename": "main.askai.language.language", "qualname": "Language.GU_IN", "kind": "variable", "doc": "<p></p>\n", "default_value": "Gujarati"}, {"fullname": "main.askai.language.language.Language.HE_IL", "modulename": "main.askai.language.language", "qualname": "Language.HE_IL", "kind": "variable", "doc": "<p></p>\n", "default_value": "Hebrew"}, {"fullname": "main.askai.language.language.Language.HI_IN", "modulename": "main.askai.language.language", "qualname": "Language.HI_IN", "kind": "variable", "doc": "<p></p>\n", "default_value": "Hindi"}, {"fullname": "main.askai.language.language.Language.HR_HR", "modulename": "main.askai.language.language", "qualname": "Language.HR_HR", "kind": "variable", "doc": "<p></p>\n", "default_value": "Croatian"}, {"fullname": "main.askai.language.language.Language.HU_HU", "modulename": "main.askai.language.language", "qualname": "Language.HU_HU", "kind": "variable", "doc": "<p></p>\n", "default_value": "Hungarian"}, {"fullname": "main.askai.language.language.Language.HY_AM", "modulename": "main.askai.language.language", "qualname": "Language.HY_AM", "kind": "variable", "doc": "<p></p>\n", "default_value": "Armenian"}, {"fullname": "main.askai.language.language.Language.ID_ID", "modulename": "main.askai.language.language", "qualname": "Language.ID_ID", "kind": "variable", "doc": "<p></p>\n", "default_value": "Indonesian"}, {"fullname": "main.askai.language.language.Language.IS_IS", "modulename": "main.askai.language.language", "qualname": "Language.IS_IS", "kind": "variable", "doc": "<p></p>\n", "default_value": "Icelandic"}, {"fullname": "main.askai.language.language.Language.IT_CH", "modulename": "main.askai.language.language", "qualname": "Language.IT_CH", "kind": "variable", "doc": "<p></p>\n", "default_value": "Italian"}, {"fullname": "main.askai.language.language.Language.IT_IT", "modulename": "main.askai.language.language", "qualname": "Language.IT_IT", "kind": "variable", "doc": "<p></p>\n", "default_value": "Italian"}, {"fullname": "main.askai.language.language.Language.JA_JP", "modulename": "main.askai.language.language", "qualname": "Language.JA_JP", "kind": "variable", "doc": "<p></p>\n", "default_value": "Japanese"}, {"fullname": "main.askai.language.language.Language.KA_GE", "modulename": "main.askai.language.language", "qualname": "Language.KA_GE", "kind": "variable", "doc": "<p></p>\n", "default_value": "Georgian"}, {"fullname": "main.askai.language.language.Language.KK_KZ", "modulename": "main.askai.language.language", "qualname": "Language.KK_KZ", "kind": "variable", "doc": "<p></p>\n", "default_value": "Kazakh"}, {"fullname": "main.askai.language.language.Language.KN_IN", "modulename": "main.askai.language.language", "qualname": "Language.KN_IN", "kind": "variable", "doc": "<p></p>\n", "default_value": "Kannada"}, {"fullname": "main.askai.language.language.Language.KO_KR", "modulename": "main.askai.language.language", "qualname": "Language.KO_KR", "kind": "variable", "doc": "<p></p>\n", "default_value": "Korean"}, {"fullname": "main.askai.language.language.Language.KS_IN", "modulename": "main.askai.language.language", "qualname": "Language.KS_IN", "kind": "variable", "doc": "<p></p>\n", "default_value": "Kashmiri"}, {"fullname": "main.askai.language.language.Language.KU_TR", "modulename": "main.askai.language.language", "qualname": "Language.KU_TR", "kind": "variable", "doc": "<p></p>\n", "default_value": "Kurdish"}, {"fullname": "main.askai.language.language.Language.KY_KG", "modulename": "main.askai.language.language", "qualname": "Language.KY_KG", "kind": "variable", "doc": "<p></p>\n", "default_value": "Kirghiz"}, {"fullname": "main.askai.language.language.Language.LT_LT", "modulename": "main.askai.language.language", "qualname": "Language.LT_LT", "kind": "variable", "doc": "<p></p>\n", "default_value": "Lithuanian"}, {"fullname": "main.askai.language.language.Language.LV_LV", "modulename": "main.askai.language.language", "qualname": "Language.LV_LV", "kind": "variable", "doc": "<p></p>\n", "default_value": "Latvian"}, {"fullname": "main.askai.language.language.Language.MK_MK", "modulename": "main.askai.language.language", "qualname": "Language.MK_MK", "kind": "variable", "doc": "<p></p>\n", "default_value": "Macedonian"}, {"fullname": "main.askai.language.language.Language.ML_IN", "modulename": "main.askai.language.language", "qualname": "Language.ML_IN", "kind": "variable", "doc": "<p></p>\n", "default_value": "Malayalam"}, {"fullname": "main.askai.language.language.Language.MR_IN", "modulename": "main.askai.language.language", "qualname": "Language.MR_IN", "kind": "variable", "doc": "<p></p>\n", "default_value": "Marathi"}, {"fullname": "main.askai.language.language.Language.MS_MY", "modulename": "main.askai.language.language", "qualname": "Language.MS_MY", "kind": "variable", "doc": "<p></p>\n", "default_value": "Malay"}, {"fullname": "main.askai.language.language.Language.MT_MT", "modulename": "main.askai.language.language", "qualname": "Language.MT_MT", "kind": "variable", "doc": "<p></p>\n", "default_value": "Maltese"}, {"fullname": "main.askai.language.language.Language.NB_NO", "modulename": "main.askai.language.language", "qualname": "Language.NB_NO", "kind": "variable", "doc": "<p></p>\n", "default_value": "Bokmal"}, {"fullname": "main.askai.language.language.Language.NL_BE", "modulename": "main.askai.language.language", "qualname": "Language.NL_BE", "kind": "variable", "doc": "<p></p>\n", "default_value": "Dutch"}, {"fullname": "main.askai.language.language.Language.NL_NL", "modulename": "main.askai.language.language", "qualname": "Language.NL_NL", "kind": "variable", "doc": "<p></p>\n", "default_value": "Dutch"}, {"fullname": "main.askai.language.language.Language.NN_NO", "modulename": "main.askai.language.language", "qualname": "Language.NN_NO", "kind": "variable", "doc": "<p></p>\n", "default_value": "Nynorsk"}, {"fullname": "main.askai.language.language.Language.OR_IN", "modulename": "main.askai.language.language", "qualname": "Language.OR_IN", "kind": "variable", "doc": "<p></p>\n", "default_value": "Oriya"}, {"fullname": "main.askai.language.language.Language.PA_IN", "modulename": "main.askai.language.language", "qualname": "Language.PA_IN", "kind": "variable", "doc": "<p></p>\n", "default_value": "Punjabi"}, {"fullname": "main.askai.language.language.Language.PL_PL", "modulename": "main.askai.language.language", "qualname": "Language.PL_PL", "kind": "variable", "doc": "<p></p>\n", "default_value": "Polish"}, {"fullname": "main.askai.language.language.Language.PT_BR", "modulename": "main.askai.language.language", "qualname": "Language.PT_BR", "kind": "variable", "doc": "<p></p>\n", "default_value": "Portuguese"}, {"fullname": "main.askai.language.language.Language.PT_PT", "modulename": "main.askai.language.language", "qualname": "Language.PT_PT", "kind": "variable", "doc": "<p></p>\n", "default_value": "Portuguese"}, {"fullname": "main.askai.language.language.Language.RO_RO", "modulename": "main.askai.language.language", "qualname": "Language.RO_RO", "kind": "variable", "doc": "<p></p>\n", "default_value": "Romanian"}, {"fullname": "main.askai.language.language.Language.RU_RU", "modulename": "main.askai.language.language", "qualname": "Language.RU_RU", "kind": "variable", "doc": "<p></p>\n", "default_value": "Russian"}, {"fullname": "main.askai.language.language.Language.RU_UA", "modulename": "main.askai.language.language", "qualname": "Language.RU_UA", "kind": "variable", "doc": "<p></p>\n", "default_value": "Russian"}, {"fullname": "main.askai.language.language.Language.SA_IN", "modulename": "main.askai.language.language", "qualname": "Language.SA_IN", "kind": "variable", "doc": "<p></p>\n", "default_value": "Sanskrit"}, {"fullname": "main.askai.language.language.Language.SK_SK", "modulename": "main.askai.language.language", "qualname": "Language.SK_SK", "kind": "variable", "doc": "<p></p>\n", "default_value": "Slovak"}, {"fullname": "main.askai.language.language.Language.SL_SI", "modulename": "main.askai.language.language", "qualname": "Language.SL_SI", "kind": "variable", "doc": "<p></p>\n", "default_value": "Slovenian"}, {"fullname": "main.askai.language.language.Language.SQ_AL", "modulename": "main.askai.language.language", "qualname": "Language.SQ_AL", "kind": "variable", "doc": "<p></p>\n", "default_value": "Albanian"}, {"fullname": "main.askai.language.language.Language.SR_ME", "modulename": "main.askai.language.language", "qualname": "Language.SR_ME", "kind": "variable", "doc": "<p></p>\n", "default_value": "Serbian"}, {"fullname": "main.askai.language.language.Language.SR_RS", "modulename": "main.askai.language.language", "qualname": "Language.SR_RS", "kind": "variable", "doc": "<p></p>\n", "default_value": "Serbian"}, {"fullname": "main.askai.language.language.Language.SV_SE", "modulename": "main.askai.language.language", "qualname": "Language.SV_SE", "kind": "variable", "doc": "<p></p>\n", "default_value": "Swedish"}, {"fullname": "main.askai.language.language.Language.TA_IN", "modulename": "main.askai.language.language", "qualname": "Language.TA_IN", "kind": "variable", "doc": "<p></p>\n", "default_value": "Tamil"}, {"fullname": "main.askai.language.language.Language.TE_IN", "modulename": "main.askai.language.language", "qualname": "Language.TE_IN", "kind": "variable", "doc": "<p></p>\n", "default_value": "Telugu"}, {"fullname": "main.askai.language.language.Language.TH_TH", "modulename": "main.askai.language.language", "qualname": "Language.TH_TH", "kind": "variable", "doc": "<p></p>\n", "default_value": "Thai"}, {"fullname": "main.askai.language.language.Language.TR_TR", "modulename": "main.askai.language.language", "qualname": "Language.TR_TR", "kind": "variable", "doc": "<p></p>\n", "default_value": "Turkish"}, {"fullname": "main.askai.language.language.Language.UK_UA", "modulename": "main.askai.language.language", "qualname": "Language.UK_UA", "kind": "variable", "doc": "<p></p>\n", "default_value": "Ukrainian"}, {"fullname": "main.askai.language.language.Language.VI_VN", "modulename": "main.askai.language.language", "qualname": "Language.VI_VN", "kind": "variable", "doc": "<p></p>\n", "default_value": "Vietnamese"}, {"fullname": "main.askai.language.language.Language.ZH_CN", "modulename": "main.askai.language.language", "qualname": "Language.ZH_CN", "kind": "variable", "doc": "<p></p>\n", "default_value": "Simplified Chinese"}, {"fullname": "main.askai.language.language.Language.ZH_HK", "modulename": "main.askai.language.language", "qualname": "Language.ZH_HK", "kind": "variable", "doc": "<p></p>\n", "default_value": "Traditional Chinese"}, {"fullname": "main.askai.language.language.Language.ZH_SG", "modulename": "main.askai.language.language", "qualname": "Language.ZH_SG", "kind": "variable", "doc": "<p></p>\n", "default_value": "Chinese"}, {"fullname": "main.askai.language.language.Language.ZH_TW", "modulename": "main.askai.language.language", "qualname": "Language.ZH_TW", "kind": "variable", "doc": "<p></p>\n", "default_value": "Traditional Chinese"}, {"fullname": "main.askai.language.language.Language.of_locale", "modulename": "main.askai.language.language", "qualname": "Language.of_locale", "kind": "function", "doc": "<p>Create a Language object based on a locale string or tuple containing the language code and encoding.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>loc</strong>:  The locale to parse.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A Language instance corresponding to the provided locale.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">loc</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">main</span><span class=\"o\">.</span><span class=\"n\">askai</span><span class=\"o\">.</span><span class=\"n\">language</span><span class=\"o\">.</span><span class=\"n\">language</span><span class=\"o\">.</span><span class=\"n\">Language</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.language.language.Language.locale", "modulename": "main.askai.language.language", "qualname": "Language.locale", "kind": "variable", "doc": "<p>Return a tuple containing the locale attributes.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A tuple with locale attributes, e.g., (en_US, utf-8).</p>\n</blockquote>\n", "annotation": ": tuple[str, hspylib.core.enums.charset.Charset]"}, {"fullname": "main.askai.language.language.Language.idiom", "modulename": "main.askai.language.language", "qualname": "Language.idiom", "kind": "variable", "doc": "<p>Return a string representing the idiom.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The idiom as a string, e.g., en_US.</p>\n</blockquote>\n", "annotation": ": str"}, {"fullname": "main.askai.language.language.Language.encoding", "modulename": "main.askai.language.language", "qualname": "Language.encoding", "kind": "variable", "doc": "<p>Return the charset (encoding) required for the language to be properly displayed.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The charset (encoding), e.g., utf-8.</p>\n</blockquote>\n", "annotation": ": hspylib.core.enums.charset.Charset"}, {"fullname": "main.askai.language.language.Language.name", "modulename": "main.askai.language.language", "qualname": "Language.name", "kind": "variable", "doc": "<p>Return the language name.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The name of the language, e.g., English.</p>\n</blockquote>\n", "annotation": ": str"}, {"fullname": "main.askai.language.language.Language.country", "modulename": "main.askai.language.language", "qualname": "Language.country", "kind": "variable", "doc": "<p>Return the country where the language is spoken.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The country where the language is spoken, e.g., U.S.A.</p>\n</blockquote>\n", "annotation": ": str"}, {"fullname": "main.askai.language.language.Language.language", "modulename": "main.askai.language.language", "qualname": "Language.language", "kind": "variable", "doc": "<p>Return a mnemonic representing the language.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The mnemonic representing the language, e.g., en.</p>\n</blockquote>\n", "annotation": ": str"}, {"fullname": "main.askai.language.language.Language.territory", "modulename": "main.askai.language.language", "qualname": "Language.territory", "kind": "variable", "doc": "<p>Return a mnemonic representing the territory (Alpha-2 code).</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The mnemonic representing the territory, e.g., US.</p>\n</blockquote>\n", "annotation": ": str"}, {"fullname": "main.askai.language.translators", "modulename": "main.askai.language.translators", "kind": "module", "doc": "<p>Package initialization.</p>\n"}, {"fullname": "main.askai.language.translators.argos_translator", "modulename": "main.askai.language.translators.argos_translator", "kind": "module", "doc": "<p>@project: HsPyLib-AskAI\n@package: askai.language.argos_translator\n   @file: argos_translator.py\n@created: Fri, 5 Jan 2024\n @author: <B>H</B>ugo <B>S</B>aporetti <B>J</B>unior\n   @site: <a href=\"https://github.com/yorevs/askai\">https://github.com/yorevs/askai</a>\n@license: MIT - Please refer to <a href=\"https://opensource.org/licenses/MIT\">https://opensource.org/licenses/MIT</a></p>\n\n<p>Copyright (c) 2024, AskAI</p>\n"}, {"fullname": "main.askai.language.translators.argos_translator.ArgosTranslator", "modulename": "main.askai.language.translators.argos_translator", "qualname": "ArgosTranslator", "kind": "class", "doc": "<p>Provides a multilingual offline translation engine using ARGOS translate.\nReference: <a href=\"https://github.com/argosopentech/argos-translate\">https://github.com/argosopentech/argos-translate</a>\nLanguage packages are downloaded at: ~/.local/share/argos-translate/packages</p>\n", "bases": "askai.language.ai_translator.AITranslator"}, {"fullname": "main.askai.language.translators.argos_translator.ArgosTranslator.__init__", "modulename": "main.askai.language.translators.argos_translator", "qualname": "ArgosTranslator.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">from_idiom</span><span class=\"p\">:</span> <span class=\"n\">askai</span><span class=\"o\">.</span><span class=\"n\">language</span><span class=\"o\">.</span><span class=\"n\">language</span><span class=\"o\">.</span><span class=\"n\">Language</span>,</span><span class=\"param\">\t<span class=\"n\">to_idiom</span><span class=\"p\">:</span> <span class=\"n\">askai</span><span class=\"o\">.</span><span class=\"n\">language</span><span class=\"o\">.</span><span class=\"n\">language</span><span class=\"o\">.</span><span class=\"n\">Language</span></span>)</span>"}, {"fullname": "main.askai.language.translators.argos_translator.ArgosTranslator.translate", "modulename": "main.askai.language.translators.argos_translator", "qualname": "ArgosTranslator.translate", "kind": "function", "doc": "<p>Translate text from the source language to the target language.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>text</strong>:  Text to translate.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The translated text.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">text</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.language.translators.argos_translator.ArgosTranslator.name", "modulename": "main.askai.language.translators.argos_translator", "qualname": "ArgosTranslator.name", "kind": "function", "doc": "<p>Return the translator name or model.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The name or model of the translator.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.language.translators.deepl_translator", "modulename": "main.askai.language.translators.deepl_translator", "kind": "module", "doc": "<p>@project: HsPyLib-AskAI\n@package: askai.language.argos_translator\n   @file: argos_translator.py\n@created: Fri, 5 Jan 2024\n @author: <B>H</B>ugo <B>S</B>aporetti <B>J</B>unior\n   @site: <a href=\"https://github.com/yorevs/askai\">https://github.com/yorevs/askai</a>\n@license: MIT - Please refer to <a href=\"https://opensource.org/licenses/MIT\">https://opensource.org/licenses/MIT</a></p>\n\n<p>Copyright (c) 2024, AskAI</p>\n"}, {"fullname": "main.askai.language.translators.deepl_translator.DeepLTranslator", "modulename": "main.askai.language.translators.deepl_translator", "qualname": "DeepLTranslator", "kind": "class", "doc": "<p>Provides a multilingual online translation engine using DeepL translator.\nReference: <a href=\"https://hnd.www.deepl.com/en/translator\">https://hnd.www.deepl.com/en/translator</a></p>\n", "bases": "askai.language.ai_translator.AITranslator"}, {"fullname": "main.askai.language.translators.deepl_translator.DeepLTranslator.__init__", "modulename": "main.askai.language.translators.deepl_translator", "qualname": "DeepLTranslator.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">source_lang</span><span class=\"p\">:</span> <span class=\"n\">askai</span><span class=\"o\">.</span><span class=\"n\">language</span><span class=\"o\">.</span><span class=\"n\">language</span><span class=\"o\">.</span><span class=\"n\">Language</span>,</span><span class=\"param\">\t<span class=\"n\">target_lang</span><span class=\"p\">:</span> <span class=\"n\">askai</span><span class=\"o\">.</span><span class=\"n\">language</span><span class=\"o\">.</span><span class=\"n\">language</span><span class=\"o\">.</span><span class=\"n\">Language</span></span>)</span>"}, {"fullname": "main.askai.language.translators.deepl_translator.DeepLTranslator.translate", "modulename": "main.askai.language.translators.deepl_translator", "qualname": "DeepLTranslator.translate", "kind": "function", "doc": "<p>Translate text from the source language to the target language.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>text</strong>:  Text to translate.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The translated text.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">text</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.language.translators.deepl_translator.DeepLTranslator.name", "modulename": "main.askai.language.translators.deepl_translator", "qualname": "DeepLTranslator.name", "kind": "function", "doc": "<p>Return the translator name or model.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The name or model of the translator.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.language.translators.marian_translator", "modulename": "main.askai.language.translators.marian_translator", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "main.askai.language.translators.marian_translator.MarianTranslator", "modulename": "main.askai.language.translators.marian_translator", "qualname": "MarianTranslator", "kind": "class", "doc": "<p>Provides a multilingual offline translation engine using Marian translator.\nReference: <a href=\"https://marian-nmt.github.io/\">https://marian-nmt.github.io/</a></p>\n", "bases": "askai.language.ai_translator.AITranslator"}, {"fullname": "main.askai.language.translators.marian_translator.MarianTranslator.__init__", "modulename": "main.askai.language.translators.marian_translator", "qualname": "MarianTranslator.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">from_idiom</span><span class=\"p\">:</span> <span class=\"n\">askai</span><span class=\"o\">.</span><span class=\"n\">language</span><span class=\"o\">.</span><span class=\"n\">language</span><span class=\"o\">.</span><span class=\"n\">Language</span>,</span><span class=\"param\">\t<span class=\"n\">to_idiom</span><span class=\"p\">:</span> <span class=\"n\">askai</span><span class=\"o\">.</span><span class=\"n\">language</span><span class=\"o\">.</span><span class=\"n\">language</span><span class=\"o\">.</span><span class=\"n\">Language</span></span>)</span>"}, {"fullname": "main.askai.language.translators.marian_translator.MarianTranslator.MODEL_NAME", "modulename": "main.askai.language.translators.marian_translator", "qualname": "MarianTranslator.MODEL_NAME", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;Helsinki-NLP/opus-mt-en-ROMANCE&#x27;"}, {"fullname": "main.askai.language.translators.marian_translator.MarianTranslator.translate", "modulename": "main.askai.language.translators.marian_translator", "qualname": "MarianTranslator.translate", "kind": "function", "doc": "<p>Translate text from the source language to the target language.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>text</strong>:  Text to translate.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The translated text.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">text</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.language.translators.marian_translator.MarianTranslator.name", "modulename": "main.askai.language.translators.marian_translator", "qualname": "MarianTranslator.name", "kind": "function", "doc": "<p>Return the translator name or model.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The name or model of the translator.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.tui", "modulename": "main.askai.tui", "kind": "module", "doc": "<p>Package initialization.</p>\n"}, {"fullname": "main.askai.tui.app_header", "modulename": "main.askai.tui.app_header", "kind": "module", "doc": "<p>@project: HsPyLib-AskAI\n@package: askai.tui.header\n   @file: app_header.py\n@created: Mon, 29 Apr 2024\n @author: <B>H</B>ugo <B>S</B>aporetti <B>J</B>unior\n   @site: <a href=\"https://github.com/yorevs/askai\">https://github.com/yorevs/askai</a>\n@license: MIT - Please refer to <a href=\"https://opensource.org/licenses/MIT\">https://opensource.org/licenses/MIT</a></p>\n\n<p>Copyright (c) 2024, AskAI</p>\n"}, {"fullname": "main.askai.tui.app_header.Header", "modulename": "main.askai.tui.app_header", "qualname": "Header", "kind": "class", "doc": "<p>A header widget with icon and notifications.</p>\n", "bases": "textual.widget.Widget"}, {"fullname": "main.askai.tui.app_header.Header.__init__", "modulename": "main.askai.tui.app_header", "qualname": "Header.__init__", "kind": "function", "doc": "<p>Initialize a Widget.</p>\n\n<p>Args:\n    *children: Child widgets.\n    name: The name of the widget.\n    id: The ID of the widget in the DOM.\n    classes: The CSS classes for the widget.\n    disabled: Whether the widget is disabled or not.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, {"fullname": "main.askai.tui.app_header.Header.notifications", "modulename": "main.askai.tui.app_header", "qualname": "Header.notifications", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "main.askai.tui.app_header.Header.screen_title", "modulename": "main.askai.tui.app_header", "qualname": "Header.screen_title", "kind": "variable", "doc": "<p>The title that this header will display.</p>\n", "annotation": ": str"}, {"fullname": "main.askai.tui.app_header.Header.screen_sub_title", "modulename": "main.askai.tui.app_header", "qualname": "Header.screen_sub_title", "kind": "variable", "doc": "<p>The sub-title that this header will display.</p>\n", "annotation": ": str"}, {"fullname": "main.askai.tui.app_header.Header.compose", "modulename": "main.askai.tui.app_header", "qualname": "Header.compose", "kind": "function", "doc": "<p>Compose the Header Widget.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "main.askai.tui.app_header.Header.can_focus", "modulename": "main.askai.tui.app_header", "qualname": "Header.can_focus", "kind": "variable", "doc": "<p>Widget may receive focus.</p>\n", "annotation": ": bool", "default_value": "False"}, {"fullname": "main.askai.tui.app_header.Header.can_focus_children", "modulename": "main.askai.tui.app_header", "qualname": "Header.can_focus_children", "kind": "variable", "doc": "<p>Widget's children may receive focus.</p>\n", "annotation": ": bool", "default_value": "True"}, {"fullname": "main.askai.tui.app_header.HeaderTitle", "modulename": "main.askai.tui.app_header", "qualname": "HeaderTitle", "kind": "class", "doc": "<p>Display the title / subtitle in the header.</p>\n", "bases": "textual.widget.Widget"}, {"fullname": "main.askai.tui.app_header.HeaderTitle.text", "modulename": "main.askai.tui.app_header", "qualname": "HeaderTitle.text", "kind": "variable", "doc": "<p>Reactive descriptor.</p>\n\n<p>Args:\n    default: A default value or callable that returns a default.\n    layout: Perform a layout on change.\n    repaint: Perform a repaint on change.\n    init: Call watchers on initialize (post mount).\n    always_update: Call watchers even when the new value equals the old value.\n    compute: Run compute methods when attribute is changed.\n    recompose: Compose the widget again when the attribute changes.\n    bindings: Refresh bindings when the reactive changes.</p>\n"}, {"fullname": "main.askai.tui.app_header.HeaderTitle.sub_text", "modulename": "main.askai.tui.app_header", "qualname": "HeaderTitle.sub_text", "kind": "variable", "doc": "<p>Reactive descriptor.</p>\n\n<p>Args:\n    default: A default value or callable that returns a default.\n    layout: Perform a layout on change.\n    repaint: Perform a repaint on change.\n    init: Call watchers on initialize (post mount).\n    always_update: Call watchers even when the new value equals the old value.\n    compute: Run compute methods when attribute is changed.\n    recompose: Compose the widget again when the attribute changes.\n    bindings: Refresh bindings when the reactive changes.</p>\n"}, {"fullname": "main.askai.tui.app_header.HeaderTitle.render", "modulename": "main.askai.tui.app_header", "qualname": "HeaderTitle.render", "kind": "function", "doc": "<p>Render the title and sub-title.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">rich</span><span class=\"o\">.</span><span class=\"n\">console</span><span class=\"o\">.</span><span class=\"n\">ConsoleRenderable</span><span class=\"p\">,</span> <span class=\"n\">rich</span><span class=\"o\">.</span><span class=\"n\">console</span><span class=\"o\">.</span><span class=\"n\">RichCast</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.tui.app_header.HeaderTitle.can_focus", "modulename": "main.askai.tui.app_header", "qualname": "HeaderTitle.can_focus", "kind": "variable", "doc": "<p>Widget may receive focus.</p>\n", "annotation": ": bool", "default_value": "False"}, {"fullname": "main.askai.tui.app_header.HeaderTitle.can_focus_children", "modulename": "main.askai.tui.app_header", "qualname": "HeaderTitle.can_focus_children", "kind": "variable", "doc": "<p>Widget's children may receive focus.</p>\n", "annotation": ": bool", "default_value": "True"}, {"fullname": "main.askai.tui.app_header.HeaderNotifications", "modulename": "main.askai.tui.app_header", "qualname": "HeaderNotifications", "kind": "class", "doc": "<p>Display a notification widget on the right of the header.</p>\n", "bases": "textual.widget.Widget"}, {"fullname": "main.askai.tui.app_header.HeaderNotifications.__init__", "modulename": "main.askai.tui.app_header", "qualname": "HeaderNotifications.__init__", "kind": "function", "doc": "<p>Initialize a Widget.</p>\n\n<p>Args:\n    *children: Child widgets.\n    name: The name of the widget.\n    id: The ID of the widget in the DOM.\n    classes: The CSS classes for the widget.\n    disabled: Whether the widget is disabled or not.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, {"fullname": "main.askai.tui.app_header.HeaderNotifications.speaking", "modulename": "main.askai.tui.app_header", "qualname": "HeaderNotifications.speaking", "kind": "variable", "doc": "<p>Reactive descriptor.</p>\n\n<p>Args:\n    default: A default value or callable that returns a default.\n    layout: Perform a layout on change.\n    repaint: Perform a repaint on change.\n    init: Call watchers on initialize (post mount).\n    always_update: Call watchers even when the new value equals the old value.\n    compute: Run compute methods when attribute is changed.\n    recompose: Compose the widget again when the attribute changes.\n    bindings: Refresh bindings when the reactive changes.</p>\n"}, {"fullname": "main.askai.tui.app_header.HeaderNotifications.debugging", "modulename": "main.askai.tui.app_header", "qualname": "HeaderNotifications.debugging", "kind": "variable", "doc": "<p>Reactive descriptor.</p>\n\n<p>Args:\n    default: A default value or callable that returns a default.\n    layout: Perform a layout on change.\n    repaint: Perform a repaint on change.\n    init: Call watchers on initialize (post mount).\n    always_update: Call watchers even when the new value equals the old value.\n    compute: Run compute methods when attribute is changed.\n    recompose: Compose the widget again when the attribute changes.\n    bindings: Refresh bindings when the reactive changes.</p>\n"}, {"fullname": "main.askai.tui.app_header.HeaderNotifications.caching", "modulename": "main.askai.tui.app_header", "qualname": "HeaderNotifications.caching", "kind": "variable", "doc": "<p>Reactive descriptor.</p>\n\n<p>Args:\n    default: A default value or callable that returns a default.\n    layout: Perform a layout on change.\n    repaint: Perform a repaint on change.\n    init: Call watchers on initialize (post mount).\n    always_update: Call watchers even when the new value equals the old value.\n    compute: Run compute methods when attribute is changed.\n    recompose: Compose the widget again when the attribute changes.\n    bindings: Refresh bindings when the reactive changes.</p>\n"}, {"fullname": "main.askai.tui.app_header.HeaderNotifications.listening", "modulename": "main.askai.tui.app_header", "qualname": "HeaderNotifications.listening", "kind": "variable", "doc": "<p>Reactive descriptor.</p>\n\n<p>Args:\n    default: A default value or callable that returns a default.\n    layout: Perform a layout on change.\n    repaint: Perform a repaint on change.\n    init: Call watchers on initialize (post mount).\n    always_update: Call watchers even when the new value equals the old value.\n    compute: Run compute methods when attribute is changed.\n    recompose: Compose the widget again when the attribute changes.\n    bindings: Refresh bindings when the reactive changes.</p>\n"}, {"fullname": "main.askai.tui.app_header.HeaderNotifications.headphones", "modulename": "main.askai.tui.app_header", "qualname": "HeaderNotifications.headphones", "kind": "variable", "doc": "<p>Reactive descriptor.</p>\n\n<p>Args:\n    default: A default value or callable that returns a default.\n    layout: Perform a layout on change.\n    repaint: Perform a repaint on change.\n    init: Call watchers on initialize (post mount).\n    always_update: Call watchers even when the new value equals the old value.\n    compute: Run compute methods when attribute is changed.\n    recompose: Compose the widget again when the attribute changes.\n    bindings: Refresh bindings when the reactive changes.</p>\n"}, {"fullname": "main.askai.tui.app_header.HeaderNotifications.idiom", "modulename": "main.askai.tui.app_header", "qualname": "HeaderNotifications.idiom", "kind": "variable", "doc": "<p>Reactive descriptor.</p>\n\n<p>Args:\n    default: A default value or callable that returns a default.\n    layout: Perform a layout on change.\n    repaint: Perform a repaint on change.\n    init: Call watchers on initialize (post mount).\n    always_update: Call watchers even when the new value equals the old value.\n    compute: Run compute methods when attribute is changed.\n    recompose: Compose the widget again when the attribute changes.\n    bindings: Refresh bindings when the reactive changes.</p>\n"}, {"fullname": "main.askai.tui.app_header.HeaderNotifications.tooltip", "modulename": "main.askai.tui.app_header", "qualname": "HeaderNotifications.tooltip", "kind": "variable", "doc": "<p>Tooltip for the widget, or <code>None</code> for no tooltip.</p>\n", "annotation": ": Union[rich.console.ConsoleRenderable, rich.console.RichCast, str, NoneType]"}, {"fullname": "main.askai.tui.app_header.HeaderNotifications.render", "modulename": "main.askai.tui.app_header", "qualname": "HeaderNotifications.render", "kind": "function", "doc": "<p>Render the header notifications.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">rich</span><span class=\"o\">.</span><span class=\"n\">console</span><span class=\"o\">.</span><span class=\"n\">ConsoleRenderable</span><span class=\"p\">,</span> <span class=\"n\">rich</span><span class=\"o\">.</span><span class=\"n\">console</span><span class=\"o\">.</span><span class=\"n\">RichCast</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.tui.app_header.HeaderNotifications.refresh_icons", "modulename": "main.askai.tui.app_header", "qualname": "HeaderNotifications.refresh_icons", "kind": "function", "doc": "<p>Update the application widgets. This callback is required because ask_and_reply is async.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.tui.app_header.HeaderNotifications.watch_speaking", "modulename": "main.askai.tui.app_header", "qualname": "HeaderNotifications.watch_speaking", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "async def"}, {"fullname": "main.askai.tui.app_header.HeaderNotifications.watch_debugging", "modulename": "main.askai.tui.app_header", "qualname": "HeaderNotifications.watch_debugging", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "async def"}, {"fullname": "main.askai.tui.app_header.HeaderNotifications.watch_caching", "modulename": "main.askai.tui.app_header", "qualname": "HeaderNotifications.watch_caching", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "async def"}, {"fullname": "main.askai.tui.app_header.HeaderNotifications.watch_listening", "modulename": "main.askai.tui.app_header", "qualname": "HeaderNotifications.watch_listening", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "async def"}, {"fullname": "main.askai.tui.app_header.HeaderNotifications.watch_headphones", "modulename": "main.askai.tui.app_header", "qualname": "HeaderNotifications.watch_headphones", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "async def"}, {"fullname": "main.askai.tui.app_header.HeaderNotifications.watch_idiom", "modulename": "main.askai.tui.app_header", "qualname": "HeaderNotifications.watch_idiom", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "async def"}, {"fullname": "main.askai.tui.app_header.HeaderNotifications.can_focus", "modulename": "main.askai.tui.app_header", "qualname": "HeaderNotifications.can_focus", "kind": "variable", "doc": "<p>Widget may receive focus.</p>\n", "annotation": ": bool", "default_value": "False"}, {"fullname": "main.askai.tui.app_header.HeaderNotifications.can_focus_children", "modulename": "main.askai.tui.app_header", "qualname": "HeaderNotifications.can_focus_children", "kind": "variable", "doc": "<p>Widget's children may receive focus.</p>\n", "annotation": ": bool", "default_value": "True"}, {"fullname": "main.askai.tui.app_icons", "modulename": "main.askai.tui.app_icons", "kind": "module", "doc": "<p>@project: HsPyLib-AskAI\n@package: askai.tui.app_icons\n   @file: app_icons.py\n@created: Mon, 29 Apr 2024\n @author: <B>H</B>ugo <B>S</B>aporetti <B>J</B>unior\n   @site: <a href=\"https://github.com/yorevs/askai\">https://github.com/yorevs/askai</a>\n@license: MIT - Please refer to <a href=\"https://opensource.org/licenses/MIT\">https://opensource.org/licenses/MIT</a></p>\n\n<p>Copyright (c) 2024, AskAI</p>\n"}, {"fullname": "main.askai.tui.app_icons.AppIcons", "modulename": "main.askai.tui.app_icons", "qualname": "AppIcons", "kind": "class", "doc": "<p>Enumerated icons of the new AskAI UI application.</p>\n", "bases": "hspylib.core.enums.enumeration.Enumeration"}, {"fullname": "main.askai.tui.app_icons.AppIcons.DEFAULT", "modulename": "main.askai.tui.app_icons", "qualname": "AppIcons.DEFAULT", "kind": "variable", "doc": "<p></p>\n", "default_value": "DEFAULT"}, {"fullname": "main.askai.tui.app_icons.AppIcons.STARTED", "modulename": "main.askai.tui.app_icons", "qualname": "AppIcons.STARTED", "kind": "variable", "doc": "<p></p>\n", "default_value": "STARTED"}, {"fullname": "main.askai.tui.app_icons.AppIcons.MENU", "modulename": "main.askai.tui.app_icons", "qualname": "AppIcons.MENU", "kind": "variable", "doc": "<p></p>\n", "default_value": "MENU"}, {"fullname": "main.askai.tui.app_icons.AppIcons.TOC", "modulename": "main.askai.tui.app_icons", "qualname": "AppIcons.TOC", "kind": "variable", "doc": "<p></p>\n", "default_value": "TOC"}, {"fullname": "main.askai.tui.app_icons.AppIcons.EXIT", "modulename": "main.askai.tui.app_icons", "qualname": "AppIcons.EXIT", "kind": "variable", "doc": "<p></p>\n", "default_value": "EXIT"}, {"fullname": "main.askai.tui.app_icons.AppIcons.HELP", "modulename": "main.askai.tui.app_icons", "qualname": "AppIcons.HELP", "kind": "variable", "doc": "<p></p>\n", "default_value": "HELP"}, {"fullname": "main.askai.tui.app_icons.AppIcons.SETTINGS", "modulename": "main.askai.tui.app_icons", "qualname": "AppIcons.SETTINGS", "kind": "variable", "doc": "<p></p>\n", "default_value": "SETTINGS"}, {"fullname": "main.askai.tui.app_icons.AppIcons.INFO", "modulename": "main.askai.tui.app_icons", "qualname": "AppIcons.INFO", "kind": "variable", "doc": "<p></p>\n", "default_value": "INFO"}, {"fullname": "main.askai.tui.app_icons.AppIcons.CONSOLE", "modulename": "main.askai.tui.app_icons", "qualname": "AppIcons.CONSOLE", "kind": "variable", "doc": "<p></p>\n", "default_value": "CONSOLE"}, {"fullname": "main.askai.tui.app_icons.AppIcons.DEBUG_ON", "modulename": "main.askai.tui.app_icons", "qualname": "AppIcons.DEBUG_ON", "kind": "variable", "doc": "<p></p>\n", "default_value": "DEBUG_ON"}, {"fullname": "main.askai.tui.app_icons.AppIcons.DEBUG_OFF", "modulename": "main.askai.tui.app_icons", "qualname": "AppIcons.DEBUG_OFF", "kind": "variable", "doc": "<p></p>\n", "default_value": "DEBUG_OFF"}, {"fullname": "main.askai.tui.app_icons.AppIcons.SPEAKING_ON", "modulename": "main.askai.tui.app_icons", "qualname": "AppIcons.SPEAKING_ON", "kind": "variable", "doc": "<p></p>\n", "default_value": "SPEAKING_ON"}, {"fullname": "main.askai.tui.app_icons.AppIcons.SPEAKING_OFF", "modulename": "main.askai.tui.app_icons", "qualname": "AppIcons.SPEAKING_OFF", "kind": "variable", "doc": "<p></p>\n", "default_value": "SPEAKING_OFF"}, {"fullname": "main.askai.tui.app_icons.AppIcons.CACHING_ON", "modulename": "main.askai.tui.app_icons", "qualname": "AppIcons.CACHING_ON", "kind": "variable", "doc": "<p></p>\n", "default_value": "CACHING_ON"}, {"fullname": "main.askai.tui.app_icons.AppIcons.CACHING_OFF", "modulename": "main.askai.tui.app_icons", "qualname": "AppIcons.CACHING_OFF", "kind": "variable", "doc": "<p></p>\n", "default_value": "CACHING_OFF"}, {"fullname": "main.askai.tui.app_icons.AppIcons.SEPARATOR_V", "modulename": "main.askai.tui.app_icons", "qualname": "AppIcons.SEPARATOR_V", "kind": "variable", "doc": "<p></p>\n", "default_value": "SEPARATOR_V"}, {"fullname": "main.askai.tui.app_icons.AppIcons.SEPARATOR_H", "modulename": "main.askai.tui.app_icons", "qualname": "AppIcons.SEPARATOR_H", "kind": "variable", "doc": "<p></p>\n", "default_value": "SEPARATOR_H"}, {"fullname": "main.askai.tui.app_icons.AppIcons.LISTENING_ON", "modulename": "main.askai.tui.app_icons", "qualname": "AppIcons.LISTENING_ON", "kind": "variable", "doc": "<p></p>\n", "default_value": "LISTENING_ON"}, {"fullname": "main.askai.tui.app_icons.AppIcons.LISTENING_OFF", "modulename": "main.askai.tui.app_icons", "qualname": "AppIcons.LISTENING_OFF", "kind": "variable", "doc": "<p></p>\n", "default_value": "LISTENING_OFF"}, {"fullname": "main.askai.tui.app_icons.AppIcons.BUILT_IN_SPEAKER", "modulename": "main.askai.tui.app_icons", "qualname": "AppIcons.BUILT_IN_SPEAKER", "kind": "variable", "doc": "<p></p>\n", "default_value": "BUILT_IN_SPEAKER"}, {"fullname": "main.askai.tui.app_icons.AppIcons.HEADPHONES", "modulename": "main.askai.tui.app_icons", "qualname": "AppIcons.HEADPHONES", "kind": "variable", "doc": "<p></p>\n", "default_value": "HEADPHONES"}, {"fullname": "main.askai.tui.app_icons.AppIcons.CLOCK", "modulename": "main.askai.tui.app_icons", "qualname": "AppIcons.CLOCK", "kind": "variable", "doc": "<p></p>\n", "default_value": "CLOCK"}, {"fullname": "main.askai.tui.app_suggester", "modulename": "main.askai.tui.app_suggester", "kind": "module", "doc": "<p>@project: HsPyLib-AskAI\n@package: askai.tui.app_suggester\n   @file: app_suggester.py\n@created: Wed, 19 Jun 2024\n @author: <B>H</B>ugo <B>S</B>aporetti <B>J</B>unior\n   @site: <a href=\"https://github.com/yorevs/askai\">https://github.com/yorevs/askai</a>\n@license: MIT - Please refer to <a href=\"https://opensource.org/licenses/MIT\">https://opensource.org/licenses/MIT</a></p>\n\n<p>Copyright (c) 2024, AskAI</p>\n"}, {"fullname": "main.askai.tui.app_suggester.InputSuggester", "modulename": "main.askai.tui.app_suggester", "qualname": "InputSuggester", "kind": "class", "doc": "<p>Implement a list-based Input suggester.</p>\n", "bases": "textual.suggester.Suggester"}, {"fullname": "main.askai.tui.app_suggester.InputSuggester.__init__", "modulename": "main.askai.tui.app_suggester", "qualname": "InputSuggester.__init__", "kind": "function", "doc": "<p>Create a suggester object.</p>\n\n<p>Args:\n    use_cache: Whether to cache suggestion results.\n    case_sensitive: Whether suggestions are case sensitive or not.\n        If they are not, incoming values are casefolded before generating\n        the suggestion.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span>, </span><span class=\"param\"><span class=\"n\">case_sensitive</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span>)</span>"}, {"fullname": "main.askai.tui.app_suggester.InputSuggester.suggestions", "modulename": "main.askai.tui.app_suggester", "qualname": "InputSuggester.suggestions", "kind": "function", "doc": "<p>Return all available suggestions.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, {"fullname": "main.askai.tui.app_suggester.InputSuggester.add_suggestion", "modulename": "main.askai.tui.app_suggester", "qualname": "InputSuggester.add_suggestion", "kind": "function", "doc": "<p>Add a new suggestion.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "async def"}, {"fullname": "main.askai.tui.app_suggester.InputSuggester.get_suggestion", "modulename": "main.askai.tui.app_suggester", "qualname": "InputSuggester.get_suggestion", "kind": "function", "doc": "<p>Get a suggestion from the list.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, {"fullname": "main.askai.tui.app_widgets", "modulename": "main.askai.tui.app_widgets", "kind": "module", "doc": "<p>@project: HsPyLib-AskAI\n@package: askai.tui.app_widgets\n   @file: app_widgets.py\n@created: Mon, 29 Apr 2024\n @author: <B>H</B>ugo <B>S</B>aporetti <B>J</B>unior\n   @site: <a href=\"https://github.com/yorevs/askai\">https://github.com/yorevs/askai</a>\n@license: MIT - Please refer to <a href=\"https://opensource.org/licenses/MIT\">https://opensource.org/licenses/MIT</a></p>\n\n<p>Copyright (c) 2024, AskAI</p>\n"}, {"fullname": "main.askai.tui.app_widgets.MenuIcon", "modulename": "main.askai.tui.app_widgets", "qualname": "MenuIcon", "kind": "class", "doc": "<p>Display an 'icon' on the left of the header.</p>\n", "bases": "textual.widget.Widget"}, {"fullname": "main.askai.tui.app_widgets.MenuIcon.__init__", "modulename": "main.askai.tui.app_widgets", "qualname": "MenuIcon.__init__", "kind": "function", "doc": "<p>Initialize a Widget.</p>\n\n<p>Args:\n    *children: Child widgets.\n    name: The name of the widget.\n    id: The ID of the widget in the DOM.\n    classes: The CSS classes for the widget.\n    disabled: Whether the widget is disabled or not.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">menu_icon</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;</span><span class=\"se\">\\uf128</span><span class=\"s1\">&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">tooltip</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">on_click</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Callable</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, {"fullname": "main.askai.tui.app_widgets.MenuIcon.menu_icon", "modulename": "main.askai.tui.app_widgets", "qualname": "MenuIcon.menu_icon", "kind": "variable", "doc": "<p>Reactive descriptor.</p>\n\n<p>Args:\n    default: A default value or callable that returns a default.\n    layout: Perform a layout on change.\n    repaint: Perform a repaint on change.\n    init: Call watchers on initialize (post mount).\n    always_update: Call watchers even when the new value equals the old value.\n    compute: Run compute methods when attribute is changed.\n    recompose: Compose the widget again when the attribute changes.\n    bindings: Refresh bindings when the reactive changes.</p>\n"}, {"fullname": "main.askai.tui.app_widgets.MenuIcon.click_cb", "modulename": "main.askai.tui.app_widgets", "qualname": "MenuIcon.click_cb", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Callable"}, {"fullname": "main.askai.tui.app_widgets.MenuIcon.tooltip", "modulename": "main.askai.tui.app_widgets", "qualname": "MenuIcon.tooltip", "kind": "variable", "doc": "<p>Tooltip for the widget, or <code>None</code> for no tooltip.</p>\n", "annotation": ": Union[rich.console.ConsoleRenderable, rich.console.RichCast, str, NoneType]"}, {"fullname": "main.askai.tui.app_widgets.MenuIcon.on_click", "modulename": "main.askai.tui.app_widgets", "qualname": "MenuIcon.on_click", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">event</span><span class=\"p\">:</span> <span class=\"n\">textual</span><span class=\"o\">.</span><span class=\"n\">events</span><span class=\"o\">.</span><span class=\"n\">Click</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "async def"}, {"fullname": "main.askai.tui.app_widgets.MenuIcon.render", "modulename": "main.askai.tui.app_widgets", "qualname": "MenuIcon.render", "kind": "function", "doc": "<p>Get text or Rich renderable for this widget.</p>\n\n<p>Implement this for custom widgets.</p>\n\n<p>Example:</p>\n\n<pre><code><div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">textual.app</span> <span class=\"kn\">import</span> <span class=\"n\">RenderableType</span>\n<span class=\"kn\">from</span> <span class=\"nn\">textual.widget</span> <span class=\"kn\">import</span> <span class=\"n\">Widget</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">CustomWidget</span><span class=\"p\">(</span><span class=\"n\">Widget</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">render</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">RenderableType</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"s2\">&quot;Welcome to [bold red]Textual[/]!&quot;</span>\n</code></pre>\n</div>\n</code></pre>\n\n<p>Returns:\n    Any renderable.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">rich</span><span class=\"o\">.</span><span class=\"n\">console</span><span class=\"o\">.</span><span class=\"n\">ConsoleRenderable</span><span class=\"p\">,</span> <span class=\"n\">rich</span><span class=\"o\">.</span><span class=\"n\">console</span><span class=\"o\">.</span><span class=\"n\">RichCast</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.tui.app_widgets.MenuIcon.can_focus", "modulename": "main.askai.tui.app_widgets", "qualname": "MenuIcon.can_focus", "kind": "variable", "doc": "<p>Widget may receive focus.</p>\n", "annotation": ": bool", "default_value": "False"}, {"fullname": "main.askai.tui.app_widgets.MenuIcon.can_focus_children", "modulename": "main.askai.tui.app_widgets", "qualname": "MenuIcon.can_focus_children", "kind": "variable", "doc": "<p>Widget's children may receive focus.</p>\n", "annotation": ": bool", "default_value": "True"}, {"fullname": "main.askai.tui.app_widgets.Splash", "modulename": "main.askai.tui.app_widgets", "qualname": "Splash", "kind": "class", "doc": "<p>Splash widget that extends Container.</p>\n", "bases": "textual.containers.Container"}, {"fullname": "main.askai.tui.app_widgets.Splash.__init__", "modulename": "main.askai.tui.app_widgets", "qualname": "Splash.__init__", "kind": "function", "doc": "<p>Initialize a Widget.</p>\n\n<p>Args:\n    *children: Child widgets.\n    name: The name of the widget.\n    id: The ID of the widget in the DOM.\n    classes: The CSS classes for the widget.\n    disabled: Whether the widget is disabled or not.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">splash_image</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span>)</span>"}, {"fullname": "main.askai.tui.app_widgets.Splash.splash_image", "modulename": "main.askai.tui.app_widgets", "qualname": "Splash.splash_image", "kind": "variable", "doc": "<p>Reactive descriptor.</p>\n\n<p>Args:\n    default: A default value or callable that returns a default.\n    layout: Perform a layout on change.\n    repaint: Perform a repaint on change.\n    init: Call watchers on initialize (post mount).\n    always_update: Call watchers even when the new value equals the old value.\n    compute: Run compute methods when attribute is changed.\n    recompose: Compose the widget again when the attribute changes.\n    bindings: Refresh bindings when the reactive changes.</p>\n", "annotation": ": str"}, {"fullname": "main.askai.tui.app_widgets.Splash.compose", "modulename": "main.askai.tui.app_widgets", "qualname": "Splash.compose", "kind": "function", "doc": "<p>Called by Textual to create child widgets.</p>\n\n<p>This method is called when a widget is mounted or by setting <code>recompose=True</code> when\ncalling [<code>refresh()</code>][textual.widget.Widget.refresh].</p>\n\n<p>Note that you don't typically need to explicitly call this method.</p>\n\n<p>Example:</p>\n\n<pre><code><div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">compose</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">ComposeResult</span><span class=\"p\">:</span>\n    <span class=\"k\">yield</span> <span class=\"n\">Header</span><span class=\"p\">()</span>\n    <span class=\"k\">yield</span> <span class=\"n\">Label</span><span class=\"p\">(</span><span class=\"s2\">&quot;Press the button below:&quot;</span><span class=\"p\">)</span>\n    <span class=\"k\">yield</span> <span class=\"n\">Button</span><span class=\"p\">()</span>\n    <span class=\"k\">yield</span> <span class=\"n\">Footer</span><span class=\"p\">()</span>\n</code></pre>\n</div>\n</code></pre>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Iterable</span><span class=\"p\">[</span><span class=\"n\">textual</span><span class=\"o\">.</span><span class=\"n\">widget</span><span class=\"o\">.</span><span class=\"n\">Widget</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.tui.app_widgets.Splash.on_mount", "modulename": "main.askai.tui.app_widgets", "qualname": "Splash.on_mount", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "async def"}, {"fullname": "main.askai.tui.app_widgets.Splash.can_focus", "modulename": "main.askai.tui.app_widgets", "qualname": "Splash.can_focus", "kind": "variable", "doc": "<p>Widget may receive focus.</p>\n", "annotation": ": bool", "default_value": "False"}, {"fullname": "main.askai.tui.app_widgets.Splash.can_focus_children", "modulename": "main.askai.tui.app_widgets", "qualname": "Splash.can_focus_children", "kind": "variable", "doc": "<p>Widget's children may receive focus.</p>\n", "annotation": ": bool", "default_value": "True"}, {"fullname": "main.askai.tui.app_widgets.AppHelp", "modulename": "main.askai.tui.app_widgets", "qualname": "AppHelp", "kind": "class", "doc": "<p>Application Help Widget.</p>\n", "bases": "textual.widgets._markdown.Markdown"}, {"fullname": "main.askai.tui.app_widgets.AppHelp.__init__", "modulename": "main.askai.tui.app_widgets", "qualname": "AppHelp.__init__", "kind": "function", "doc": "<p>A Markdown widget.</p>\n\n<p>Args:\n    markdown: String containing Markdown or None to leave blank for now.\n    name: The name of the widget.\n    id: The ID of the widget in the DOM.\n    classes: The CSS classes of the widget.\n    parser_factory: A factory function to return a configured MarkdownIt instance. If <code>None</code>, a \"gfm-like\" parser is used.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">help_text</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span>)</span>"}, {"fullname": "main.askai.tui.app_widgets.AppHelp.help_text", "modulename": "main.askai.tui.app_widgets", "qualname": "AppHelp.help_text", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "main.askai.tui.app_widgets.AppHelp.on_mount", "modulename": "main.askai.tui.app_widgets", "qualname": "AppHelp.on_mount", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "async def"}, {"fullname": "main.askai.tui.app_widgets.AppHelp.can_focus", "modulename": "main.askai.tui.app_widgets", "qualname": "AppHelp.can_focus", "kind": "variable", "doc": "<p>Widget may receive focus.</p>\n", "annotation": ": bool", "default_value": "False"}, {"fullname": "main.askai.tui.app_widgets.AppHelp.can_focus_children", "modulename": "main.askai.tui.app_widgets", "qualname": "AppHelp.can_focus_children", "kind": "variable", "doc": "<p>Widget's children may receive focus.</p>\n", "annotation": ": bool", "default_value": "True"}, {"fullname": "main.askai.tui.app_widgets.AppInfo", "modulename": "main.askai.tui.app_widgets", "qualname": "AppInfo", "kind": "class", "doc": "<p>Application Information Widget.</p>\n", "bases": "textual.widgets._static.Static"}, {"fullname": "main.askai.tui.app_widgets.AppInfo.__init__", "modulename": "main.askai.tui.app_widgets", "qualname": "AppInfo.__init__", "kind": "function", "doc": "<p>Initialize a Widget.</p>\n\n<p>Args:\n    *children: Child widgets.\n    name: The name of the widget.\n    id: The ID of the widget in the DOM.\n    classes: The CSS classes for the widget.\n    disabled: Whether the widget is disabled or not.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">app_info</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span>)</span>"}, {"fullname": "main.askai.tui.app_widgets.AppInfo.info_text", "modulename": "main.askai.tui.app_widgets", "qualname": "AppInfo.info_text", "kind": "variable", "doc": "<p>Reactive descriptor.</p>\n\n<p>Args:\n    default: A default value or callable that returns a default.\n    layout: Perform a layout on change.\n    repaint: Perform a repaint on change.\n    init: Call watchers on initialize (post mount).\n    always_update: Call watchers even when the new value equals the old value.\n    compute: Run compute methods when attribute is changed.\n    recompose: Compose the widget again when the attribute changes.\n    bindings: Refresh bindings when the reactive changes.</p>\n"}, {"fullname": "main.askai.tui.app_widgets.AppInfo.credits", "modulename": "main.askai.tui.app_widgets", "qualname": "AppInfo.credits", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;\\n  Author: \\uf486  Hugo Saporetti Junior\\n  GitHub: \\uf408  https://github.com/yorevs/askai\\nLinkedIn: \\uf83a  https://www.linkedin.com/in/yorevs/\\n    Demo: \\uf16a  https://www.youtube.com/watch?v=ZlVOisiUEvs&amp;t=69s\\n--------------------------------------------------------------------------------\\n\\uf004  Thanks for using AskAI \\uf004\\n&#x27;"}, {"fullname": "main.askai.tui.app_widgets.AppInfo.info", "modulename": "main.askai.tui.app_widgets", "qualname": "AppInfo.info", "kind": "variable", "doc": "<p></p>\n", "annotation": ": textual.widgets._static.Static"}, {"fullname": "main.askai.tui.app_widgets.AppInfo.compose", "modulename": "main.askai.tui.app_widgets", "qualname": "AppInfo.compose", "kind": "function", "doc": "<p>Called by Textual to create child widgets.</p>\n\n<p>This method is called when a widget is mounted or by setting <code>recompose=True</code> when\ncalling [<code>refresh()</code>][textual.widget.Widget.refresh].</p>\n\n<p>Note that you don't typically need to explicitly call this method.</p>\n\n<p>Example:</p>\n\n<pre><code><div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">compose</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">ComposeResult</span><span class=\"p\">:</span>\n    <span class=\"k\">yield</span> <span class=\"n\">Header</span><span class=\"p\">()</span>\n    <span class=\"k\">yield</span> <span class=\"n\">Label</span><span class=\"p\">(</span><span class=\"s2\">&quot;Press the button below:&quot;</span><span class=\"p\">)</span>\n    <span class=\"k\">yield</span> <span class=\"n\">Button</span><span class=\"p\">()</span>\n    <span class=\"k\">yield</span> <span class=\"n\">Footer</span><span class=\"p\">()</span>\n</code></pre>\n</div>\n</code></pre>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Iterable</span><span class=\"p\">[</span><span class=\"n\">textual</span><span class=\"o\">.</span><span class=\"n\">widget</span><span class=\"o\">.</span><span class=\"n\">Widget</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.tui.app_widgets.AppInfo.on_mount", "modulename": "main.askai.tui.app_widgets", "qualname": "AppInfo.on_mount", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "async def"}, {"fullname": "main.askai.tui.app_widgets.AppInfo.watch_info_text", "modulename": "main.askai.tui.app_widgets", "qualname": "AppInfo.watch_info_text", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "async def"}, {"fullname": "main.askai.tui.app_widgets.AppInfo.can_focus", "modulename": "main.askai.tui.app_widgets", "qualname": "AppInfo.can_focus", "kind": "variable", "doc": "<p>Widget may receive focus.</p>\n", "annotation": ": bool", "default_value": "False"}, {"fullname": "main.askai.tui.app_widgets.AppInfo.can_focus_children", "modulename": "main.askai.tui.app_widgets", "qualname": "AppInfo.can_focus_children", "kind": "variable", "doc": "<p>Widget's children may receive focus.</p>\n", "annotation": ": bool", "default_value": "True"}, {"fullname": "main.askai.tui.app_widgets.AppSettings", "modulename": "main.askai.tui.app_widgets", "qualname": "AppSettings", "kind": "class", "doc": "<p>Application DataTable Widget.</p>\n", "bases": "textual.widgets._static.Static"}, {"fullname": "main.askai.tui.app_widgets.AppSettings.__init__", "modulename": "main.askai.tui.app_widgets", "qualname": "AppSettings.__init__", "kind": "function", "doc": "<p>Initialize a Widget.</p>\n\n<p>Args:\n    *children: Child widgets.\n    name: The name of the widget.\n    id: The ID of the widget in the DOM.\n    classes: The CSS classes for the widget.\n    disabled: Whether the widget is disabled or not.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "main.askai.tui.app_widgets.AppSettings.data", "modulename": "main.askai.tui.app_widgets", "qualname": "AppSettings.data", "kind": "variable", "doc": "<p>Reactive descriptor.</p>\n\n<p>Args:\n    default: A default value or callable that returns a default.\n    layout: Perform a layout on change.\n    repaint: Perform a repaint on change.\n    init: Call watchers on initialize (post mount).\n    always_update: Call watchers even when the new value equals the old value.\n    compute: Run compute methods when attribute is changed.\n    recompose: Compose the widget again when the attribute changes.\n    bindings: Refresh bindings when the reactive changes.</p>\n"}, {"fullname": "main.askai.tui.app_widgets.AppSettings.table", "modulename": "main.askai.tui.app_widgets", "qualname": "AppSettings.table", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "main.askai.tui.app_widgets.AppSettings.compose", "modulename": "main.askai.tui.app_widgets", "qualname": "AppSettings.compose", "kind": "function", "doc": "<p>Called by Textual to create child widgets.</p>\n\n<p>This method is called when a widget is mounted or by setting <code>recompose=True</code> when\ncalling [<code>refresh()</code>][textual.widget.Widget.refresh].</p>\n\n<p>Note that you don't typically need to explicitly call this method.</p>\n\n<p>Example:</p>\n\n<pre><code><div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">compose</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">ComposeResult</span><span class=\"p\">:</span>\n    <span class=\"k\">yield</span> <span class=\"n\">Header</span><span class=\"p\">()</span>\n    <span class=\"k\">yield</span> <span class=\"n\">Label</span><span class=\"p\">(</span><span class=\"s2\">&quot;Press the button below:&quot;</span><span class=\"p\">)</span>\n    <span class=\"k\">yield</span> <span class=\"n\">Button</span><span class=\"p\">()</span>\n    <span class=\"k\">yield</span> <span class=\"n\">Footer</span><span class=\"p\">()</span>\n</code></pre>\n</div>\n</code></pre>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Iterable</span><span class=\"p\">[</span><span class=\"n\">textual</span><span class=\"o\">.</span><span class=\"n\">widget</span><span class=\"o\">.</span><span class=\"n\">Widget</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.tui.app_widgets.AppSettings.on_mount", "modulename": "main.askai.tui.app_widgets", "qualname": "AppSettings.on_mount", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "async def"}, {"fullname": "main.askai.tui.app_widgets.AppSettings.watch_data", "modulename": "main.askai.tui.app_widgets", "qualname": "AppSettings.watch_data", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.tui.app_widgets.AppSettings.can_focus", "modulename": "main.askai.tui.app_widgets", "qualname": "AppSettings.can_focus", "kind": "variable", "doc": "<p>Widget may receive focus.</p>\n", "annotation": ": bool", "default_value": "False"}, {"fullname": "main.askai.tui.app_widgets.AppSettings.can_focus_children", "modulename": "main.askai.tui.app_widgets", "qualname": "AppSettings.can_focus_children", "kind": "variable", "doc": "<p>Widget's children may receive focus.</p>\n", "annotation": ": bool", "default_value": "True"}, {"fullname": "main.askai.tui.askai_app", "modulename": "main.askai.tui.askai_app", "kind": "module", "doc": "<p>@project: HsPyLib-AskAI\n@package: askai.tui.askai_app\n   @file: askai_app.py\n@created: Mon, 29 Apr 2024\n @author: <B>H</B>ugo <B>S</B>aporetti <B>J</B>unior\n   @site: <a href=\"https://github.com/yorevs/askai\">https://github.com/yorevs/askai</a>\n@license: MIT - Please refer to <a href=\"https://opensource.org/licenses/MIT\">https://opensource.org/licenses/MIT</a></p>\n\n<p>Copyright (c) 2024, AskAI</p>\n"}, {"fullname": "main.askai.tui.askai_app.SOURCE_DIR", "modulename": "main.askai.tui.askai_app", "qualname": "SOURCE_DIR", "kind": "variable", "doc": "<p></p>\n", "annotation": ": pathlib.Path", "default_value": "PosixPath(&#x27;/Users/hjunior/GIT-Repository/GitHub/askai/src/main/askai&#x27;)"}, {"fullname": "main.askai.tui.askai_app.RESOURCE_DIR", "modulename": "main.askai.tui.askai_app", "qualname": "RESOURCE_DIR", "kind": "variable", "doc": "<p></p>\n", "annotation": ": pathlib.Path", "default_value": "PosixPath(&#x27;/Users/hjunior/GIT-Repository/GitHub/askai/src/main/askai/resources&#x27;)"}, {"fullname": "main.askai.tui.askai_app.AskAiApp", "modulename": "main.askai.tui.askai_app", "qualname": "AskAiApp", "kind": "class", "doc": "<p>The AskAI Textual application.</p>\n", "bases": "textual.app.App[NoneType]"}, {"fullname": "main.askai.tui.askai_app.AskAiApp.__init__", "modulename": "main.askai.tui.askai_app", "qualname": "AskAiApp.__init__", "kind": "function", "doc": "<p>Create an instance of an app.</p>\n\n<p>Args:\n    driver_class: Driver class or <code>None</code> to auto-detect.\n        This will be used by some Textual tools.\n    css_path: Path to CSS or <code>None</code> to use the <code>CSS_PATH</code> class variable.\n        To load multiple CSS files, pass a list of strings or paths which\n        will be loaded in order.\n    watch_css: Reload CSS if the files changed. This is set automatically if\n        you are using <code>textual run</code> with the <code>dev</code> switch.\n    ansi_color: Allow ANSI colors if <code>True</code>, or convert ANSI colors to to RGB if <code>False</code>.</p>\n\n<p>Raises:\n    CssPathError: When the supplied CSS path(s) are an unexpected type.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">speak</span><span class=\"p\">:</span> <span class=\"nb\">bool</span>,</span><span class=\"param\">\t<span class=\"n\">debug</span><span class=\"p\">:</span> <span class=\"nb\">bool</span>,</span><span class=\"param\">\t<span class=\"n\">cacheable</span><span class=\"p\">:</span> <span class=\"nb\">bool</span>,</span><span class=\"param\">\t<span class=\"n\">tempo</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">engine_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">model_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">mode</span><span class=\"p\">:</span> <span class=\"n\">askai</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">enums</span><span class=\"o\">.</span><span class=\"n\">router_mode</span><span class=\"o\">.</span><span class=\"n\">RouterMode</span></span>)</span>"}, {"fullname": "main.askai.tui.askai_app.AskAiApp.APP_TITLE", "modulename": "main.askai.tui.askai_app", "qualname": "AskAiApp.APP_TITLE", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;AskAI v1.1.0&#x27;"}, {"fullname": "main.askai.tui.askai_app.AskAiApp.CSS_PATH", "modulename": "main.askai.tui.askai_app", "qualname": "AskAiApp.CSS_PATH", "kind": "variable", "doc": "<p>File paths to load CSS from.</p>\n", "default_value": "&#x27;/Users/hjunior/GIT-Repository/GitHub/askai/src/main/askai/resources/askai.tcss&#x27;"}, {"fullname": "main.askai.tui.askai_app.AskAiApp.BINDINGS", "modulename": "main.askai.tui.askai_app", "qualname": "AskAiApp.BINDINGS", "kind": "variable", "doc": "<p>The default key bindings.</p>\n", "default_value": "[(&#x27;q&#x27;, &#x27;quit&#x27;, &#x27; Quit&#x27;), (&#x27;c&#x27;, &#x27;clear&#x27;, &#x27; Clear&#x27;), (&#x27;d&#x27;, &#x27;debugging&#x27;, &#x27; Debugging&#x27;), (&#x27;s&#x27;, &#x27;speaking&#x27;, &#x27; Speaking&#x27;), (&#x27;ctrl+l&#x27;, &#x27;ptt&#x27;, &#x27; Push-to-Talk&#x27;)]"}, {"fullname": "main.askai.tui.askai_app.AskAiApp.ENABLE_COMMAND_PALETTE", "modulename": "main.askai.tui.askai_app", "qualname": "AskAiApp.ENABLE_COMMAND_PALETTE", "kind": "variable", "doc": "<p>Should the [command palette][textual.command.CommandPalette] be enabled for the application?</p>\n", "default_value": "False"}, {"fullname": "main.askai.tui.askai_app.AskAiApp.askai", "modulename": "main.askai.tui.askai_app", "qualname": "AskAiApp.askai", "kind": "variable", "doc": "<p></p>\n", "annotation": ": askai.core.askai.AskAi"}, {"fullname": "main.askai.tui.askai_app.AskAiApp.engine", "modulename": "main.askai.tui.askai_app", "qualname": "AskAiApp.engine", "kind": "variable", "doc": "<p></p>\n", "annotation": ": askai.core.engine.ai_engine.AIEngine"}, {"fullname": "main.askai.tui.askai_app.AskAiApp.app_settings", "modulename": "main.askai.tui.askai_app", "qualname": "AskAiApp.app_settings", "kind": "variable", "doc": "<p></p>\n", "annotation": ": list[tuple[str, ...]]"}, {"fullname": "main.askai.tui.askai_app.AskAiApp.console_path", "modulename": "main.askai.tui.askai_app", "qualname": "AskAiApp.console_path", "kind": "variable", "doc": "<p></p>\n", "annotation": ": pathlib.Path"}, {"fullname": "main.askai.tui.askai_app.AskAiApp.md_console", "modulename": "main.askai.tui.askai_app", "qualname": "AskAiApp.md_console", "kind": "variable", "doc": "<p>Get the MarkdownViewer widget.</p>\n", "annotation": ": textual.widgets._markdown.MarkdownViewer"}, {"fullname": "main.askai.tui.askai_app.AskAiApp.info", "modulename": "main.askai.tui.askai_app", "qualname": "AskAiApp.info", "kind": "variable", "doc": "<p>Get the AppInfo widget.</p>\n", "annotation": ": askai.tui.app_widgets.AppInfo"}, {"fullname": "main.askai.tui.askai_app.AskAiApp.help", "modulename": "main.askai.tui.askai_app", "qualname": "AskAiApp.help", "kind": "variable", "doc": "<p>Get the AppHelp widget.</p>\n", "annotation": ": askai.tui.app_widgets.AppHelp"}, {"fullname": "main.askai.tui.askai_app.AskAiApp.settings", "modulename": "main.askai.tui.askai_app", "qualname": "AskAiApp.settings", "kind": "variable", "doc": "<p>Get the AppSettings widget.</p>\n", "annotation": ": askai.tui.app_widgets.AppSettings"}, {"fullname": "main.askai.tui.askai_app.AskAiApp.splash", "modulename": "main.askai.tui.askai_app", "qualname": "AskAiApp.splash", "kind": "variable", "doc": "<p>Get the Splash widget.</p>\n", "annotation": ": askai.tui.app_widgets.Splash"}, {"fullname": "main.askai.tui.askai_app.AskAiApp.line_input", "modulename": "main.askai.tui.askai_app", "qualname": "AskAiApp.line_input", "kind": "variable", "doc": "<p>Get the Input widget.</p>\n", "annotation": ": textual.widgets._input.Input"}, {"fullname": "main.askai.tui.askai_app.AskAiApp.suggester", "modulename": "main.askai.tui.askai_app", "qualname": "AskAiApp.suggester", "kind": "variable", "doc": "<p>Get the Input Suggester.</p>\n", "annotation": ": Optional[askai.tui.app_suggester.InputSuggester]"}, {"fullname": "main.askai.tui.askai_app.AskAiApp.header", "modulename": "main.askai.tui.askai_app", "qualname": "AskAiApp.header", "kind": "variable", "doc": "<p>Get the Input widget.</p>\n", "annotation": ": askai.tui.app_header.Header"}, {"fullname": "main.askai.tui.askai_app.AskAiApp.footer", "modulename": "main.askai.tui.askai_app", "qualname": "AskAiApp.footer", "kind": "variable", "doc": "<p>Get the Input widget.</p>\n", "annotation": ": textual.widgets._footer.Footer"}, {"fullname": "main.askai.tui.askai_app.AskAiApp.compose", "modulename": "main.askai.tui.askai_app", "qualname": "AskAiApp.compose", "kind": "function", "doc": "<p>Called to add widgets to the app.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Iterable</span><span class=\"p\">[</span><span class=\"n\">textual</span><span class=\"o\">.</span><span class=\"n\">widget</span><span class=\"o\">.</span><span class=\"n\">Widget</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.tui.askai_app.AskAiApp.on_mount", "modulename": "main.askai.tui.askai_app", "qualname": "AskAiApp.on_mount", "kind": "function", "doc": "<p>Called application is mounted.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "async def"}, {"fullname": "main.askai.tui.askai_app.AskAiApp.on_markdown_viewer_navigator_updated", "modulename": "main.askai.tui.askai_app", "qualname": "AskAiApp.on_markdown_viewer_navigator_updated", "kind": "function", "doc": "<p>Refresh bindings for forward / back when the document changes.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.tui.askai_app.AskAiApp.action_back", "modulename": "main.askai.tui.askai_app", "qualname": "AskAiApp.action_back", "kind": "function", "doc": "<p>Navigate backwards.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "async def"}, {"fullname": "main.askai.tui.askai_app.AskAiApp.action_forward", "modulename": "main.askai.tui.askai_app", "qualname": "AskAiApp.action_forward", "kind": "function", "doc": "<p>Navigate forwards.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "async def"}, {"fullname": "main.askai.tui.askai_app.AskAiApp.action_toggle_table_of_contents", "modulename": "main.askai.tui.askai_app", "qualname": "AskAiApp.action_toggle_table_of_contents", "kind": "function", "doc": "<p>Toggles display of the table of contents.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.tui.askai_app.AskAiApp.check_action", "modulename": "main.askai.tui.askai_app", "qualname": "AskAiApp.check_action", "kind": "function", "doc": "<p>Check if a specific action can be performed.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>action</strong>:  The name of the action to check.</li>\n<li><strong>_</strong>:  Unused parameter, typically a placeholder for additional context.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>True if the action can be performed, None if it cannot.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">action</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">_</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.tui.askai_app.AskAiApp.enable_controls", "modulename": "main.askai.tui.askai_app", "qualname": "AskAiApp.enable_controls", "kind": "function", "doc": "<p>Enable or disable all UI controls, including the header, input, and footer.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>enable</strong>:  Whether to enable (True) or disable (False) the UI controls (default is True).</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">enable</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.tui.askai_app.AskAiApp.activate_markdown", "modulename": "main.askai.tui.askai_app", "qualname": "AskAiApp.activate_markdown", "kind": "function", "doc": "<p>Activate the markdown console widget.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.tui.askai_app.AskAiApp.action_clear", "modulename": "main.askai.tui.askai_app", "qualname": "AskAiApp.action_clear", "kind": "function", "doc": "<p>Clear the output console.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>overwrite</strong>:  Whether to overwrite the existing content in the console (default is True).</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">overwrite</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.tui.askai_app.AskAiApp.action_speaking", "modulename": "main.askai.tui.askai_app", "qualname": "AskAiApp.action_speaking", "kind": "function", "doc": "<p>Toggle Speaking ON/OFF.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "async def"}, {"fullname": "main.askai.tui.askai_app.AskAiApp.action_debugging", "modulename": "main.askai.tui.askai_app", "qualname": "AskAiApp.action_debugging", "kind": "function", "doc": "<p>Toggle Debugging ON/OFF.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "async def"}, {"fullname": "main.askai.tui.askai_app.AskAiApp.action_ptt", "modulename": "main.askai.tui.askai_app", "qualname": "AskAiApp.action_ptt", "kind": "function", "doc": "<p>Handle the Push-To-Talk (PTT) action for Speech-To-Text (STT) input. This method allows the user to use\nPush-To-Talk as an input method, converting spoken words into text.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "async def"}, {"fullname": "main.askai.tui.askai_app.AskAiApp.on_submit", "modulename": "main.askai.tui.askai_app", "qualname": "AskAiApp.on_submit", "kind": "function", "doc": "<p>A coroutine to handle input submission events.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>submitted</strong>:  The event that contains the submitted data.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">submitted</span><span class=\"p\">:</span> <span class=\"n\">textual</span><span class=\"o\">.</span><span class=\"n\">widgets</span><span class=\"o\">.</span><span class=\"n\">_input</span><span class=\"o\">.</span><span class=\"n\">Input</span><span class=\"o\">.</span><span class=\"n\">Submitted</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "async def"}, {"fullname": "main.askai.tui.askai_app.AskAiApp.display_text", "modulename": "main.askai.tui.askai_app", "qualname": "AskAiApp.display_text", "kind": "function", "doc": "<p>Send the text to the Markdown console.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>markdown_text</strong>:  the text to be displayed.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">markdown_text</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "main.askai.tui.askai_app.AskAiApp.ask_and_reply", "modulename": "main.askai.tui.askai_app", "qualname": "AskAiApp.ask_and_reply", "kind": "function", "doc": "<p>Ask the specified question to the AI and provide the reply.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>question</strong>:  The question to ask the AI engine.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A tuple containing a boolean indicating success or failure, and the AI's reply as an optional string.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">question</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}];

    // mirrored in build-search-index.js (part 1)
    // Also split on html tags. this is a cheap heuristic, but good enough.
    elasticlunr.tokenizer.setSeperator(/[\s\-.;&_'"=,()]+|<[^>]*>/);

    let searchIndex;
    if (docs._isPrebuiltIndex) {
        console.info("using precompiled search index");
        searchIndex = elasticlunr.Index.load(docs);
    } else {
        console.time("building search index");
        // mirrored in build-search-index.js (part 2)
        searchIndex = elasticlunr(function () {
            this.pipeline.remove(elasticlunr.stemmer);
            this.pipeline.remove(elasticlunr.stopWordFilter);
            this.addField("qualname");
            this.addField("fullname");
            this.addField("annotation");
            this.addField("default_value");
            this.addField("signature");
            this.addField("bases");
            this.addField("doc");
            this.setRef("fullname");
        });
        for (let doc of docs) {
            searchIndex.addDoc(doc);
        }
        console.timeEnd("building search index");
    }

    return (term) => searchIndex.search(term, {
        fields: {
            qualname: {boost: 4},
            fullname: {boost: 2},
            annotation: {boost: 2},
            default_value: {boost: 2},
            signature: {boost: 2},
            bases: {boost: 2},
            doc: {boost: 1},
        },
        expand: true
    });
})();
