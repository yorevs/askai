/*
    Poetry integration extension

    Created: 29th August, 2024
    License: MIT - Please refer to <https://opensource.org/licenses/MIT>
    Copyright (c) 2024, HomeSetup
*/

import groovy.json.JsonSlurper
import groovy.json.JsonOutput

project.ext.projTomlFile = "${project.projectDir}/pyproject.toml"


/* Gather all project requirements and sync with the pyproject file */
task syncPoetryDependencies {
  group = 'Poetry'
  description = "Gather all project requirements and sync with the pyproject file"
    // Set the input file paths
    def requirementsFile = file(project.ext.reqsFile)
    def pyprojectFile = file(project.ext.projTomlFile)

    doLast {
        // Read and parse the requirements.txt file
        def dependencies = [:]
        requirementsFile.eachLine { line ->
            def parts = line.split('==')
            if (parts.size() == 2) {
                dependencies[parts[0].trim()] = parts[1].trim()
            }
        }

        // Read the pyproject.toml file
        def pyproject = pyprojectFile.text

        // Check if tool.poetry.dev-dependencies section exists
        def devDepsRegex = /(?s)(?<=\[tool\.poetry\.dev-dependencies\])(.*?)(?=\[|$)/
        def devDepsMatch = (pyproject =~ devDepsRegex)

        if (devDepsMatch) {
            // Update the existing section
            def devDepsContent = devDepsMatch[0][0].trim()

            dependencies.each { name, version ->
                def pattern = /(?m)^\s*${name}\s*=.*$/
                if (devDepsContent =~ pattern) {
                    devDepsContent = devDepsContent.replaceAll(pattern, "${name} = \"${version}\"")
                } else {
                    devDepsContent += "\n${name} = \"${version}\""
                }
            }

            pyproject = pyproject.replace(devDepsMatch[0][0], devDepsContent)
        } else {
            // Add a new dev-dependencies section
            def newSection = "\n[tool.poetry.dev-dependencies]\n"
            dependencies.each { name, version ->
                newSection += "${name} = \"${version}\"\n"
            }
            pyproject += newSection
        }

        // Write the updated content back to pyproject.toml
        pyprojectFile.text = pyproject

        println "Poetry dev-dependencies have been updated."
    }
}
