name: publish
run-name: Publish

on:
  workflow_dispatch:
    inputs:
      gradle_debug_params:
        description: 'Gradle debug parameters'
        default: ''
        required: false
        type: string
      comment:
        description: 'Publish description'
        default: 'Push for new revision'
        required: false
        type: string
      revision_type:
        description: 'Revision type: Major/Minor/Patch'
        type: choice
        required: true
        default: 'patch'
        options:
          - 'patch'
          - 'minor'
          - 'major'

permissions:
  contents: write

jobs:
  publish:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.publish-it.outputs.version }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'true'
      - uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: ${{ vars.JAVA_VERSION }}
      - uses: gradle/gradle-build-action@v2
        with:
          gradle-version: ${{ vars.GRADLE_VERSION }}
      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      - uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install System packages
        run: |
          sudo apt-get update
          sudo apt-get install -y libmagic1 libmagic-dev portaudio19-dev python3-pyaudio ffmpeg
      - name: Update PIP
        run: pip install --upgrade pip
      - name: Workaround for Python Magic
        run: |
          python3 -m pip install git+https://github.com/julian-r/python-magic.git
      - name: Build preparation
        id: build_init
        run: |
          echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
      - name: Install Python tools
        run: gradle installBuildTools build copyLicenseAndReadme ${{ inputs.gradle_debug_params }}
      - name: Publish
        id: publish-it
        run: |
          bumpver update "--${{ inputs.revision_type }}"
          version="$(awk '/./{line=$0} END{print line}' $(find . -type f -name .version))"
          echo "version=$( echo "$version" )" >> $GITHUB_OUTPUT
          git config --global user.name "$(git log -n 1 --pretty=format:%an)"
          git config --global user.email "$(git log -n 1 --pretty=format:%ae)"
          git config github.token "${{ secrets.GITHUB_TOKEN }}"
          git commit -a -m "[@${{ github.actor }}] ${{ inputs.comment }}"
          git pull --rebase -Xtheirs && git push --atomic origin HEAD
          git tag -a v"$version" -m "${{ inputs.comment }}"
          git push origin --tags
          echo "## Revision Information" >> $GITHUB_STEP_SUMMARY
          echo "- Branch: ${{ steps.build_init.outputs.branch }}" >> $GITHUB_STEP_SUMMARY
          echo "- Version: $version" >> $GITHUB_STEP_SUMMARY
